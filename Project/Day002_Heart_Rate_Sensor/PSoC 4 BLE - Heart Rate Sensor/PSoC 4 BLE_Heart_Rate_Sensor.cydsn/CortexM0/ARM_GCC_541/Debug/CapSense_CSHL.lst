ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_rawFilterData1,2,4
  20              		.global	CapSense_sensorBaseline
  21              		.bss
  22              		.align	2
  23              		.type	CapSense_sensorBaseline, %object
  24              		.size	CapSense_sensorBaseline, 2
  25              	CapSense_sensorBaseline:
  26 0000 0000     		.space	2
  27              		.global	CapSense_sensorBaselineLow
  28 0002 0000     		.align	2
  29              		.type	CapSense_sensorBaselineLow, %object
  30              		.size	CapSense_sensorBaselineLow, 1
  31              	CapSense_sensorBaselineLow:
  32 0004 00       		.space	1
  33              		.global	CapSense_sensorSignal
  34 0005 000000   		.align	2
  35              		.type	CapSense_sensorSignal, %object
  36              		.size	CapSense_sensorSignal, 1
  37              	CapSense_sensorSignal:
  38 0008 00       		.space	1
  39              		.global	CapSense_sensorOnMask
  40 0009 000000   		.align	2
  41              		.type	CapSense_sensorOnMask, %object
  42              		.size	CapSense_sensorOnMask, 1
  43              	CapSense_sensorOnMask:
  44 000c 00       		.space	1
  45              		.comm	CapSense_lowBaselineResetCnt,1,4
  46              		.global	CapSense_lowBaselineReset
  47              		.data
  48              		.align	2
  49              		.type	CapSense_lowBaselineReset, %object
  50              		.size	CapSense_lowBaselineReset, 1
  51              	CapSense_lowBaselineReset:
  52 0000 1E       		.byte	30
  53              		.global	CapSense_enableRawFilters
  54              		.type	CapSense_enableRawFilters, %object
  55              		.size	CapSense_enableRawFilters, 1
  56              	CapSense_enableRawFilters:
  57 0001 01       		.byte	1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 2


  58              		.comm	CapSense_fingerThreshold,1,4
  59              		.comm	CapSense_noiseThreshold,1,4
  60              		.comm	CapSense_negativeNoiseThreshold,1,4
  61              		.comm	CapSense_hysteresis,1,4
  62              		.global	CapSense_debounce
  63 0002 0000     		.align	2
  64              		.type	CapSense_debounce, %object
  65              		.size	CapSense_debounce, 1
  66              	CapSense_debounce:
  67 0004 05       		.byte	5
  68              		.bss
  69 000d 000000   		.align	2
  70              	CapSense_debounceCounter:
  71 0010 0000     		.space	2
  72              		.global	CapSense_rawDataIndex
  73              		.section	.rodata
  74              		.align	2
  75              		.type	CapSense_rawDataIndex, %object
  76              		.size	CapSense_rawDataIndex, 1
  77              	CapSense_rawDataIndex:
  78 0000 00       		.space	1
  79              		.global	CapSense_numberOfSensors
  80 0001 000000   		.align	2
  81              		.type	CapSense_numberOfSensors, %object
  82              		.size	CapSense_numberOfSensors, 1
  83              	CapSense_numberOfSensors:
  84 0004 01       		.byte	1
  85              		.section	.text.CapSense_BaseInit,"ax",%progbits
  86              		.align	2
  87              		.global	CapSense_BaseInit
  88              		.code	16
  89              		.thumb_func
  90              		.type	CapSense_BaseInit, %function
  91              	CapSense_BaseInit:
  92              	.LFB34:
  93              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 3


  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 4


  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 5


  94              		.loc 1 135 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 16
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 84B0     		sub	sp, sp, #16
 103              		.cfi_def_cfa_offset 24
 104 0004 00AF     		add	r7, sp, #0
 105              		.cfi_def_cfa_register 7
 106 0006 7860     		str	r0, [r7, #4]
 136:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 137:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 138:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 107              		.loc 1 138 0
 108 0008 0F23     		movs	r3, #15
 109 000a FB18     		adds	r3, r7, r3
 110 000c 1649     		ldr	r1, .L2
 111 000e 7A68     		ldr	r2, [r7, #4]
 112 0010 8A18     		adds	r2, r1, r2
 113 0012 1278     		ldrb	r2, [r2]
 114 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 141:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 142:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 152:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 115              		.loc 1 152 0
 116 0016 154B     		ldr	r3, .L2+4
 117 0018 7A68     		ldr	r2, [r7, #4]
 118 001a 5200     		lsls	r2, r2, #1
 119 001c D15A     		ldrh	r1, [r2, r3]
 120 001e 144B     		ldr	r3, .L2+8
 121 0020 7A68     		ldr	r2, [r7, #4]
 122 0022 5200     		lsls	r2, r2, #1
 123 0024 D152     		strh	r1, [r2, r3]
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 124              		.loc 1 153 0
 125 0026 134A     		ldr	r2, .L2+12
 126 0028 7B68     		ldr	r3, [r7, #4]
 127 002a D318     		adds	r3, r2, r3
 128 002c 0022     		movs	r2, #0
 129 002e 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 130              		.loc 1 154 0
 131 0030 114A     		ldr	r2, .L2+16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 6


 132 0032 7B68     		ldr	r3, [r7, #4]
 133 0034 D318     		adds	r3, r2, r3
 134 0036 0022     		movs	r2, #0
 135 0038 1A70     		strb	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 136              		.loc 1 156 0
 137 003a 0F23     		movs	r3, #15
 138 003c FB18     		adds	r3, r7, r3
 139 003e 1B78     		ldrb	r3, [r3]
 140 0040 0F22     		movs	r2, #15
 141 0042 BA18     		adds	r2, r7, r2
 142 0044 1278     		ldrb	r2, [r2]
 143 0046 0D49     		ldr	r1, .L2+20
 144 0048 895C     		ldrb	r1, [r1, r2]
 145 004a 0D4A     		ldr	r2, .L2+24
 146 004c D154     		strb	r1, [r2, r3]
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 147              		.loc 1 171 0
 148 004e 074B     		ldr	r3, .L2+4
 149 0050 7A68     		ldr	r2, [r7, #4]
 150 0052 5200     		lsls	r2, r2, #1
 151 0054 D15A     		ldrh	r1, [r2, r3]
 152 0056 0B4B     		ldr	r3, .L2+28
 153 0058 7A68     		ldr	r2, [r7, #4]
 154 005a 5200     		lsls	r2, r2, #1
 155 005c D152     		strh	r1, [r2, r3]
 172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 178:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 183:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 156              		.loc 1 183 0
 157 005e C046     		nop
 158 0060 BD46     		mov	sp, r7
 159 0062 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 7


 160              		@ sp needed
 161 0064 80BD     		pop	{r7, pc}
 162              	.L3:
 163 0066 C046     		.align	2
 164              	.L2:
 165 0068 00000000 		.word	CapSense_widgetNumber
 166 006c 00000000 		.word	CapSense_sensorRaw
 167 0070 00000000 		.word	CapSense_sensorBaseline
 168 0074 00000000 		.word	CapSense_sensorBaselineLow
 169 0078 00000000 		.word	CapSense_sensorSignal
 170 007c 00000000 		.word	CapSense_debounce
 171 0080 10000000 		.word	CapSense_debounceCounter
 172 0084 00000000 		.word	CapSense_rawFilterData1
 173              		.cfi_endproc
 174              	.LFE34:
 175              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 176              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 177              		.align	2
 178              		.global	CapSense_InitializeSensorBaseline
 179              		.code	16
 180              		.thumb_func
 181              		.type	CapSense_InitializeSensorBaseline, %function
 182              	CapSense_InitializeSensorBaseline:
 183              	.LFB35:
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 184              		.loc 1 211 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 8


 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 82B0     		sub	sp, sp, #8
 193              		.cfi_def_cfa_offset 16
 194 0004 00AF     		add	r7, sp, #0
 195              		.cfi_def_cfa_register 7
 196 0006 7860     		str	r0, [r7, #4]
 212:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 213:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 197              		.loc 1 213 0
 198 0008 7B68     		ldr	r3, [r7, #4]
 199 000a 1800     		movs	r0, r3
 200 000c FFF7FEFF 		bl	CapSense_ScanSensor
 214:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 201              		.loc 1 214 0
 202 0010 C046     		nop
 203              	.L5:
 204              		.loc 1 214 0 is_stmt 0 discriminator 1
 205 0012 FFF7FEFF 		bl	CapSense_IsBusy
 206 0016 031E     		subs	r3, r0, #0
 207 0018 FBD1     		bne	.L5
 215:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 216:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 217:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 208              		.loc 1 220 0 is_stmt 1
 209 001a 7B68     		ldr	r3, [r7, #4]
 210 001c 1800     		movs	r0, r3
 211 001e FFF7FEFF 		bl	CapSense_BaseInit
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 212              		.loc 1 221 0
 213 0022 C046     		nop
 214 0024 BD46     		mov	sp, r7
 215 0026 02B0     		add	sp, sp, #8
 216              		@ sp needed
 217 0028 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE35:
 220              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 221 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 222              		.align	2
 223              		.global	CapSense_InitializeAllBaselines
 224              		.code	16
 225              		.thumb_func
 226              		.type	CapSense_InitializeAllBaselines, %function
 227              	CapSense_InitializeAllBaselines:
 228              	.LFB36:
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 9


 229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 229              		.loc 1 248 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 241              		.loc 1 251 0
 242 0006 0023     		movs	r3, #0
 243 0008 7B60     		str	r3, [r7, #4]
 244 000a 06E0     		b	.L7
 245              	.L8:
 252:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 246              		.loc 1 253 0 discriminator 3
 247 000c 7B68     		ldr	r3, [r7, #4]
 248 000e 1800     		movs	r0, r3
 249 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 250              		.loc 1 251 0 discriminator 3
 251 0014 7B68     		ldr	r3, [r7, #4]
 252 0016 0133     		adds	r3, r3, #1
 253 0018 7B60     		str	r3, [r7, #4]
 254              	.L7:
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 255              		.loc 1 251 0 is_stmt 0 discriminator 1
 256 001a 7B68     		ldr	r3, [r7, #4]
 257 001c 002B     		cmp	r3, #0
 258 001e F5D0     		beq	.L8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 10


 254:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 259              		.loc 1 255 0 is_stmt 1
 260 0020 C046     		nop
 261 0022 BD46     		mov	sp, r7
 262 0024 02B0     		add	sp, sp, #8
 263              		@ sp needed
 264 0026 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE36:
 267              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 268              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 269              		.align	2
 270              		.global	CapSense_InitializeEnabledBaselines
 271              		.code	16
 272              		.thumb_func
 273              		.type	CapSense_InitializeEnabledBaselines, %function
 274              	CapSense_InitializeEnabledBaselines:
 275              	.LFB37:
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 276              		.loc 1 283 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 11


 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 285:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 287:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 288              		.loc 1 287 0
 289 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 288:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 290              		.loc 1 288 0
 291 000a C046     		nop
 292              	.L10:
 293              		.loc 1 288 0 is_stmt 0 discriminator 1
 294 000c FFF7FEFF 		bl	CapSense_IsBusy
 295 0010 031E     		subs	r3, r0, #0
 296 0012 FBD1     		bne	.L10
 289:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 290:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 297              		.loc 1 293 0 is_stmt 1
 298 0014 0023     		movs	r3, #0
 299 0016 7B60     		str	r3, [r7, #4]
 300 0018 11E0     		b	.L11
 301              	.L13:
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 302              		.loc 1 295 0
 303 001a 7A68     		ldr	r2, [r7, #4]
 304 001c 0B4B     		ldr	r3, .L14
 305 001e 1100     		movs	r1, r2
 306 0020 1800     		movs	r0, r3
 307 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 308 0026 0300     		movs	r3, r0
 309 0028 3B60     		str	r3, [r7]
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 310              		.loc 1 298 0
 311 002a 3B68     		ldr	r3, [r7]
 312 002c 002B     		cmp	r3, #0
 313 002e 03D0     		beq	.L12
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 314              		.loc 1 301 0
 315 0030 7B68     		ldr	r3, [r7, #4]
 316 0032 1800     		movs	r0, r3
 317 0034 FFF7FEFF 		bl	CapSense_BaseInit
 318              	.L12:
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 319              		.loc 1 293 0 discriminator 2
 320 0038 7B68     		ldr	r3, [r7, #4]
 321 003a 0133     		adds	r3, r3, #1
 322 003c 7B60     		str	r3, [r7, #4]
 323              	.L11:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 12


 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 324              		.loc 1 293 0 is_stmt 0 discriminator 1
 325 003e 7B68     		ldr	r3, [r7, #4]
 326 0040 002B     		cmp	r3, #0
 327 0042 EAD0     		beq	.L13
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 304:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 328              		.loc 1 304 0 is_stmt 1
 329 0044 C046     		nop
 330 0046 BD46     		mov	sp, r7
 331 0048 02B0     		add	sp, sp, #8
 332              		@ sp needed
 333 004a 80BD     		pop	{r7, pc}
 334              	.L15:
 335              		.align	2
 336              	.L14:
 337 004c 00000000 		.word	CapSense_sensorEnableMask
 338              		.cfi_endproc
 339              	.LFE37:
 340              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 341              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 342              		.align	2
 343              		.global	CapSense_UpdateBaselineNoThreshold
 344              		.code	16
 345              		.thumb_func
 346              		.type	CapSense_UpdateBaselineNoThreshold, %function
 347              	CapSense_UpdateBaselineNoThreshold:
 348              	.LFB38:
 305:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 13


 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 349              		.loc 1 348 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 24
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 90B5     		push	{r4, r7, lr}
 354              		.cfi_def_cfa_offset 12
 355              		.cfi_offset 4, -12
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 87B0     		sub	sp, sp, #28
 359              		.cfi_def_cfa_offset 40
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 7860     		str	r0, [r7, #4]
 349:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 350:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 351:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 352:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 363              		.loc 1 353 0
 364 0008 0F23     		movs	r3, #15
 365 000a FB18     		adds	r3, r7, r3
 366 000c 7D49     		ldr	r1, .L29
 367 000e 7A68     		ldr	r2, [r7, #4]
 368 0010 8A18     		adds	r2, r1, r2
 369 0012 1278     		ldrb	r2, [r2]
 370 0014 1A70     		strb	r2, [r3]
 354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 371              		.loc 1 362 0
 372 0016 0F23     		movs	r3, #15
 373 0018 FB18     		adds	r3, r7, r3
 374 001a 1A78     		ldrb	r2, [r3]
 375 001c 0E23     		movs	r3, #14
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 14


 376 001e FB18     		adds	r3, r7, r3
 377 0020 7949     		ldr	r1, .L29+4
 378 0022 8A5C     		ldrb	r2, [r1, r2]
 379 0024 1A70     		strb	r2, [r3]
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 380              		.loc 1 363 0
 381 0026 1023     		movs	r3, #16
 382 0028 FB18     		adds	r3, r7, r3
 383 002a 784A     		ldr	r2, .L29+8
 384 002c 7968     		ldr	r1, [r7, #4]
 385 002e 4900     		lsls	r1, r1, #1
 386 0030 8A5A     		ldrh	r2, [r1, r2]
 387 0032 1A80     		strh	r2, [r3]
 364:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 388              		.loc 1 366 0
 389 0034 764B     		ldr	r3, .L29+12
 390 0036 1B78     		ldrb	r3, [r3]
 391 0038 002B     		cmp	r3, #0
 392 003a 15D0     		beq	.L17
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 374:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 393              		.loc 1 387 0
 394 003c 754B     		ldr	r3, .L29+16
 395 003e 7A68     		ldr	r2, [r7, #4]
 396 0040 5200     		lsls	r2, r2, #1
 397 0042 D25A     		ldrh	r2, [r2, r3]
 398 0044 1023     		movs	r3, #16
 399 0046 FC18     		adds	r4, r7, r3
 400 0048 1023     		movs	r3, #16
 401 004a FB18     		adds	r3, r7, r3
 402 004c 1B88     		ldrh	r3, [r3]
 403 004e 1100     		movs	r1, r2
 404 0050 1800     		movs	r0, r3
 405 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 406 0056 0300     		movs	r3, r0
 407 0058 2380     		strh	r3, [r4]
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 15


 388:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408              		.loc 1 388 0
 409 005a 6E4B     		ldr	r3, .L29+16
 410 005c 7A68     		ldr	r2, [r7, #4]
 411 005e 5200     		lsls	r2, r2, #1
 412 0060 1021     		movs	r1, #16
 413 0062 7918     		adds	r1, r7, r1
 414 0064 0988     		ldrh	r1, [r1]
 415 0066 D152     		strh	r1, [r2, r3]
 416              	.L17:
 389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 397:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 407:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 417              		.loc 1 409 0
 418 0068 7B68     		ldr	r3, [r7, #4]
 419 006a D9B2     		uxtb	r1, r3
 420 006c 674A     		ldr	r2, .L29+8
 421 006e 6A4B     		ldr	r3, .L29+20
 422 0070 1800     		movs	r0, r3
 423 0072 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 411:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 424              		.loc 1 414 0
 425 0076 694B     		ldr	r3, .L29+24
 426 0078 7A68     		ldr	r2, [r7, #4]
 427 007a 5200     		lsls	r2, r2, #1
 428 007c D35A     		ldrh	r3, [r2, r3]
 429 007e 1022     		movs	r2, #16
 430 0080 BA18     		adds	r2, r7, r2
 431 0082 1288     		ldrh	r2, [r2]
 432 0084 9A42     		cmp	r2, r3
 433 0086 12D3     		bcc	.L18
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 434              		.loc 1 416 0
 435 0088 654A     		ldr	r2, .L29+28
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 16


 436 008a 7B68     		ldr	r3, [r7, #4]
 437 008c D318     		adds	r3, r2, r3
 438 008e 0022     		movs	r2, #0
 439 0090 1A70     		strb	r2, [r3]
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 440              		.loc 1 417 0
 441 0092 624B     		ldr	r3, .L29+24
 442 0094 7A68     		ldr	r2, [r7, #4]
 443 0096 5200     		lsls	r2, r2, #1
 444 0098 D25A     		ldrh	r2, [r2, r3]
 445 009a 1223     		movs	r3, #18
 446 009c FB18     		adds	r3, r7, r3
 447 009e 1021     		movs	r1, #16
 448 00a0 7918     		adds	r1, r7, r1
 449 00a2 0988     		ldrh	r1, [r1]
 450 00a4 8A1A     		subs	r2, r1, r2
 451 00a6 1A80     		strh	r2, [r3]
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 452              		.loc 1 418 0
 453 00a8 0123     		movs	r3, #1
 454 00aa 7B61     		str	r3, [r7, #20]
 455 00ac 0CE0     		b	.L19
 456              	.L18:
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 457              		.loc 1 422 0
 458 00ae 5B4B     		ldr	r3, .L29+24
 459 00b0 7A68     		ldr	r2, [r7, #4]
 460 00b2 5200     		lsls	r2, r2, #1
 461 00b4 D15A     		ldrh	r1, [r2, r3]
 462 00b6 1223     		movs	r3, #18
 463 00b8 FB18     		adds	r3, r7, r3
 464 00ba 1022     		movs	r2, #16
 465 00bc BA18     		adds	r2, r7, r2
 466 00be 1288     		ldrh	r2, [r2]
 467 00c0 8A1A     		subs	r2, r1, r2
 468 00c2 1A80     		strh	r2, [r3]
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 469              		.loc 1 423 0
 470 00c4 0023     		movs	r3, #0
 471 00c6 7B61     		str	r3, [r7, #20]
 472              	.L19:
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 425:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 473              		.loc 1 427 0
 474 00c8 7B69     		ldr	r3, [r7, #20]
 475 00ca 002B     		cmp	r3, #0
 476 00cc 2AD1     		bne	.L20
 477              		.loc 1 427 0 is_stmt 0 discriminator 1
 478 00ce 0F23     		movs	r3, #15
 479 00d0 FB18     		adds	r3, r7, r3
 480 00d2 1B78     		ldrb	r3, [r3]
 481 00d4 534A     		ldr	r2, .L29+32
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 17


 482 00d6 D35C     		ldrb	r3, [r2, r3]
 483 00d8 9BB2     		uxth	r3, r3
 484 00da 1222     		movs	r2, #18
 485 00dc BA18     		adds	r2, r7, r2
 486 00de 1288     		ldrh	r2, [r2]
 487 00e0 9A42     		cmp	r2, r3
 488 00e2 1FD9     		bls	.L20
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 489              		.loc 1 432 0 is_stmt 1
 490 00e4 4E4A     		ldr	r2, .L29+28
 491 00e6 7B68     		ldr	r3, [r7, #4]
 492 00e8 D318     		adds	r3, r2, r3
 493 00ea 1A78     		ldrb	r2, [r3]
 494 00ec 4E49     		ldr	r1, .L29+36
 495 00ee 7B68     		ldr	r3, [r7, #4]
 496 00f0 CB18     		adds	r3, r1, r3
 497 00f2 1B78     		ldrb	r3, [r3]
 498 00f4 9A42     		cmp	r2, r3
 499 00f6 09D3     		bcc	.L21
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 500              		.loc 1 434 0
 501 00f8 7B68     		ldr	r3, [r7, #4]
 502 00fa 1800     		movs	r0, r3
 503 00fc FFF7FEFF 		bl	CapSense_BaseInit
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 504              		.loc 1 435 0
 505 0100 474A     		ldr	r2, .L29+28
 506 0102 7B68     		ldr	r3, [r7, #4]
 507 0104 D318     		adds	r3, r2, r3
 508 0106 0022     		movs	r2, #0
 509 0108 1A70     		strb	r2, [r3]
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 510              		.loc 1 432 0
 511 010a 51E0     		b	.L23
 512              	.L21:
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 513              		.loc 1 439 0
 514 010c 444A     		ldr	r2, .L29+28
 515 010e 7B68     		ldr	r3, [r7, #4]
 516 0110 D318     		adds	r3, r2, r3
 517 0112 1B78     		ldrb	r3, [r3]
 518 0114 0133     		adds	r3, r3, #1
 519 0116 D9B2     		uxtb	r1, r3
 520 0118 414A     		ldr	r2, .L29+28
 521 011a 7B68     		ldr	r3, [r7, #4]
 522 011c D318     		adds	r3, r2, r3
 523 011e 0A1C     		adds	r2, r1, #0
 524 0120 1A70     		strb	r2, [r3]
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 18


 525              		.loc 1 432 0
 526 0122 45E0     		b	.L23
 527              	.L20:
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 528              		.loc 1 447 0
 529 0124 0E23     		movs	r3, #14
 530 0126 FB18     		adds	r3, r7, r3
 531 0128 1B78     		ldrb	r3, [r3]
 532 012a 9BB2     		uxth	r3, r3
 533 012c 1222     		movs	r2, #18
 534 012e BA18     		adds	r2, r7, r2
 535 0130 1288     		ldrh	r2, [r2]
 536 0132 9A42     		cmp	r2, r3
 537 0134 0DD9     		bls	.L24
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 538              		.loc 1 448 0 discriminator 1
 539 0136 0F23     		movs	r3, #15
 540 0138 FB18     		adds	r3, r7, r3
 541 013a 1B78     		ldrb	r3, [r3]
 542 013c 394A     		ldr	r2, .L29+32
 543 013e D35C     		ldrb	r3, [r2, r3]
 544 0140 9BB2     		uxth	r3, r3
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 545              		.loc 1 447 0 discriminator 1
 546 0142 1222     		movs	r2, #18
 547 0144 BA18     		adds	r2, r7, r2
 548 0146 1288     		ldrh	r2, [r2]
 549 0148 9A42     		cmp	r2, r3
 550 014a 31D2     		bcs	.L23
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 551              		.loc 1 449 0
 552 014c 7B69     		ldr	r3, [r7, #20]
 553 014e 002B     		cmp	r3, #0
 554 0150 2ED1     		bne	.L23
 555              	.L24:
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 556              		.loc 1 460 0
 557 0152 324B     		ldr	r3, .L29+24
 558 0154 7A68     		ldr	r2, [r7, #4]
 559 0156 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 19


 560 0158 D35A     		ldrh	r3, [r2, r3]
 561 015a 1B02     		lsls	r3, r3, #8
 562 015c BB60     		str	r3, [r7, #8]
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 563              		.loc 1 461 0
 564 015e 334A     		ldr	r2, .L29+40
 565 0160 7B68     		ldr	r3, [r7, #4]
 566 0162 D318     		adds	r3, r2, r3
 567 0164 1B78     		ldrb	r3, [r3]
 568 0166 1A00     		movs	r2, r3
 569 0168 BB68     		ldr	r3, [r7, #8]
 570 016a 1343     		orrs	r3, r2
 571 016c BB60     		str	r3, [r7, #8]
 462:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 572              		.loc 1 464 0
 573 016e 1023     		movs	r3, #16
 574 0170 FB18     		adds	r3, r7, r3
 575 0172 1B88     		ldrh	r3, [r3]
 576 0174 BA68     		ldr	r2, [r7, #8]
 577 0176 D318     		adds	r3, r2, r3
 578 0178 BB60     		str	r3, [r7, #8]
 465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 579              		.loc 1 467 0
 580 017a 284B     		ldr	r3, .L29+24
 581 017c 7A68     		ldr	r2, [r7, #4]
 582 017e 5200     		lsls	r2, r2, #1
 583 0180 D35A     		ldrh	r3, [r2, r3]
 584 0182 1A00     		movs	r2, r3
 585 0184 BB68     		ldr	r3, [r7, #8]
 586 0186 9B1A     		subs	r3, r3, r2
 587 0188 BB60     		str	r3, [r7, #8]
 468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 588              		.loc 1 470 0
 589 018a BB68     		ldr	r3, [r7, #8]
 590 018c 1B0A     		lsrs	r3, r3, #8
 591 018e 99B2     		uxth	r1, r3
 592 0190 224B     		ldr	r3, .L29+24
 593 0192 7A68     		ldr	r2, [r7, #4]
 594 0194 5200     		lsls	r2, r2, #1
 595 0196 D152     		strh	r1, [r2, r3]
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 596              		.loc 1 471 0
 597 0198 BB68     		ldr	r3, [r7, #8]
 598 019a D9B2     		uxtb	r1, r3
 599 019c 234A     		ldr	r2, .L29+40
 600 019e 7B68     		ldr	r3, [r7, #4]
 601 01a0 D318     		adds	r3, r2, r3
 602 01a2 0A1C     		adds	r2, r1, #0
 603 01a4 1A70     		strb	r2, [r3]
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 20


 604              		.loc 1 473 0
 605 01a6 1E4A     		ldr	r2, .L29+28
 606 01a8 7B68     		ldr	r3, [r7, #4]
 607 01aa D318     		adds	r3, r2, r3
 608 01ac 0022     		movs	r2, #0
 609 01ae 1A70     		strb	r2, [r3]
 610              	.L23:
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 478:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 611              		.loc 1 480 0
 612 01b0 0E23     		movs	r3, #14
 613 01b2 FB18     		adds	r3, r7, r3
 614 01b4 1B78     		ldrb	r3, [r3]
 615 01b6 9BB2     		uxth	r3, r3
 616 01b8 1222     		movs	r2, #18
 617 01ba BA18     		adds	r2, r7, r2
 618 01bc 1288     		ldrh	r2, [r2]
 619 01be 9A42     		cmp	r2, r3
 620 01c0 17D9     		bls	.L25
 621              		.loc 1 480 0 is_stmt 0 discriminator 1
 622 01c2 7B69     		ldr	r3, [r7, #20]
 623 01c4 002B     		cmp	r3, #0
 624 01c6 14D0     		beq	.L25
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 625              		.loc 1 484 0 is_stmt 1
 626 01c8 1223     		movs	r3, #18
 627 01ca FB18     		adds	r3, r7, r3
 628 01cc 1B88     		ldrh	r3, [r3]
 629 01ce FF2B     		cmp	r3, #255
 630 01d0 05D9     		bls	.L26
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 631              		.loc 1 486 0
 632 01d2 174A     		ldr	r2, .L29+44
 633 01d4 7B68     		ldr	r3, [r7, #4]
 634 01d6 D318     		adds	r3, r2, r3
 635 01d8 FF22     		movs	r2, #255
 636 01da 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 637              		.loc 1 484 0
 638 01dc 0EE0     		b	.L28
 639              	.L26:
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 640              		.loc 1 490 0
 641 01de 1223     		movs	r3, #18
 642 01e0 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 21


 643 01e2 1B88     		ldrh	r3, [r3]
 644 01e4 D9B2     		uxtb	r1, r3
 645 01e6 124A     		ldr	r2, .L29+44
 646 01e8 7B68     		ldr	r3, [r7, #4]
 647 01ea D318     		adds	r3, r2, r3
 648 01ec 0A1C     		adds	r2, r1, #0
 649 01ee 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 650              		.loc 1 484 0
 651 01f0 04E0     		b	.L28
 652              	.L25:
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 653              		.loc 1 499 0
 654 01f2 0F4A     		ldr	r2, .L29+44
 655 01f4 7B68     		ldr	r3, [r7, #4]
 656 01f6 D318     		adds	r3, r2, r3
 657 01f8 0022     		movs	r2, #0
 658 01fa 1A70     		strb	r2, [r3]
 659              	.L28:
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 501:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 506:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 660              		.loc 1 506 0
 661 01fc C046     		nop
 662 01fe BD46     		mov	sp, r7
 663 0200 07B0     		add	sp, sp, #28
 664              		@ sp needed
 665 0202 90BD     		pop	{r4, r7, pc}
 666              	.L30:
 667              		.align	2
 668              	.L29:
 669 0204 00000000 		.word	CapSense_widgetNumber
 670 0208 00000000 		.word	CapSense_noiseThreshold
 671 020c 00000000 		.word	CapSense_sensorRaw
 672 0210 00000000 		.word	CapSense_enableRawFilters
 673 0214 00000000 		.word	CapSense_rawFilterData1
 674 0218 00000000 		.word	CapSense_config
 675 021c 00000000 		.word	CapSense_sensorBaseline
 676 0220 00000000 		.word	CapSense_lowBaselineResetCnt
 677 0224 00000000 		.word	CapSense_negativeNoiseThreshold
 678 0228 00000000 		.word	CapSense_lowBaselineReset
 679 022c 00000000 		.word	CapSense_sensorBaselineLow
 680 0230 00000000 		.word	CapSense_sensorSignal
 681              		.cfi_endproc
 682              	.LFE38:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 22


 683              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 684              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 685              		.align	2
 686              		.global	CapSense_UpdateSensorBaseline
 687              		.code	16
 688              		.thumb_func
 689              		.type	CapSense_UpdateSensorBaseline, %function
 690              	CapSense_UpdateSensorBaseline:
 691              	.LFB39:
 507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 511:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 692              		.loc 1 540 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696 0000 80B5     		push	{r7, lr}
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 82B0     		sub	sp, sp, #8
 701              		.cfi_def_cfa_offset 16
 702 0004 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 704 0006 7860     		str	r0, [r7, #4]
 541:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 23


 542:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 544:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 547:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 705              		.loc 1 552 0
 706 0008 7B68     		ldr	r3, [r7, #4]
 707 000a 1800     		movs	r0, r3
 708 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 709              		.loc 1 555 0
 710 0010 7B68     		ldr	r3, [r7, #4]
 711 0012 1800     		movs	r0, r3
 712 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 713              		.loc 1 561 0
 714 0018 C046     		nop
 715 001a BD46     		mov	sp, r7
 716 001c 02B0     		add	sp, sp, #8
 717              		@ sp needed
 718 001e 80BD     		pop	{r7, pc}
 719              		.cfi_endproc
 720              	.LFE39:
 721              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 722              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 723              		.align	2
 724              		.global	CapSense_UpdateEnabledBaselines
 725              		.code	16
 726              		.thumb_func
 727              		.type	CapSense_UpdateEnabledBaselines, %function
 728              	CapSense_UpdateEnabledBaselines:
 729              	.LFB40:
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 24


 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 730              		.loc 1 594 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 8
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734 0000 80B5     		push	{r7, lr}
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 738 0002 82B0     		sub	sp, sp, #8
 739              		.cfi_def_cfa_offset 16
 740 0004 00AF     		add	r7, sp, #0
 741              		.cfi_def_cfa_register 7
 595:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 596:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 742              		.loc 1 598 0
 743 0006 0023     		movs	r3, #0
 744 0008 7B60     		str	r3, [r7, #4]
 745 000a 11E0     		b	.L33
 746              	.L35:
 599:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 747              		.loc 1 600 0
 748 000c 7A68     		ldr	r2, [r7, #4]
 749 000e 0C4B     		ldr	r3, .L36
 750 0010 1100     		movs	r1, r2
 751 0012 1800     		movs	r0, r3
 752 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 753 0018 0300     		movs	r3, r0
 754 001a 3B60     		str	r3, [r7]
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 755              		.loc 1 602 0
 756 001c 3B68     		ldr	r3, [r7]
 757 001e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 25


 758 0020 03D0     		beq	.L34
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 759              		.loc 1 604 0
 760 0022 7B68     		ldr	r3, [r7, #4]
 761 0024 1800     		movs	r0, r3
 762 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 763              	.L34:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 764              		.loc 1 598 0 discriminator 2
 765 002a 7B68     		ldr	r3, [r7, #4]
 766 002c 0133     		adds	r3, r3, #1
 767 002e 7B60     		str	r3, [r7, #4]
 768              	.L33:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 769              		.loc 1 598 0 is_stmt 0 discriminator 1
 770 0030 7B68     		ldr	r3, [r7, #4]
 771 0032 002B     		cmp	r3, #0
 772 0034 EAD0     		beq	.L35
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 773              		.loc 1 607 0 is_stmt 1
 774 0036 C046     		nop
 775 0038 BD46     		mov	sp, r7
 776 003a 02B0     		add	sp, sp, #8
 777              		@ sp needed
 778 003c 80BD     		pop	{r7, pc}
 779              	.L37:
 780 003e C046     		.align	2
 781              	.L36:
 782 0040 00000000 		.word	CapSense_sensorEnableMask
 783              		.cfi_endproc
 784              	.LFE40:
 785              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 786              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 787              		.align	2
 788              		.global	CapSense_UpdateWidgetBaseline
 789              		.code	16
 790              		.thumb_func
 791              		.type	CapSense_UpdateWidgetBaseline, %function
 792              	CapSense_UpdateWidgetBaseline:
 793              	.LFB41:
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 26


 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 794              		.loc 1 639 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 32
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 88B0     		sub	sp, sp, #32
 803              		.cfi_def_cfa_offset 40
 804 0004 00AF     		add	r7, sp, #0
 805              		.cfi_def_cfa_register 7
 806 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 641:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 642:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 643:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 644:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 807              		.loc 1 647 0
 808 0008 0123     		movs	r3, #1
 809 000a BB61     		str	r3, [r7, #24]
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 810              		.loc 1 650 0
 811 000c 0023     		movs	r3, #0
 812 000e 7B61     		str	r3, [r7, #20]
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 813              		.loc 1 653 0
 814 0010 0023     		movs	r3, #0
 815 0012 1A00     		movs	r2, r3
 816 0014 BB69     		ldr	r3, [r7, #24]
 817 0016 D318     		adds	r3, r2, r3
 818 0018 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 27


 654:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 819              		.loc 1 655 0
 820 001a 7B69     		ldr	r3, [r7, #20]
 821 001c FB61     		str	r3, [r7, #28]
 822 001e 11E0     		b	.L39
 823              	.L41:
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 824              		.loc 1 657 0
 825 0020 FA69     		ldr	r2, [r7, #28]
 826 0022 0C4B     		ldr	r3, .L42
 827 0024 1100     		movs	r1, r2
 828 0026 1800     		movs	r0, r3
 829 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 830 002c 0300     		movs	r3, r0
 831 002e FB60     		str	r3, [r7, #12]
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 832              		.loc 1 659 0
 833 0030 FB68     		ldr	r3, [r7, #12]
 834 0032 002B     		cmp	r3, #0
 835 0034 03D0     		beq	.L40
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 836              		.loc 1 661 0
 837 0036 FB69     		ldr	r3, [r7, #28]
 838 0038 1800     		movs	r0, r3
 839 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 840              	.L40:
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 841              		.loc 1 655 0 discriminator 2
 842 003e FB69     		ldr	r3, [r7, #28]
 843 0040 0133     		adds	r3, r3, #1
 844 0042 FB61     		str	r3, [r7, #28]
 845              	.L39:
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 846              		.loc 1 655 0 is_stmt 0 discriminator 1
 847 0044 FA69     		ldr	r2, [r7, #28]
 848 0046 3B69     		ldr	r3, [r7, #16]
 849 0048 9A42     		cmp	r2, r3
 850 004a E9D3     		bcc	.L41
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 851              		.loc 1 664 0 is_stmt 1
 852 004c C046     		nop
 853 004e BD46     		mov	sp, r7
 854 0050 08B0     		add	sp, sp, #32
 855              		@ sp needed
 856 0052 80BD     		pop	{r7, pc}
 857              	.L43:
 858              		.align	2
 859              	.L42:
 860 0054 00000000 		.word	CapSense_sensorEnableMask
 861              		.cfi_endproc
 862              	.LFE41:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 28


 863              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 864              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 865              		.align	2
 866              		.global	CapSense_GetBaselineData
 867              		.code	16
 868              		.thumb_func
 869              		.type	CapSense_GetBaselineData, %function
 870              	CapSense_GetBaselineData:
 871              	.LFB42:
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 872              		.loc 1 688 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 8
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 80B5     		push	{r7, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 7, -8
 879              		.cfi_offset 14, -4
 880 0002 82B0     		sub	sp, sp, #8
 881              		.cfi_def_cfa_offset 16
 882 0004 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
 884 0006 7860     		str	r0, [r7, #4]
 689:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 885              		.loc 1 689 0
 886 0008 034B     		ldr	r3, .L46
 887 000a 7A68     		ldr	r2, [r7, #4]
 888 000c 5200     		lsls	r2, r2, #1
 889 000e D35A     		ldrh	r3, [r2, r3]
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 890              		.loc 1 690 0
 891 0010 1800     		movs	r0, r3
 892 0012 BD46     		mov	sp, r7
 893 0014 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 29


 894              		@ sp needed
 895 0016 80BD     		pop	{r7, pc}
 896              	.L47:
 897              		.align	2
 898              	.L46:
 899 0018 00000000 		.word	CapSense_sensorBaseline
 900              		.cfi_endproc
 901              	.LFE42:
 902              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 903              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 904              		.align	2
 905              		.global	CapSense_SetBaselineData
 906              		.code	16
 907              		.thumb_func
 908              		.type	CapSense_SetBaselineData, %function
 909              	CapSense_SetBaselineData:
 910              	.LFB43:
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 911              		.loc 1 715 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 8
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915 0000 80B5     		push	{r7, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 82B0     		sub	sp, sp, #8
 920              		.cfi_def_cfa_offset 16
 921 0004 00AF     		add	r7, sp, #0
 922              		.cfi_def_cfa_register 7
 923 0006 7860     		str	r0, [r7, #4]
 924 0008 0A00     		movs	r2, r1
 925 000a BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 30


 926 000c 1A80     		strh	r2, [r3]
 716:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 927              		.loc 1 716 0
 928 000e 054B     		ldr	r3, .L49
 929 0010 7A68     		ldr	r2, [r7, #4]
 930 0012 5200     		lsls	r2, r2, #1
 931 0014 B91C     		adds	r1, r7, #2
 932 0016 0988     		ldrh	r1, [r1]
 933 0018 D152     		strh	r1, [r2, r3]
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 934              		.loc 1 717 0
 935 001a C046     		nop
 936 001c BD46     		mov	sp, r7
 937 001e 02B0     		add	sp, sp, #8
 938              		@ sp needed
 939 0020 80BD     		pop	{r7, pc}
 940              	.L50:
 941 0022 C046     		.align	2
 942              	.L49:
 943 0024 00000000 		.word	CapSense_sensorBaseline
 944              		.cfi_endproc
 945              	.LFE43:
 946              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 947              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 948              		.align	2
 949              		.global	CapSense_GetDiffCountData
 950              		.code	16
 951              		.thumb_func
 952              		.type	CapSense_GetDiffCountData, %function
 953              	CapSense_GetDiffCountData:
 954              	.LFB44:
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 955              		.loc 1 742 0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 31


 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 82B0     		sub	sp, sp, #8
 964              		.cfi_def_cfa_offset 16
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 967 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 968              		.loc 1 743 0
 969 0008 034A     		ldr	r2, .L53
 970 000a 7B68     		ldr	r3, [r7, #4]
 971 000c D318     		adds	r3, r2, r3
 972 000e 1B78     		ldrb	r3, [r3]
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 973              		.loc 1 744 0
 974 0010 1800     		movs	r0, r3
 975 0012 BD46     		mov	sp, r7
 976 0014 02B0     		add	sp, sp, #8
 977              		@ sp needed
 978 0016 80BD     		pop	{r7, pc}
 979              	.L54:
 980              		.align	2
 981              	.L53:
 982 0018 00000000 		.word	CapSense_sensorSignal
 983              		.cfi_endproc
 984              	.LFE44:
 985              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 986              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 987              		.align	2
 988              		.global	CapSense_SetDiffCountData
 989              		.code	16
 990              		.thumb_func
 991              		.type	CapSense_SetDiffCountData, %function
 992              	CapSense_SetDiffCountData:
 993              	.LFB45:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 32


 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 994              		.loc 1 769 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 8
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998 0000 80B5     		push	{r7, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 7, -8
 1001              		.cfi_offset 14, -4
 1002 0002 82B0     		sub	sp, sp, #8
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              		.cfi_def_cfa_register 7
 1006 0006 7860     		str	r0, [r7, #4]
 1007 0008 0A00     		movs	r2, r1
 1008 000a FB1C     		adds	r3, r7, #3
 1009 000c 1A70     		strb	r2, [r3]
 770:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1010              		.loc 1 770 0
 1011 000e 054A     		ldr	r2, .L56
 1012 0010 7B68     		ldr	r3, [r7, #4]
 1013 0012 D318     		adds	r3, r2, r3
 1014 0014 FA1C     		adds	r2, r7, #3
 1015 0016 1278     		ldrb	r2, [r2]
 1016 0018 1A70     		strb	r2, [r3]
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1017              		.loc 1 771 0
 1018 001a C046     		nop
 1019 001c BD46     		mov	sp, r7
 1020 001e 02B0     		add	sp, sp, #8
 1021              		@ sp needed
 1022 0020 80BD     		pop	{r7, pc}
 1023              	.L57:
 1024 0022 C046     		.align	2
 1025              	.L56:
 1026 0024 00000000 		.word	CapSense_sensorSignal
 1027              		.cfi_endproc
 1028              	.LFE45:
 1029              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1030              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1031              		.align	2
 1032              		.global	CapSense_GetFingerThreshold
 1033              		.code	16
 1034              		.thumb_func
 1035              		.type	CapSense_GetFingerThreshold, %function
 1036              	CapSense_GetFingerThreshold:
 1037              	.LFB46:
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 33


 775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1038              		.loc 1 796 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 8
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042 0000 80B5     		push	{r7, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 0002 82B0     		sub	sp, sp, #8
 1047              		.cfi_def_cfa_offset 16
 1048 0004 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 1050 0006 7860     		str	r0, [r7, #4]
 797:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1051              		.loc 1 797 0
 1052 0008 034A     		ldr	r2, .L60
 1053 000a 7B68     		ldr	r3, [r7, #4]
 1054 000c D318     		adds	r3, r2, r3
 1055 000e 1B78     		ldrb	r3, [r3]
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1056              		.loc 1 798 0
 1057 0010 1800     		movs	r0, r3
 1058 0012 BD46     		mov	sp, r7
 1059 0014 02B0     		add	sp, sp, #8
 1060              		@ sp needed
 1061 0016 80BD     		pop	{r7, pc}
 1062              	.L61:
 1063              		.align	2
 1064              	.L60:
 1065 0018 00000000 		.word	CapSense_fingerThreshold
 1066              		.cfi_endproc
 1067              	.LFE46:
 1068              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1069              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1070              		.align	2
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 34


 1071              		.global	CapSense_GetNoiseThreshold
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	CapSense_GetNoiseThreshold, %function
 1075              	CapSense_GetNoiseThreshold:
 1076              	.LFB47:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1077              		.loc 1 823 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 1, uses_anonymous_args = 0
 1081 0000 80B5     		push	{r7, lr}
 1082              		.cfi_def_cfa_offset 8
 1083              		.cfi_offset 7, -8
 1084              		.cfi_offset 14, -4
 1085 0002 82B0     		sub	sp, sp, #8
 1086              		.cfi_def_cfa_offset 16
 1087 0004 00AF     		add	r7, sp, #0
 1088              		.cfi_def_cfa_register 7
 1089 0006 7860     		str	r0, [r7, #4]
 824:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1090              		.loc 1 824 0
 1091 0008 034A     		ldr	r2, .L64
 1092 000a 7B68     		ldr	r3, [r7, #4]
 1093 000c D318     		adds	r3, r2, r3
 1094 000e 1B78     		ldrb	r3, [r3]
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1095              		.loc 1 825 0
 1096 0010 1800     		movs	r0, r3
 1097 0012 BD46     		mov	sp, r7
 1098 0014 02B0     		add	sp, sp, #8
 1099              		@ sp needed
 1100 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 35


 1101              	.L65:
 1102              		.align	2
 1103              	.L64:
 1104 0018 00000000 		.word	CapSense_noiseThreshold
 1105              		.cfi_endproc
 1106              	.LFE47:
 1107              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1108              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1109              		.align	2
 1110              		.global	CapSense_GetFingerHysteresis
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	CapSense_GetFingerHysteresis, %function
 1114              	CapSense_GetFingerHysteresis:
 1115              	.LFB48:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1116              		.loc 1 851 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 82B0     		sub	sp, sp, #8
 1125              		.cfi_def_cfa_offset 16
 1126 0004 00AF     		add	r7, sp, #0
 1127              		.cfi_def_cfa_register 7
 1128 0006 7860     		str	r0, [r7, #4]
 852:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1129              		.loc 1 852 0
 1130 0008 034A     		ldr	r2, .L68
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 36


 1131 000a 7B68     		ldr	r3, [r7, #4]
 1132 000c D318     		adds	r3, r2, r3
 1133 000e 1B78     		ldrb	r3, [r3]
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1134              		.loc 1 853 0
 1135 0010 1800     		movs	r0, r3
 1136 0012 BD46     		mov	sp, r7
 1137 0014 02B0     		add	sp, sp, #8
 1138              		@ sp needed
 1139 0016 80BD     		pop	{r7, pc}
 1140              	.L69:
 1141              		.align	2
 1142              	.L68:
 1143 0018 00000000 		.word	CapSense_hysteresis
 1144              		.cfi_endproc
 1145              	.LFE48:
 1146              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1147              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1148              		.align	2
 1149              		.global	CapSense_GetNegativeNoiseThreshold
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1153              	CapSense_GetNegativeNoiseThreshold:
 1154              	.LFB49:
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1155              		.loc 1 879 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 8
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 80B5     		push	{r7, lr}
 1160              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 37


 1161              		.cfi_offset 7, -8
 1162              		.cfi_offset 14, -4
 1163 0002 82B0     		sub	sp, sp, #8
 1164              		.cfi_def_cfa_offset 16
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 1167 0006 7860     		str	r0, [r7, #4]
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 881:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1168              		.loc 1 881 0
 1169 0008 034A     		ldr	r2, .L72
 1170 000a 7B68     		ldr	r3, [r7, #4]
 1171 000c D318     		adds	r3, r2, r3
 1172 000e 1B78     		ldrb	r3, [r3]
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 883:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1173              		.loc 1 885 0
 1174 0010 1800     		movs	r0, r3
 1175 0012 BD46     		mov	sp, r7
 1176 0014 02B0     		add	sp, sp, #8
 1177              		@ sp needed
 1178 0016 80BD     		pop	{r7, pc}
 1179              	.L73:
 1180              		.align	2
 1181              	.L72:
 1182 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1183              		.cfi_endproc
 1184              	.LFE49:
 1185              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1186              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1187              		.align	2
 1188              		.global	CapSense_SetFingerThreshold
 1189              		.code	16
 1190              		.thumb_func
 1191              		.type	CapSense_SetFingerThreshold, %function
 1192              	CapSense_SetFingerThreshold:
 1193              	.LFB50:
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 889:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 890:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 891:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 892:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 893:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 38


 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1194              		.loc 1 912 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 8
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 82B0     		sub	sp, sp, #8
 1203              		.cfi_def_cfa_offset 16
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
 1207 0008 0A00     		movs	r2, r1
 1208 000a FB1C     		adds	r3, r7, #3
 1209 000c 1A70     		strb	r2, [r3]
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1210              		.loc 1 913 0
 1211 000e 054A     		ldr	r2, .L75
 1212 0010 7B68     		ldr	r3, [r7, #4]
 1213 0012 D318     		adds	r3, r2, r3
 1214 0014 FA1C     		adds	r2, r7, #3
 1215 0016 1278     		ldrb	r2, [r2]
 1216 0018 1A70     		strb	r2, [r3]
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1217              		.loc 1 914 0
 1218 001a C046     		nop
 1219 001c BD46     		mov	sp, r7
 1220 001e 02B0     		add	sp, sp, #8
 1221              		@ sp needed
 1222 0020 80BD     		pop	{r7, pc}
 1223              	.L76:
 1224 0022 C046     		.align	2
 1225              	.L75:
 1226 0024 00000000 		.word	CapSense_fingerThreshold
 1227              		.cfi_endproc
 1228              	.LFE50:
 1229              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1230              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1231              		.align	2
 1232              		.global	CapSense_SetNoiseThreshold
 1233              		.code	16
 1234              		.thumb_func
 1235              		.type	CapSense_SetNoiseThreshold, %function
 1236              	CapSense_SetNoiseThreshold:
 1237              	.LFB51:
 915:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 916:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 39


 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1238              		.loc 1 940 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 8
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242 0000 80B5     		push	{r7, lr}
 1243              		.cfi_def_cfa_offset 8
 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 82B0     		sub	sp, sp, #8
 1247              		.cfi_def_cfa_offset 16
 1248 0004 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 1250 0006 7860     		str	r0, [r7, #4]
 1251 0008 0A00     		movs	r2, r1
 1252 000a FB1C     		adds	r3, r7, #3
 1253 000c 1A70     		strb	r2, [r3]
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1254              		.loc 1 941 0
 1255 000e 054A     		ldr	r2, .L78
 1256 0010 7B68     		ldr	r3, [r7, #4]
 1257 0012 D318     		adds	r3, r2, r3
 1258 0014 FA1C     		adds	r2, r7, #3
 1259 0016 1278     		ldrb	r2, [r2]
 1260 0018 1A70     		strb	r2, [r3]
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1261              		.loc 1 942 0
 1262 001a C046     		nop
 1263 001c BD46     		mov	sp, r7
 1264 001e 02B0     		add	sp, sp, #8
 1265              		@ sp needed
 1266 0020 80BD     		pop	{r7, pc}
 1267              	.L79:
 1268 0022 C046     		.align	2
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 40


 1269              	.L78:
 1270 0024 00000000 		.word	CapSense_noiseThreshold
 1271              		.cfi_endproc
 1272              	.LFE51:
 1273              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1274              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1275              		.align	2
 1276              		.global	CapSense_SetFingerHysteresis
 1277              		.code	16
 1278              		.thumb_func
 1279              		.type	CapSense_SetFingerHysteresis, %function
 1280              	CapSense_SetFingerHysteresis:
 1281              	.LFB52:
 943:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 944:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1282              		.loc 1 968 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 8
 1285              		@ frame_needed = 1, uses_anonymous_args = 0
 1286 0000 80B5     		push	{r7, lr}
 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 7, -8
 1289              		.cfi_offset 14, -4
 1290 0002 82B0     		sub	sp, sp, #8
 1291              		.cfi_def_cfa_offset 16
 1292 0004 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
 1294 0006 7860     		str	r0, [r7, #4]
 1295 0008 0A00     		movs	r2, r1
 1296 000a FB1C     		adds	r3, r7, #3
 1297 000c 1A70     		strb	r2, [r3]
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1298              		.loc 1 969 0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 41


 1299 000e 054A     		ldr	r2, .L81
 1300 0010 7B68     		ldr	r3, [r7, #4]
 1301 0012 D318     		adds	r3, r2, r3
 1302 0014 FA1C     		adds	r2, r7, #3
 1303 0016 1278     		ldrb	r2, [r2]
 1304 0018 1A70     		strb	r2, [r3]
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1305              		.loc 1 970 0
 1306 001a C046     		nop
 1307 001c BD46     		mov	sp, r7
 1308 001e 02B0     		add	sp, sp, #8
 1309              		@ sp needed
 1310 0020 80BD     		pop	{r7, pc}
 1311              	.L82:
 1312 0022 C046     		.align	2
 1313              	.L81:
 1314 0024 00000000 		.word	CapSense_hysteresis
 1315              		.cfi_endproc
 1316              	.LFE52:
 1317              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1318              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1319              		.align	2
 1320              		.global	CapSense_SetNegativeNoiseThreshold
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1324              	CapSense_SetNegativeNoiseThreshold:
 1325              	.LFB53:
 971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 972:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1326              		.loc 1 997 0
 1327              		.cfi_startproc
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 42


 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 80B5     		push	{r7, lr}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 82B0     		sub	sp, sp, #8
 1335              		.cfi_def_cfa_offset 16
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 1338 0006 7860     		str	r0, [r7, #4]
 1339 0008 0A00     		movs	r2, r1
 1340 000a FB1C     		adds	r3, r7, #3
 1341 000c 1A70     		strb	r2, [r3]
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1342              		.loc 1 998 0
 1343 000e 054A     		ldr	r2, .L84
 1344 0010 7B68     		ldr	r3, [r7, #4]
 1345 0012 D318     		adds	r3, r2, r3
 1346 0014 FA1C     		adds	r2, r7, #3
 1347 0016 1278     		ldrb	r2, [r2]
 1348 0018 1A70     		strb	r2, [r3]
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1349              		.loc 1 999 0
 1350 001a C046     		nop
 1351 001c BD46     		mov	sp, r7
 1352 001e 02B0     		add	sp, sp, #8
 1353              		@ sp needed
 1354 0020 80BD     		pop	{r7, pc}
 1355              	.L85:
 1356 0022 C046     		.align	2
 1357              	.L84:
 1358 0024 00000000 		.word	CapSense_negativeNoiseThreshold
 1359              		.cfi_endproc
 1360              	.LFE53:
 1361              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1362              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1363              		.align	2
 1364              		.global	CapSense_SetDebounce
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CapSense_SetDebounce, %function
 1368              	CapSense_SetDebounce:
 1369              	.LFB54:
1000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1001:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 43


1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1370              		.loc 1 1025 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 8
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374 0000 80B5     		push	{r7, lr}
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 7, -8
 1377              		.cfi_offset 14, -4
 1378 0002 82B0     		sub	sp, sp, #8
 1379              		.cfi_def_cfa_offset 16
 1380 0004 00AF     		add	r7, sp, #0
 1381              		.cfi_def_cfa_register 7
 1382 0006 7860     		str	r0, [r7, #4]
 1383 0008 0A00     		movs	r2, r1
 1384 000a FB1C     		adds	r3, r7, #3
 1385 000c 1A70     		strb	r2, [r3]
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1386              		.loc 1 1026 0
 1387 000e 054A     		ldr	r2, .L87
 1388 0010 7B68     		ldr	r3, [r7, #4]
 1389 0012 D318     		adds	r3, r2, r3
 1390 0014 FA1C     		adds	r2, r7, #3
 1391 0016 1278     		ldrb	r2, [r2]
 1392 0018 1A70     		strb	r2, [r3]
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1393              		.loc 1 1027 0
 1394 001a C046     		nop
 1395 001c BD46     		mov	sp, r7
 1396 001e 02B0     		add	sp, sp, #8
 1397              		@ sp needed
 1398 0020 80BD     		pop	{r7, pc}
 1399              	.L88:
 1400 0022 C046     		.align	2
 1401              	.L87:
 1402 0024 00000000 		.word	CapSense_debounce
 1403              		.cfi_endproc
 1404              	.LFE54:
 1405              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1406              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1407              		.align	2
 1408              		.global	CapSense_SetLowBaselineReset
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	CapSense_SetLowBaselineReset, %function
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 44


 1412              	CapSense_SetLowBaselineReset:
 1413              	.LFB55:
1028:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1029:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1414              		.loc 1 1053 0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 8
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418 0000 80B5     		push	{r7, lr}
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 82B0     		sub	sp, sp, #8
 1423              		.cfi_def_cfa_offset 16
 1424 0004 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
 1426 0006 7860     		str	r0, [r7, #4]
 1427 0008 0A00     		movs	r2, r1
 1428 000a FB1C     		adds	r3, r7, #3
 1429 000c 1A70     		strb	r2, [r3]
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1430              		.loc 1 1054 0
 1431 000e 054A     		ldr	r2, .L90
 1432 0010 7B68     		ldr	r3, [r7, #4]
 1433 0012 D318     		adds	r3, r2, r3
 1434 0014 FA1C     		adds	r2, r7, #3
 1435 0016 1278     		ldrb	r2, [r2]
 1436 0018 1A70     		strb	r2, [r3]
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1437              		.loc 1 1055 0
 1438 001a C046     		nop
 1439 001c BD46     		mov	sp, r7
 1440 001e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 45


 1441              		@ sp needed
 1442 0020 80BD     		pop	{r7, pc}
 1443              	.L91:
 1444 0022 C046     		.align	2
 1445              	.L90:
 1446 0024 00000000 		.word	CapSense_lowBaselineReset
 1447              		.cfi_endproc
 1448              	.LFE55:
 1449              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1450              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1451              		.align	2
 1452              		.global	CapSense_CheckIsSensorActive
 1453              		.code	16
 1454              		.thumb_func
 1455              		.type	CapSense_CheckIsSensorActive, %function
 1456              	CapSense_CheckIsSensorActive:
 1457              	.LFB56:
1056:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1057:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1058:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1059:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1060:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1061:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 46


1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1458              		.loc 1 1099 0
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 16
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462 0000 80B5     		push	{r7, lr}
 1463              		.cfi_def_cfa_offset 8
 1464              		.cfi_offset 7, -8
 1465              		.cfi_offset 14, -4
 1466 0002 84B0     		sub	sp, sp, #16
 1467              		.cfi_def_cfa_offset 24
 1468 0004 00AF     		add	r7, sp, #0
 1469              		.cfi_def_cfa_register 7
 1470 0006 7860     		str	r0, [r7, #4]
1100:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1101:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1102:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1104:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1105:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1109:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1471              		.loc 1 1109 0
 1472 0008 0F23     		movs	r3, #15
 1473 000a FB18     		adds	r3, r7, r3
 1474 000c 4149     		ldr	r1, .L101
 1475 000e 7A68     		ldr	r2, [r7, #4]
 1476 0010 8A18     		adds	r2, r1, r2
 1477 0012 1278     		ldrb	r2, [r2]
 1478 0014 1A70     		strb	r2, [r3]
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1479              		.loc 1 1111 0
 1480 0016 0F23     		movs	r3, #15
 1481 0018 FB18     		adds	r3, r7, r3
 1482 001a 1A78     		ldrb	r2, [r3]
 1483 001c 0E23     		movs	r3, #14
 1484 001e FB18     		adds	r3, r7, r3
 1485 0020 3D49     		ldr	r1, .L101+4
 1486 0022 8A5C     		ldrb	r2, [r1, r2]
 1487 0024 1A70     		strb	r2, [r3]
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1488              		.loc 1 1112 0
 1489 0026 0F23     		movs	r3, #15
 1490 0028 FB18     		adds	r3, r7, r3
 1491 002a 1A78     		ldrb	r2, [r3]
 1492 002c 0D23     		movs	r3, #13
 1493 002e FB18     		adds	r3, r7, r3
 1494 0030 3A49     		ldr	r1, .L101+8
 1495 0032 8A5C     		ldrb	r2, [r1, r2]
 1496 0034 1A70     		strb	r2, [r3]
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 47


 1497              		.loc 1 1113 0
 1498 0036 0F23     		movs	r3, #15
 1499 0038 FB18     		adds	r3, r7, r3
 1500 003a 1A78     		ldrb	r2, [r3]
 1501 003c 0C23     		movs	r3, #12
 1502 003e FB18     		adds	r3, r7, r3
 1503 0040 3749     		ldr	r1, .L101+12
 1504 0042 8A5C     		ldrb	r2, [r1, r2]
 1505 0044 1A70     		strb	r2, [r3]
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
 1506              		.loc 1 1115 0
 1507 0046 0B23     		movs	r3, #11
 1508 0048 FB18     		adds	r3, r7, r3
 1509 004a 0F22     		movs	r2, #15
 1510 004c BA18     		adds	r2, r7, r2
 1511 004e 1278     		ldrb	r2, [r2]
 1512 0050 1A70     		strb	r2, [r3]
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1513              		.loc 1 1119 0
 1514 0052 7A68     		ldr	r2, [r7, #4]
 1515 0054 334B     		ldr	r3, .L101+16
 1516 0056 1100     		movs	r1, r2
 1517 0058 1800     		movs	r0, r3
 1518 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1519 005e 031E     		subs	r3, r0, #0
 1520 0060 1CD0     		beq	.L93
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1121:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1521              		.loc 1 1122 0
 1522 0062 314A     		ldr	r2, .L101+20
 1523 0064 7B68     		ldr	r3, [r7, #4]
 1524 0066 D318     		adds	r3, r2, r3
 1525 0068 1B78     		ldrb	r3, [r3]
 1526 006a 1900     		movs	r1, r3
 1527 006c 0E23     		movs	r3, #14
 1528 006e FB18     		adds	r3, r7, r3
 1529 0070 1A78     		ldrb	r2, [r3]
 1530 0072 0D23     		movs	r3, #13
 1531 0074 FB18     		adds	r3, r7, r3
 1532 0076 1B78     		ldrb	r3, [r3]
 1533 0078 D31A     		subs	r3, r2, r3
 1534 007a 9942     		cmp	r1, r3
 1535 007c 3BDA     		bge	.L95
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1536              		.loc 1 1124 0
 1537 007e 7968     		ldr	r1, [r7, #4]
 1538 0080 284B     		ldr	r3, .L101+16
 1539 0082 0022     		movs	r2, #0
 1540 0084 1800     		movs	r0, r3
 1541 0086 FFF7FEFF 		bl	CapSense_SetBitValue
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 48


1126:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1542              		.loc 1 1126 0
 1543 008a 0B23     		movs	r3, #11
 1544 008c FB18     		adds	r3, r7, r3
 1545 008e 1B78     		ldrb	r3, [r3]
 1546 0090 264A     		ldr	r2, .L101+24
 1547 0092 0C21     		movs	r1, #12
 1548 0094 7918     		adds	r1, r7, r1
 1549 0096 0978     		ldrb	r1, [r1]
 1550 0098 D154     		strb	r1, [r2, r3]
 1551 009a 2CE0     		b	.L95
 1552              	.L93:
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1553              		.loc 1 1132 0
 1554 009c 224A     		ldr	r2, .L101+20
 1555 009e 7B68     		ldr	r3, [r7, #4]
 1556 00a0 D318     		adds	r3, r2, r3
 1557 00a2 1B78     		ldrb	r3, [r3]
 1558 00a4 1900     		movs	r1, r3
 1559 00a6 0E23     		movs	r3, #14
 1560 00a8 FB18     		adds	r3, r7, r3
 1561 00aa 1A78     		ldrb	r2, [r3]
 1562 00ac 0D23     		movs	r3, #13
 1563 00ae FB18     		adds	r3, r7, r3
 1564 00b0 1B78     		ldrb	r3, [r3]
 1565 00b2 D318     		adds	r3, r2, r3
 1566 00b4 9942     		cmp	r1, r3
 1567 00b6 16DB     		blt	.L96
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1568              		.loc 1 1134 0
 1569 00b8 0B23     		movs	r3, #11
 1570 00ba FB18     		adds	r3, r7, r3
 1571 00bc 1B78     		ldrb	r3, [r3]
 1572 00be 1B4A     		ldr	r2, .L101+24
 1573 00c0 D25C     		ldrb	r2, [r2, r3]
 1574 00c2 013A     		subs	r2, r2, #1
 1575 00c4 D1B2     		uxtb	r1, r2
 1576 00c6 194A     		ldr	r2, .L101+24
 1577 00c8 D154     		strb	r1, [r2, r3]
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1578              		.loc 1 1136 0
 1579 00ca 0B23     		movs	r3, #11
 1580 00cc FB18     		adds	r3, r7, r3
 1581 00ce 1B78     		ldrb	r3, [r3]
 1582 00d0 164A     		ldr	r2, .L101+24
 1583 00d2 D35C     		ldrb	r3, [r2, r3]
 1584 00d4 002B     		cmp	r3, #0
 1585 00d6 0ED1     		bne	.L95
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 49


 1586              		.loc 1 1138 0
 1587 00d8 7968     		ldr	r1, [r7, #4]
 1588 00da 124B     		ldr	r3, .L101+16
 1589 00dc 0122     		movs	r2, #1
 1590 00de 1800     		movs	r0, r3
 1591 00e0 FFF7FEFF 		bl	CapSense_SetBitValue
 1592 00e4 07E0     		b	.L95
 1593              	.L96:
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1594              		.loc 1 1144 0
 1595 00e6 0B23     		movs	r3, #11
 1596 00e8 FB18     		adds	r3, r7, r3
 1597 00ea 1B78     		ldrb	r3, [r3]
 1598 00ec 0F4A     		ldr	r2, .L101+24
 1599 00ee 0C21     		movs	r1, #12
 1600 00f0 7918     		adds	r1, r7, r1
 1601 00f2 0978     		ldrb	r1, [r1]
 1602 00f4 D154     		strb	r1, [r2, r3]
 1603              	.L95:
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1147:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1604              		.loc 1 1148 0
 1605 00f6 7A68     		ldr	r2, [r7, #4]
 1606 00f8 0A4B     		ldr	r3, .L101+16
 1607 00fa 1100     		movs	r1, r2
 1608 00fc 1800     		movs	r0, r3
 1609 00fe FFF7FEFF 		bl	CapSense_GetBitValue
 1610 0102 031E     		subs	r3, r0, #0
 1611 0104 01D0     		beq	.L98
 1612              		.loc 1 1148 0 is_stmt 0 discriminator 1
 1613 0106 0123     		movs	r3, #1
 1614 0108 00E0     		b	.L100
 1615              	.L98:
 1616              		.loc 1 1148 0 discriminator 2
 1617 010a 0023     		movs	r3, #0
 1618              	.L100:
1149:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1619              		.loc 1 1149 0 is_stmt 1 discriminator 5
 1620 010c 1800     		movs	r0, r3
 1621 010e BD46     		mov	sp, r7
 1622 0110 04B0     		add	sp, sp, #16
 1623              		@ sp needed
 1624 0112 80BD     		pop	{r7, pc}
 1625              	.L102:
 1626              		.align	2
 1627              	.L101:
 1628 0114 00000000 		.word	CapSense_widgetNumber
 1629 0118 00000000 		.word	CapSense_fingerThreshold
 1630 011c 00000000 		.word	CapSense_hysteresis
 1631 0120 00000000 		.word	CapSense_debounce
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 50


 1632 0124 00000000 		.word	CapSense_sensorOnMask
 1633 0128 00000000 		.word	CapSense_sensorSignal
 1634 012c 10000000 		.word	CapSense_debounceCounter
 1635              		.cfi_endproc
 1636              	.LFE56:
 1637              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1638              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1639              		.align	2
 1640              		.global	CapSense_CheckIsWidgetActive
 1641              		.code	16
 1642              		.thumb_func
 1643              		.type	CapSense_CheckIsWidgetActive, %function
 1644              	CapSense_CheckIsWidgetActive:
 1645              	.LFB57:
1150:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1646              		.loc 1 1181 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 24
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650 0000 80B5     		push	{r7, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 86B0     		sub	sp, sp, #24
 1655              		.cfi_def_cfa_offset 32
 1656 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 51


 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
1182:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1659              		.loc 1 1182 0
 1660 0008 0023     		movs	r3, #0
 1661 000a 7B61     		str	r3, [r7, #20]
1183:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1662              		.loc 1 1183 0
 1663 000c 0123     		movs	r3, #1
 1664 000e 1A00     		movs	r2, r3
 1665 0010 7B69     		ldr	r3, [r7, #20]
 1666 0012 D318     		adds	r3, r2, r3
 1667 0014 FB60     		str	r3, [r7, #12]
1184:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1668              		.loc 1 1184 0
 1669 0016 0023     		movs	r3, #0
 1670 0018 3B61     		str	r3, [r7, #16]
 1671              	.L105:
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1186:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1187:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1189:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1672              		.loc 1 1189 0
 1673 001a 7B69     		ldr	r3, [r7, #20]
 1674 001c 1800     		movs	r0, r3
 1675 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1676 0022 031E     		subs	r3, r0, #0
 1677 0024 01D0     		beq	.L104
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1191:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1678              		.loc 1 1191 0
 1679 0026 0123     		movs	r3, #1
 1680 0028 3B61     		str	r3, [r7, #16]
 1681              	.L104:
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1682              		.loc 1 1193 0
 1683 002a 7B69     		ldr	r3, [r7, #20]
 1684 002c 0133     		adds	r3, r3, #1
 1685 002e 7B61     		str	r3, [r7, #20]
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1686              		.loc 1 1195 0
 1687 0030 7A69     		ldr	r2, [r7, #20]
 1688 0032 FB68     		ldr	r3, [r7, #12]
 1689 0034 9A42     		cmp	r2, r3
 1690 0036 F0D3     		bcc	.L105
1196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1691              		.loc 1 1199 0
 1692 0038 3B69     		ldr	r3, [r7, #16]
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1693              		.loc 1 1200 0
 1694 003a 1800     		movs	r0, r3
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 52


 1695 003c BD46     		mov	sp, r7
 1696 003e 06B0     		add	sp, sp, #24
 1697              		@ sp needed
 1698 0040 80BD     		pop	{r7, pc}
 1699              		.cfi_endproc
 1700              	.LFE57:
 1701              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1702 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1703              		.align	2
 1704              		.global	CapSense_CheckIsAnyWidgetActive
 1705              		.code	16
 1706              		.thumb_func
 1707              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1708              	CapSense_CheckIsAnyWidgetActive:
 1709              	.LFB58:
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1710              		.loc 1 1227 0
 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 8
 1713              		@ frame_needed = 1, uses_anonymous_args = 0
 1714 0000 80B5     		push	{r7, lr}
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 7, -8
 1717              		.cfi_offset 14, -4
 1718 0002 82B0     		sub	sp, sp, #8
 1719              		.cfi_def_cfa_offset 16
 1720 0004 00AF     		add	r7, sp, #0
 1721              		.cfi_def_cfa_register 7
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1230:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 53


 1722              		.loc 1 1230 0
 1723 0006 0023     		movs	r3, #0
 1724 0008 3B60     		str	r3, [r7]
1231:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1725              		.loc 1 1232 0
 1726 000a 0023     		movs	r3, #0
 1727 000c 7B60     		str	r3, [r7, #4]
 1728 000e 0AE0     		b	.L108
 1729              	.L110:
1233:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1730              		.loc 1 1234 0
 1731 0010 7B68     		ldr	r3, [r7, #4]
 1732 0012 1800     		movs	r0, r3
 1733 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1734 0018 031E     		subs	r3, r0, #0
 1735 001a 01D0     		beq	.L109
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1736              		.loc 1 1236 0
 1737 001c 0123     		movs	r3, #1
 1738 001e 3B60     		str	r3, [r7]
 1739              	.L109:
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1740              		.loc 1 1232 0 discriminator 2
 1741 0020 7B68     		ldr	r3, [r7, #4]
 1742 0022 0133     		adds	r3, r3, #1
 1743 0024 7B60     		str	r3, [r7, #4]
 1744              	.L108:
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1745              		.loc 1 1232 0 is_stmt 0 discriminator 1
 1746 0026 7B68     		ldr	r3, [r7, #4]
 1747 0028 002B     		cmp	r3, #0
 1748 002a F1D0     		beq	.L110
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1749              		.loc 1 1242 0 is_stmt 1
 1750 002c 3B68     		ldr	r3, [r7]
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1751              		.loc 1 1243 0
 1752 002e 1800     		movs	r0, r3
 1753 0030 BD46     		mov	sp, r7
 1754 0032 02B0     		add	sp, sp, #8
 1755              		@ sp needed
 1756 0034 80BD     		pop	{r7, pc}
 1757              		.cfi_endproc
 1758              	.LFE58:
 1759              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1760 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1761              		.align	2
 1762              		.global	CapSense_EnableWidget
 1763              		.code	16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 54


 1764              		.thumb_func
 1765              		.type	CapSense_EnableWidget, %function
 1766              	CapSense_EnableWidget:
 1767              	.LFB59:
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1768              		.loc 1 1274 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 16
 1771              		@ frame_needed = 1, uses_anonymous_args = 0
 1772 0000 80B5     		push	{r7, lr}
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
 1776 0002 84B0     		sub	sp, sp, #16
 1777              		.cfi_def_cfa_offset 24
 1778 0004 00AF     		add	r7, sp, #0
 1779              		.cfi_def_cfa_register 7
 1780 0006 7860     		str	r0, [r7, #4]
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1276:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1781              		.loc 1 1276 0
 1782 0008 0F23     		movs	r3, #15
 1783 000a FB18     		adds	r3, r7, r3
 1784 000c 0022     		movs	r2, #0
 1785 000e 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1786              		.loc 1 1277 0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 55


 1787 0010 0121     		movs	r1, #1
 1788 0012 0E23     		movs	r3, #14
 1789 0014 FB18     		adds	r3, r7, r3
 1790 0016 0F22     		movs	r2, #15
 1791 0018 BA18     		adds	r2, r7, r2
 1792 001a 1278     		ldrb	r2, [r2]
 1793 001c 8A18     		adds	r2, r1, r2
 1794 001e 1A70     		strb	r2, [r3]
 1795              	.L113:
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1279:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1280:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1281:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1282:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1796              		.loc 1 1282 0 discriminator 1
 1797 0020 0F23     		movs	r3, #15
 1798 0022 FB18     		adds	r3, r7, r3
 1799 0024 1978     		ldrb	r1, [r3]
 1800 0026 0C4B     		ldr	r3, .L114
 1801 0028 0122     		movs	r2, #1
 1802 002a 1800     		movs	r0, r3
 1803 002c FFF7FEFF 		bl	CapSense_SetBitValue
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1804              		.loc 1 1283 0 discriminator 1
 1805 0030 0F23     		movs	r3, #15
 1806 0032 FB18     		adds	r3, r7, r3
 1807 0034 1A78     		ldrb	r2, [r3]
 1808 0036 0F23     		movs	r3, #15
 1809 0038 FB18     		adds	r3, r7, r3
 1810 003a 0132     		adds	r2, r2, #1
 1811 003c 1A70     		strb	r2, [r3]
1284:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1812              		.loc 1 1285 0 discriminator 1
 1813 003e 0F23     		movs	r3, #15
 1814 0040 FA18     		adds	r2, r7, r3
 1815 0042 0E23     		movs	r3, #14
 1816 0044 FB18     		adds	r3, r7, r3
 1817 0046 1278     		ldrb	r2, [r2]
 1818 0048 1B78     		ldrb	r3, [r3]
 1819 004a 9A42     		cmp	r2, r3
 1820 004c E8D3     		bcc	.L113
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1821              		.loc 1 1286 0
 1822 004e C046     		nop
 1823 0050 BD46     		mov	sp, r7
 1824 0052 04B0     		add	sp, sp, #16
 1825              		@ sp needed
 1826 0054 80BD     		pop	{r7, pc}
 1827              	.L115:
 1828 0056 C046     		.align	2
 1829              	.L114:
 1830 0058 00000000 		.word	CapSense_sensorEnableMask
 1831              		.cfi_endproc
 1832              	.LFE59:
 1833              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1834              		.section	.text.CapSense_DisableWidget,"ax",%progbits
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 56


 1835              		.align	2
 1836              		.global	CapSense_DisableWidget
 1837              		.code	16
 1838              		.thumb_func
 1839              		.type	CapSense_DisableWidget, %function
 1840              	CapSense_DisableWidget:
 1841              	.LFB60:
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1842              		.loc 1 1317 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 16
 1845              		@ frame_needed = 1, uses_anonymous_args = 0
 1846 0000 80B5     		push	{r7, lr}
 1847              		.cfi_def_cfa_offset 8
 1848              		.cfi_offset 7, -8
 1849              		.cfi_offset 14, -4
 1850 0002 84B0     		sub	sp, sp, #16
 1851              		.cfi_def_cfa_offset 24
 1852 0004 00AF     		add	r7, sp, #0
 1853              		.cfi_def_cfa_register 7
 1854 0006 7860     		str	r0, [r7, #4]
1318:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1855              		.loc 1 1318 0
 1856 0008 0F23     		movs	r3, #15
 1857 000a FB18     		adds	r3, r7, r3
 1858 000c 0022     		movs	r2, #0
 1859 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 57


1319:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1860              		.loc 1 1319 0
 1861 0010 0121     		movs	r1, #1
 1862 0012 0E23     		movs	r3, #14
 1863 0014 FB18     		adds	r3, r7, r3
 1864 0016 0F22     		movs	r2, #15
 1865 0018 BA18     		adds	r2, r7, r2
 1866 001a 1278     		ldrb	r2, [r2]
 1867 001c 8A18     		adds	r2, r1, r2
 1868 001e 1A70     		strb	r2, [r3]
 1869              	.L117:
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1321:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1322:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1323:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1870              		.loc 1 1325 0 discriminator 1
 1871 0020 0F23     		movs	r3, #15
 1872 0022 FB18     		adds	r3, r7, r3
 1873 0024 1978     		ldrb	r1, [r3]
 1874 0026 0C4B     		ldr	r3, .L118
 1875 0028 0022     		movs	r2, #0
 1876 002a 1800     		movs	r0, r3
 1877 002c FFF7FEFF 		bl	CapSense_SetBitValue
1326:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1878              		.loc 1 1326 0 discriminator 1
 1879 0030 0F23     		movs	r3, #15
 1880 0032 FB18     		adds	r3, r7, r3
 1881 0034 1A78     		ldrb	r2, [r3]
 1882 0036 0F23     		movs	r3, #15
 1883 0038 FB18     		adds	r3, r7, r3
 1884 003a 0132     		adds	r2, r2, #1
 1885 003c 1A70     		strb	r2, [r3]
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1328:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1886              		.loc 1 1328 0 discriminator 1
 1887 003e 0F23     		movs	r3, #15
 1888 0040 FA18     		adds	r2, r7, r3
 1889 0042 0E23     		movs	r3, #14
 1890 0044 FB18     		adds	r3, r7, r3
 1891 0046 1278     		ldrb	r2, [r2]
 1892 0048 1B78     		ldrb	r3, [r3]
 1893 004a 9A42     		cmp	r2, r3
 1894 004c E8D3     		bcc	.L117
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1895              		.loc 1 1329 0
 1896 004e C046     		nop
 1897 0050 BD46     		mov	sp, r7
 1898 0052 04B0     		add	sp, sp, #16
 1899              		@ sp needed
 1900 0054 80BD     		pop	{r7, pc}
 1901              	.L119:
 1902 0056 C046     		.align	2
 1903              	.L118:
 1904 0058 00000000 		.word	CapSense_sensorEnableMask
 1905              		.cfi_endproc
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 58


 1906              	.LFE60:
 1907              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1908              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1909              		.align	2
 1910              		.global	CapSense_MedianFilter
 1911              		.code	16
 1912              		.thumb_func
 1913              		.type	CapSense_MedianFilter, %function
 1914              	CapSense_MedianFilter:
 1915              	.LFB61:
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1336:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 59


1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1380:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1417:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1422:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1430:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 60


1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1444:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1445:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 61


1491:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1494:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1521:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1524:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1527:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1533:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1538:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1542:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1546:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 62


1548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 63


1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1616:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1623:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1641:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1645:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 64


1662:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1669:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1678:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1689:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1694:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1697:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 65


1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1741:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1747:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1754:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1759:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1771:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 66


1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1778:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1784:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1791:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1800:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1811:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1831:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 67


1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1845:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1856:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1867:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1881:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1887:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 68


1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1896:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1897:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1900:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1901:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1946:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 69


1947:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1953:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1958:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1965:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1978:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1987:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1998:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 70


2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2018:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2033:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2044:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 71


2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2069:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2075:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2084:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2087:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2088:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2089:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2090:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 72


2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2134:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2141:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2149:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2156:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2173:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 73


2175:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2203:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2231:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 74


2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2255:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2264:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2268:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 75


2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2307:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2318:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2335:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2338:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2339:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2340:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 76


2346:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1916              		.loc 1 2369 0
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 16
 1919              		@ frame_needed = 1, uses_anonymous_args = 0
 1920 0000 90B5     		push	{r4, r7, lr}
 1921              		.cfi_def_cfa_offset 12
 1922              		.cfi_offset 4, -12
 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 1925 0002 85B0     		sub	sp, sp, #20
 1926              		.cfi_def_cfa_offset 32
 1927 0004 00AF     		add	r7, sp, #0
 1928              		.cfi_def_cfa_register 7
 1929 0006 0400     		movs	r4, r0
 1930 0008 0800     		movs	r0, r1
 1931 000a 1100     		movs	r1, r2
 1932 000c BB1D     		adds	r3, r7, #6
 1933 000e 221C     		adds	r2, r4, #0
 1934 0010 1A80     		strh	r2, [r3]
 1935 0012 3B1D     		adds	r3, r7, #4
 1936 0014 021C     		adds	r2, r0, #0
 1937 0016 1A80     		strh	r2, [r3]
 1938 0018 BB1C     		adds	r3, r7, #2
 1939 001a 0A1C     		adds	r2, r1, #0
 1940 001c 1A80     		strh	r2, [r3]
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2371:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1941              		.loc 1 2372 0
 1942 001e BA1D     		adds	r2, r7, #6
 1943 0020 3B1D     		adds	r3, r7, #4
 1944 0022 1288     		ldrh	r2, [r2]
 1945 0024 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 77


 1946 0026 9A42     		cmp	r2, r3
 1947 0028 0DD9     		bls	.L121
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1948              		.loc 1 2374 0
 1949 002a 0E23     		movs	r3, #14
 1950 002c FB18     		adds	r3, r7, r3
 1951 002e 3A1D     		adds	r2, r7, #4
 1952 0030 1288     		ldrh	r2, [r2]
 1953 0032 1A80     		strh	r2, [r3]
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1954              		.loc 1 2375 0
 1955 0034 3B1D     		adds	r3, r7, #4
 1956 0036 BA1D     		adds	r2, r7, #6
 1957 0038 1288     		ldrh	r2, [r2]
 1958 003a 1A80     		strh	r2, [r3]
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1959              		.loc 1 2376 0
 1960 003c BB1D     		adds	r3, r7, #6
 1961 003e 0E22     		movs	r2, #14
 1962 0040 BA18     		adds	r2, r7, r2
 1963 0042 1288     		ldrh	r2, [r2]
 1964 0044 1A80     		strh	r2, [r3]
 1965              	.L121:
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2378:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1966              		.loc 1 2379 0
 1967 0046 3A1D     		adds	r2, r7, #4
 1968 0048 BB1C     		adds	r3, r7, #2
 1969 004a 1288     		ldrh	r2, [r2]
 1970 004c 1B88     		ldrh	r3, [r3]
 1971 004e 9A42     		cmp	r2, r3
 1972 0050 03D9     		bls	.L122
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1973              		.loc 1 2381 0
 1974 0052 3B1D     		adds	r3, r7, #4
 1975 0054 BA1C     		adds	r2, r7, #2
 1976 0056 1288     		ldrh	r2, [r2]
 1977 0058 1A80     		strh	r2, [r3]
 1978              	.L122:
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1979              		.loc 1 2384 0
 1980 005a 3B1D     		adds	r3, r7, #4
 1981 005c BA1D     		adds	r2, r7, #6
 1982 005e 1088     		ldrh	r0, [r2]
 1983 0060 1B88     		ldrh	r3, [r3]
 1984 0062 99B2     		uxth	r1, r3
 1985 0064 82B2     		uxth	r2, r0
 1986 0066 9142     		cmp	r1, r2
 1987 0068 00D2     		bcs	.L123
 1988 006a 031C     		adds	r3, r0, #0
 1989              	.L123:
 1990 006c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 78


2385:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1991              		.loc 1 2385 0
 1992 006e 1800     		movs	r0, r3
 1993 0070 BD46     		mov	sp, r7
 1994 0072 05B0     		add	sp, sp, #20
 1995              		@ sp needed
 1996 0074 90BD     		pop	{r4, r7, pc}
 1997              		.cfi_endproc
 1998              	.LFE61:
 1999              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2000 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2001              		.align	2
 2002              		.global	CapSense_IIR4Filter
 2003              		.code	16
 2004              		.thumb_func
 2005              		.type	CapSense_IIR4Filter, %function
 2006              	CapSense_IIR4Filter:
 2007              	.LFB62:
2386:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2423:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 79


2425:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2453:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2460:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2463:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2464:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 80


2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2008              		.loc 1 2489 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 16
 2011              		@ frame_needed = 1, uses_anonymous_args = 0
 2012 0000 80B5     		push	{r7, lr}
 2013              		.cfi_def_cfa_offset 8
 2014              		.cfi_offset 7, -8
 2015              		.cfi_offset 14, -4
 2016 0002 84B0     		sub	sp, sp, #16
 2017              		.cfi_def_cfa_offset 24
 2018 0004 00AF     		add	r7, sp, #0
 2019              		.cfi_def_cfa_register 7
 2020 0006 0200     		movs	r2, r0
 2021 0008 BB1D     		adds	r3, r7, #6
 2022 000a 1A80     		strh	r2, [r3]
 2023 000c 3B1D     		adds	r3, r7, #4
 2024 000e 0A1C     		adds	r2, r1, #0
 2025 0010 1A80     		strh	r2, [r3]
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2491:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2026              		.loc 1 2493 0
 2027 0012 BB1D     		adds	r3, r7, #6
 2028 0014 1A88     		ldrh	r2, [r3]
 2029 0016 3B1D     		adds	r3, r7, #4
 2030 0018 1B88     		ldrh	r3, [r3]
 2031 001a D318     		adds	r3, r2, r3
 2032 001c FB60     		str	r3, [r7, #12]
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2033              		.loc 1 2494 0
 2034 001e 3B1D     		adds	r3, r7, #4
 2035 0020 1B88     		ldrh	r3, [r3]
 2036 0022 5B00     		lsls	r3, r3, #1
 2037 0024 FA68     		ldr	r2, [r7, #12]
 2038 0026 D318     		adds	r3, r2, r3
 2039 0028 FB60     		str	r3, [r7, #12]
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2040              		.loc 1 2495 0
 2041 002a FB68     		ldr	r3, [r7, #12]
 2042 002c 9B08     		lsrs	r3, r3, #2
 2043 002e FB60     		str	r3, [r7, #12]
2496:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2044              		.loc 1 2497 0
 2045 0030 FB68     		ldr	r3, [r7, #12]
 2046 0032 9BB2     		uxth	r3, r3
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2047              		.loc 1 2498 0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 81


 2048 0034 1800     		movs	r0, r3
 2049 0036 BD46     		mov	sp, r7
 2050 0038 04B0     		add	sp, sp, #16
 2051              		@ sp needed
 2052 003a 80BD     		pop	{r7, pc}
 2053              		.cfi_endproc
 2054              	.LFE62:
 2055              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2056              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2057              		.align	2
 2058              		.global	CapSense_GetWidgetNumber
 2059              		.code	16
 2060              		.thumb_func
 2061              		.type	CapSense_GetWidgetNumber, %function
 2062              	CapSense_GetWidgetNumber:
 2063              	.LFB63:
2499:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2502:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 82


2540:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2541:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2544:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2549:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2550:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2576:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2581:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2584:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2586:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2587:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 83


2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2613:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2618:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2621:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2623:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2624:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 84


2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2686:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2697:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 85


2711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2064              		.loc 1 2722 0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 8
 2067              		@ frame_needed = 1, uses_anonymous_args = 0
 2068 0000 80B5     		push	{r7, lr}
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 7, -8
 2071              		.cfi_offset 14, -4
 2072 0002 82B0     		sub	sp, sp, #8
 2073              		.cfi_def_cfa_offset 16
 2074 0004 00AF     		add	r7, sp, #0
 2075              		.cfi_def_cfa_register 7
 2076 0006 7860     		str	r0, [r7, #4]
2723:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2077              		.loc 1 2723 0
 2078 0008 034A     		ldr	r2, .L129
 2079 000a 7B68     		ldr	r3, [r7, #4]
 2080 000c D318     		adds	r3, r2, r3
 2081 000e 1B78     		ldrb	r3, [r3]
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2082              		.loc 1 2724 0
 2083 0010 1800     		movs	r0, r3
 2084 0012 BD46     		mov	sp, r7
 2085 0014 02B0     		add	sp, sp, #8
 2086              		@ sp needed
 2087 0016 80BD     		pop	{r7, pc}
 2088              	.L130:
 2089              		.align	2
 2090              	.L129:
 2091 0018 00000000 		.word	CapSense_widgetNumber
 2092              		.cfi_endproc
 2093              	.LFE63:
 2094              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2095              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2096              		.align	2
 2097              		.global	CapSense_GetLowBaselineReset
 2098              		.code	16
 2099              		.thumb_func
 2100              		.type	CapSense_GetLowBaselineReset, %function
 2101              	CapSense_GetLowBaselineReset:
 2102              	.LFB64:
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 86


2729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2103              		.loc 1 2748 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 8
 2106              		@ frame_needed = 1, uses_anonymous_args = 0
 2107 0000 80B5     		push	{r7, lr}
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 7, -8
 2110              		.cfi_offset 14, -4
 2111 0002 82B0     		sub	sp, sp, #8
 2112              		.cfi_def_cfa_offset 16
 2113 0004 00AF     		add	r7, sp, #0
 2114              		.cfi_def_cfa_register 7
 2115 0006 7860     		str	r0, [r7, #4]
2749:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2116              		.loc 1 2749 0
 2117 0008 034A     		ldr	r2, .L133
 2118 000a 7B68     		ldr	r3, [r7, #4]
 2119 000c D318     		adds	r3, r2, r3
 2120 000e 1B78     		ldrb	r3, [r3]
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2121              		.loc 1 2750 0
 2122 0010 1800     		movs	r0, r3
 2123 0012 BD46     		mov	sp, r7
 2124 0014 02B0     		add	sp, sp, #8
 2125              		@ sp needed
 2126 0016 80BD     		pop	{r7, pc}
 2127              	.L134:
 2128              		.align	2
 2129              	.L133:
 2130 0018 00000000 		.word	CapSense_lowBaselineReset
 2131              		.cfi_endproc
 2132              	.LFE64:
 2133              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2134              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2135              		.align	2
 2136              		.global	CapSense_GetDebounce
 2137              		.code	16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 87


 2138              		.thumb_func
 2139              		.type	CapSense_GetDebounce, %function
 2140              	CapSense_GetDebounce:
 2141              	.LFB65:
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2142              		.loc 1 2774 0
 2143              		.cfi_startproc
 2144              		@ args = 0, pretend = 0, frame = 8
 2145              		@ frame_needed = 1, uses_anonymous_args = 0
 2146 0000 80B5     		push	{r7, lr}
 2147              		.cfi_def_cfa_offset 8
 2148              		.cfi_offset 7, -8
 2149              		.cfi_offset 14, -4
 2150 0002 82B0     		sub	sp, sp, #8
 2151              		.cfi_def_cfa_offset 16
 2152 0004 00AF     		add	r7, sp, #0
 2153              		.cfi_def_cfa_register 7
 2154 0006 7860     		str	r0, [r7, #4]
2775:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2155              		.loc 1 2775 0
 2156 0008 034A     		ldr	r2, .L137
 2157 000a 7B68     		ldr	r3, [r7, #4]
 2158 000c D318     		adds	r3, r2, r3
 2159 000e 1B78     		ldrb	r3, [r3]
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2160              		.loc 1 2776 0
 2161 0010 1800     		movs	r0, r3
 2162 0012 BD46     		mov	sp, r7
 2163 0014 02B0     		add	sp, sp, #8
 2164              		@ sp needed
 2165 0016 80BD     		pop	{r7, pc}
 2166              	.L138:
 2167              		.align	2
 2168              	.L137:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 88


 2169 0018 00000000 		.word	CapSense_debounce
 2170              		.cfi_endproc
 2171              	.LFE65:
 2172              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2173              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2174              		.align	2
 2175              		.global	CapSense_EnableRawDataFilters
 2176              		.code	16
 2177              		.thumb_func
 2178              		.type	CapSense_EnableRawDataFilters, %function
 2179              	CapSense_EnableRawDataFilters:
 2180              	.LFB66:
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2779:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2780:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2781:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2782:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2783:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2181              		.loc 1 2800 0
 2182              		.cfi_startproc
 2183              		@ args = 0, pretend = 0, frame = 0
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185 0000 80B5     		push	{r7, lr}
 2186              		.cfi_def_cfa_offset 8
 2187              		.cfi_offset 7, -8
 2188              		.cfi_offset 14, -4
 2189 0002 00AF     		add	r7, sp, #0
 2190              		.cfi_def_cfa_register 7
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2191              		.loc 1 2801 0
 2192 0004 024B     		ldr	r3, .L140
 2193 0006 0122     		movs	r2, #1
 2194 0008 1A70     		strb	r2, [r3]
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2195              		.loc 1 2802 0
 2196 000a C046     		nop
 2197 000c BD46     		mov	sp, r7
 2198              		@ sp needed
 2199 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 89


 2200              	.L141:
 2201              		.align	2
 2202              	.L140:
 2203 0010 00000000 		.word	CapSense_enableRawFilters
 2204              		.cfi_endproc
 2205              	.LFE66:
 2206              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2207              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2208              		.align	2
 2209              		.global	CapSense_DisableRawDataFilters
 2210              		.code	16
 2211              		.thumb_func
 2212              		.type	CapSense_DisableRawDataFilters, %function
 2213              	CapSense_DisableRawDataFilters:
 2214              	.LFB67:
2803:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2215              		.loc 1 2825 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 0
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              		.cfi_def_cfa_offset 8
 2221              		.cfi_offset 7, -8
 2222              		.cfi_offset 14, -4
 2223 0002 00AF     		add	r7, sp, #0
 2224              		.cfi_def_cfa_register 7
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2225              		.loc 1 2826 0
 2226 0004 024B     		ldr	r3, .L143
 2227 0006 0022     		movs	r2, #0
 2228 0008 1A70     		strb	r2, [r3]
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2229              		.loc 1 2827 0
 2230 000a C046     		nop
 2231 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 90


 2232              		@ sp needed
 2233 000e 80BD     		pop	{r7, pc}
 2234              	.L144:
 2235              		.align	2
 2236              	.L143:
 2237 0010 00000000 		.word	CapSense_enableRawFilters
 2238              		.cfi_endproc
 2239              	.LFE67:
 2240              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2241              		.text
 2242              	.Letext0:
 2243              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2244              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2245              		.section	.debug_info,"",%progbits
 2246              	.Ldebug_info0:
 2247 0000 9F0B0000 		.4byte	0xb9f
 2248 0004 0400     		.2byte	0x4
 2249 0006 00000000 		.4byte	.Ldebug_abbrev0
 2250 000a 04       		.byte	0x4
 2251 000b 01       		.uleb128 0x1
 2252 000c 5C010000 		.4byte	.LASF122
 2253 0010 0C       		.byte	0xc
 2254 0011 BB080000 		.4byte	.LASF123
 2255 0015 E2080000 		.4byte	.LASF124
 2256 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2257 001d 00000000 		.4byte	0
 2258 0021 00000000 		.4byte	.Ldebug_line0
 2259 0025 02       		.uleb128 0x2
 2260 0026 01       		.byte	0x1
 2261 0027 06       		.byte	0x6
 2262 0028 9C090000 		.4byte	.LASF0
 2263 002c 02       		.uleb128 0x2
 2264 002d 01       		.byte	0x1
 2265 002e 08       		.byte	0x8
 2266 002f 22080000 		.4byte	.LASF1
 2267 0033 02       		.uleb128 0x2
 2268 0034 02       		.byte	0x2
 2269 0035 05       		.byte	0x5
 2270 0036 21070000 		.4byte	.LASF2
 2271 003a 02       		.uleb128 0x2
 2272 003b 02       		.byte	0x2
 2273 003c 07       		.byte	0x7
 2274 003d A8090000 		.4byte	.LASF3
 2275 0041 02       		.uleb128 0x2
 2276 0042 04       		.byte	0x4
 2277 0043 05       		.byte	0x5
 2278 0044 2B070000 		.4byte	.LASF4
 2279 0048 02       		.uleb128 0x2
 2280 0049 04       		.byte	0x4
 2281 004a 07       		.byte	0x7
 2282 004b B4070000 		.4byte	.LASF5
 2283 004f 02       		.uleb128 0x2
 2284 0050 08       		.byte	0x8
 2285 0051 05       		.byte	0x5
 2286 0052 A3050000 		.4byte	.LASF6
 2287 0056 02       		.uleb128 0x2
 2288 0057 08       		.byte	0x8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 91


 2289 0058 07       		.byte	0x7
 2290 0059 5B030000 		.4byte	.LASF7
 2291 005d 03       		.uleb128 0x3
 2292 005e 04       		.byte	0x4
 2293 005f 05       		.byte	0x5
 2294 0060 696E7400 		.ascii	"int\000"
 2295 0064 02       		.uleb128 0x2
 2296 0065 04       		.byte	0x4
 2297 0066 07       		.byte	0x7
 2298 0067 3F010000 		.4byte	.LASF8
 2299 006b 04       		.uleb128 0x4
 2300 006c 1A0A0000 		.4byte	.LASF9
 2301 0070 02       		.byte	0x2
 2302 0071 FB01     		.2byte	0x1fb
 2303 0073 2C000000 		.4byte	0x2c
 2304 0077 04       		.uleb128 0x4
 2305 0078 7F050000 		.4byte	.LASF10
 2306 007c 02       		.byte	0x2
 2307 007d FC01     		.2byte	0x1fc
 2308 007f 3A000000 		.4byte	0x3a
 2309 0083 04       		.uleb128 0x4
 2310 0084 95060000 		.4byte	.LASF11
 2311 0088 02       		.byte	0x2
 2312 0089 FD01     		.2byte	0x1fd
 2313 008b 48000000 		.4byte	0x48
 2314 008f 02       		.uleb128 0x2
 2315 0090 04       		.byte	0x4
 2316 0091 04       		.byte	0x4
 2317 0092 16030000 		.4byte	.LASF12
 2318 0096 02       		.uleb128 0x2
 2319 0097 08       		.byte	0x8
 2320 0098 04       		.byte	0x4
 2321 0099 200A0000 		.4byte	.LASF13
 2322 009d 02       		.uleb128 0x2
 2323 009e 01       		.byte	0x1
 2324 009f 08       		.byte	0x8
 2325 00a0 48050000 		.4byte	.LASF14
 2326 00a4 02       		.uleb128 0x2
 2327 00a5 04       		.byte	0x4
 2328 00a6 07       		.byte	0x7
 2329 00a7 AB070000 		.4byte	.LASF15
 2330 00ab 02       		.uleb128 0x2
 2331 00ac 08       		.byte	0x8
 2332 00ad 04       		.byte	0x4
 2333 00ae D5060000 		.4byte	.LASF16
 2334 00b2 05       		.uleb128 0x5
 2335 00b3 5C       		.byte	0x5c
 2336 00b4 03       		.byte	0x3
 2337 00b5 2F       		.byte	0x2f
 2338 00b6 CF010000 		.4byte	0x1cf
 2339 00ba 06       		.uleb128 0x6
 2340 00bb 8B050000 		.4byte	.LASF17
 2341 00bf 03       		.byte	0x3
 2342 00c0 31       		.byte	0x31
 2343 00c1 CF010000 		.4byte	0x1cf
 2344 00c5 00       		.byte	0
 2345 00c6 06       		.uleb128 0x6
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 92


 2346 00c7 FA060000 		.4byte	.LASF18
 2347 00cb 03       		.byte	0x3
 2348 00cc 32       		.byte	0x32
 2349 00cd CF010000 		.4byte	0x1cf
 2350 00d1 04       		.byte	0x4
 2351 00d2 06       		.uleb128 0x6
 2352 00d3 AC080000 		.4byte	.LASF19
 2353 00d7 03       		.byte	0x3
 2354 00d8 33       		.byte	0x33
 2355 00d9 CF010000 		.4byte	0x1cf
 2356 00dd 08       		.byte	0x8
 2357 00de 06       		.uleb128 0x6
 2358 00df 15080000 		.4byte	.LASF20
 2359 00e3 03       		.byte	0x3
 2360 00e4 34       		.byte	0x34
 2361 00e5 CF010000 		.4byte	0x1cf
 2362 00e9 0C       		.byte	0xc
 2363 00ea 06       		.uleb128 0x6
 2364 00eb 92090000 		.4byte	.LASF21
 2365 00ef 03       		.byte	0x3
 2366 00f0 35       		.byte	0x35
 2367 00f1 CF010000 		.4byte	0x1cf
 2368 00f5 10       		.byte	0x10
 2369 00f6 06       		.uleb128 0x6
 2370 00f7 52070000 		.4byte	.LASF22
 2371 00fb 03       		.byte	0x3
 2372 00fc 36       		.byte	0x36
 2373 00fd D5010000 		.4byte	0x1d5
 2374 0101 14       		.byte	0x14
 2375 0102 06       		.uleb128 0x6
 2376 0103 1C030000 		.4byte	.LASF23
 2377 0107 03       		.byte	0x3
 2378 0108 37       		.byte	0x37
 2379 0109 E0010000 		.4byte	0x1e0
 2380 010d 18       		.byte	0x18
 2381 010e 06       		.uleb128 0x6
 2382 010f 5D040000 		.4byte	.LASF24
 2383 0113 03       		.byte	0x3
 2384 0114 38       		.byte	0x38
 2385 0115 CF010000 		.4byte	0x1cf
 2386 0119 1C       		.byte	0x1c
 2387 011a 06       		.uleb128 0x6
 2388 011b 46030000 		.4byte	.LASF25
 2389 011f 03       		.byte	0x3
 2390 0120 39       		.byte	0x39
 2391 0121 CF010000 		.4byte	0x1cf
 2392 0125 20       		.byte	0x20
 2393 0126 06       		.uleb128 0x6
 2394 0127 1B020000 		.4byte	.LASF26
 2395 012b 03       		.byte	0x3
 2396 012c 3A       		.byte	0x3a
 2397 012d CF010000 		.4byte	0x1cf
 2398 0131 24       		.byte	0x24
 2399 0132 06       		.uleb128 0x6
 2400 0133 35060000 		.4byte	.LASF27
 2401 0137 03       		.byte	0x3
 2402 0138 3B       		.byte	0x3b
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 93


 2403 0139 E6010000 		.4byte	0x1e6
 2404 013d 28       		.byte	0x28
 2405 013e 06       		.uleb128 0x6
 2406 013f EA010000 		.4byte	.LASF28
 2407 0143 03       		.byte	0x3
 2408 0144 3C       		.byte	0x3c
 2409 0145 E6010000 		.4byte	0x1e6
 2410 0149 2C       		.byte	0x2c
 2411 014a 06       		.uleb128 0x6
 2412 014b DE070000 		.4byte	.LASF29
 2413 014f 03       		.byte	0x3
 2414 0150 3D       		.byte	0x3d
 2415 0151 E6010000 		.4byte	0x1e6
 2416 0155 30       		.byte	0x30
 2417 0156 06       		.uleb128 0x6
 2418 0157 9B070000 		.4byte	.LASF30
 2419 015b 03       		.byte	0x3
 2420 015c 3E       		.byte	0x3e
 2421 015d CF010000 		.4byte	0x1cf
 2422 0161 34       		.byte	0x34
 2423 0162 06       		.uleb128 0x6
 2424 0163 48000000 		.4byte	.LASF31
 2425 0167 03       		.byte	0x3
 2426 0168 3F       		.byte	0x3f
 2427 0169 CF010000 		.4byte	0x1cf
 2428 016d 38       		.byte	0x38
 2429 016e 06       		.uleb128 0x6
 2430 016f 70050000 		.4byte	.LASF32
 2431 0173 03       		.byte	0x3
 2432 0174 40       		.byte	0x40
 2433 0175 D5010000 		.4byte	0x1d5
 2434 0179 3C       		.byte	0x3c
 2435 017a 06       		.uleb128 0x6
 2436 017b 66020000 		.4byte	.LASF33
 2437 017f 03       		.byte	0x3
 2438 0180 41       		.byte	0x41
 2439 0181 D5010000 		.4byte	0x1d5
 2440 0185 40       		.byte	0x40
 2441 0186 06       		.uleb128 0x6
 2442 0187 95000000 		.4byte	.LASF34
 2443 018b 03       		.byte	0x3
 2444 018c 42       		.byte	0x42
 2445 018d D5010000 		.4byte	0x1d5
 2446 0191 44       		.byte	0x44
 2447 0192 06       		.uleb128 0x6
 2448 0193 FB050000 		.4byte	.LASF35
 2449 0197 03       		.byte	0x3
 2450 0198 43       		.byte	0x43
 2451 0199 FB010000 		.4byte	0x1fb
 2452 019d 48       		.byte	0x48
 2453 019e 06       		.uleb128 0x6
 2454 019f D3050000 		.4byte	.LASF36
 2455 01a3 03       		.byte	0x3
 2456 01a4 44       		.byte	0x44
 2457 01a5 0C020000 		.4byte	0x20c
 2458 01a9 4C       		.byte	0x4c
 2459 01aa 06       		.uleb128 0x6
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 94


 2460 01ab 73040000 		.4byte	.LASF37
 2461 01af 03       		.byte	0x3
 2462 01b0 45       		.byte	0x45
 2463 01b1 FB010000 		.4byte	0x1fb
 2464 01b5 50       		.byte	0x50
 2465 01b6 06       		.uleb128 0x6
 2466 01b7 A5000000 		.4byte	.LASF38
 2467 01bb 03       		.byte	0x3
 2468 01bc 46       		.byte	0x46
 2469 01bd 26020000 		.4byte	0x226
 2470 01c1 54       		.byte	0x54
 2471 01c2 06       		.uleb128 0x6
 2472 01c3 BB090000 		.4byte	.LASF39
 2473 01c7 03       		.byte	0x3
 2474 01c8 47       		.byte	0x47
 2475 01c9 41020000 		.4byte	0x241
 2476 01cd 58       		.byte	0x58
 2477 01ce 00       		.byte	0
 2478 01cf 07       		.uleb128 0x7
 2479 01d0 04       		.byte	0x4
 2480 01d1 6B000000 		.4byte	0x6b
 2481 01d5 07       		.uleb128 0x7
 2482 01d6 04       		.byte	0x4
 2483 01d7 DB010000 		.4byte	0x1db
 2484 01db 08       		.uleb128 0x8
 2485 01dc 6B000000 		.4byte	0x6b
 2486 01e0 07       		.uleb128 0x7
 2487 01e1 04       		.byte	0x4
 2488 01e2 83000000 		.4byte	0x83
 2489 01e6 07       		.uleb128 0x7
 2490 01e7 04       		.byte	0x4
 2491 01e8 77000000 		.4byte	0x77
 2492 01ec 09       		.uleb128 0x9
 2493 01ed 77000000 		.4byte	0x77
 2494 01f1 FB010000 		.4byte	0x1fb
 2495 01f5 0A       		.uleb128 0xa
 2496 01f6 83000000 		.4byte	0x83
 2497 01fa 00       		.byte	0
 2498 01fb 07       		.uleb128 0x7
 2499 01fc 04       		.byte	0x4
 2500 01fd EC010000 		.4byte	0x1ec
 2501 0201 0B       		.uleb128 0xb
 2502 0202 0C020000 		.4byte	0x20c
 2503 0206 0A       		.uleb128 0xa
 2504 0207 83000000 		.4byte	0x83
 2505 020b 00       		.byte	0
 2506 020c 07       		.uleb128 0x7
 2507 020d 04       		.byte	0x4
 2508 020e 01020000 		.4byte	0x201
 2509 0212 09       		.uleb128 0x9
 2510 0213 83000000 		.4byte	0x83
 2511 0217 26020000 		.4byte	0x226
 2512 021b 0A       		.uleb128 0xa
 2513 021c D5010000 		.4byte	0x1d5
 2514 0220 0A       		.uleb128 0xa
 2515 0221 83000000 		.4byte	0x83
 2516 0225 00       		.byte	0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 95


 2517 0226 07       		.uleb128 0x7
 2518 0227 04       		.byte	0x4
 2519 0228 12020000 		.4byte	0x212
 2520 022c 0B       		.uleb128 0xb
 2521 022d 41020000 		.4byte	0x241
 2522 0231 0A       		.uleb128 0xa
 2523 0232 CF010000 		.4byte	0x1cf
 2524 0236 0A       		.uleb128 0xa
 2525 0237 83000000 		.4byte	0x83
 2526 023b 0A       		.uleb128 0xa
 2527 023c 83000000 		.4byte	0x83
 2528 0240 00       		.byte	0
 2529 0241 07       		.uleb128 0x7
 2530 0242 04       		.byte	0x4
 2531 0243 2C020000 		.4byte	0x22c
 2532 0247 0C       		.uleb128 0xc
 2533 0248 18010000 		.4byte	.LASF40
 2534 024c 03       		.byte	0x3
 2535 024d 48       		.byte	0x48
 2536 024e B2000000 		.4byte	0xb2
 2537 0252 05       		.uleb128 0x5
 2538 0253 0C       		.byte	0xc
 2539 0254 03       		.byte	0x3
 2540 0255 4A       		.byte	0x4a
 2541 0256 A3020000 		.4byte	0x2a3
 2542 025a 06       		.uleb128 0x6
 2543 025b 09050000 		.4byte	.LASF41
 2544 025f 03       		.byte	0x3
 2545 0260 4C       		.byte	0x4c
 2546 0261 6B000000 		.4byte	0x6b
 2547 0265 00       		.byte	0
 2548 0266 06       		.uleb128 0x6
 2549 0267 73020000 		.4byte	.LASF42
 2550 026b 03       		.byte	0x3
 2551 026c 4D       		.byte	0x4d
 2552 026d 6B000000 		.4byte	0x6b
 2553 0271 01       		.byte	0x1
 2554 0272 06       		.uleb128 0x6
 2555 0273 4C010000 		.4byte	.LASF43
 2556 0277 03       		.byte	0x3
 2557 0278 4E       		.byte	0x4e
 2558 0279 6B000000 		.4byte	0x6b
 2559 027d 02       		.byte	0x2
 2560 027e 06       		.uleb128 0x6
 2561 027f 22050000 		.4byte	.LASF44
 2562 0283 03       		.byte	0x3
 2563 0284 4F       		.byte	0x4f
 2564 0285 77000000 		.4byte	0x77
 2565 0289 04       		.byte	0x4
 2566 028a 06       		.uleb128 0x6
 2567 028b EC060000 		.4byte	.LASF45
 2568 028f 03       		.byte	0x3
 2569 0290 50       		.byte	0x50
 2570 0291 77000000 		.4byte	0x77
 2571 0295 06       		.byte	0x6
 2572 0296 06       		.uleb128 0x6
 2573 0297 C6070000 		.4byte	.LASF46
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 96


 2574 029b 03       		.byte	0x3
 2575 029c 51       		.byte	0x51
 2576 029d A3020000 		.4byte	0x2a3
 2577 02a1 08       		.byte	0x8
 2578 02a2 00       		.byte	0
 2579 02a3 07       		.uleb128 0x7
 2580 02a4 04       		.byte	0x4
 2581 02a5 A9020000 		.4byte	0x2a9
 2582 02a9 08       		.uleb128 0x8
 2583 02aa 47020000 		.4byte	0x247
 2584 02ae 0C       		.uleb128 0xc
 2585 02af AC030000 		.4byte	.LASF47
 2586 02b3 03       		.byte	0x3
 2587 02b4 52       		.byte	0x52
 2588 02b5 52020000 		.4byte	0x252
 2589 02b9 0D       		.uleb128 0xd
 2590 02ba 23060000 		.4byte	.LASF48
 2591 02be 01       		.byte	0x1
 2592 02bf 86       		.byte	0x86
 2593 02c0 00000000 		.4byte	.LFB34
 2594 02c4 88000000 		.4byte	.LFE34-.LFB34
 2595 02c8 01       		.uleb128 0x1
 2596 02c9 9C       		.byte	0x9c
 2597 02ca EB020000 		.4byte	0x2eb
 2598 02ce 0E       		.uleb128 0xe
 2599 02cf 1B050000 		.4byte	.LASF50
 2600 02d3 01       		.byte	0x1
 2601 02d4 86       		.byte	0x86
 2602 02d5 83000000 		.4byte	0x83
 2603 02d9 02       		.uleb128 0x2
 2604 02da 91       		.byte	0x91
 2605 02db 6C       		.sleb128 -20
 2606 02dc 0F       		.uleb128 0xf
 2607 02dd 8C030000 		.4byte	.LASF52
 2608 02e1 01       		.byte	0x1
 2609 02e2 8A       		.byte	0x8a
 2610 02e3 6B000000 		.4byte	0x6b
 2611 02e7 02       		.uleb128 0x2
 2612 02e8 91       		.byte	0x91
 2613 02e9 77       		.sleb128 -9
 2614 02ea 00       		.byte	0
 2615 02eb 10       		.uleb128 0x10
 2616 02ec 2B020000 		.4byte	.LASF49
 2617 02f0 01       		.byte	0x1
 2618 02f1 D2       		.byte	0xd2
 2619 02f2 00000000 		.4byte	.LFB35
 2620 02f6 2A000000 		.4byte	.LFE35-.LFB35
 2621 02fa 01       		.uleb128 0x1
 2622 02fb 9C       		.byte	0x9c
 2623 02fc 0F030000 		.4byte	0x30f
 2624 0300 0E       		.uleb128 0xe
 2625 0301 1B050000 		.4byte	.LASF50
 2626 0305 01       		.byte	0x1
 2627 0306 D2       		.byte	0xd2
 2628 0307 83000000 		.4byte	0x83
 2629 030b 02       		.uleb128 0x2
 2630 030c 91       		.byte	0x91
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 97


 2631 030d 74       		.sleb128 -12
 2632 030e 00       		.byte	0
 2633 030f 10       		.uleb128 0x10
 2634 0310 56080000 		.4byte	.LASF51
 2635 0314 01       		.byte	0x1
 2636 0315 F7       		.byte	0xf7
 2637 0316 00000000 		.4byte	.LFB36
 2638 031a 28000000 		.4byte	.LFE36-.LFB36
 2639 031e 01       		.uleb128 0x1
 2640 031f 9C       		.byte	0x9c
 2641 0320 31030000 		.4byte	0x331
 2642 0324 11       		.uleb128 0x11
 2643 0325 6900     		.ascii	"i\000"
 2644 0327 01       		.byte	0x1
 2645 0328 F9       		.byte	0xf9
 2646 0329 83000000 		.4byte	0x83
 2647 032d 02       		.uleb128 0x2
 2648 032e 91       		.byte	0x91
 2649 032f 74       		.sleb128 -12
 2650 0330 00       		.byte	0
 2651 0331 12       		.uleb128 0x12
 2652 0332 F7010000 		.4byte	.LASF53
 2653 0336 01       		.byte	0x1
 2654 0337 1A01     		.2byte	0x11a
 2655 0339 00000000 		.4byte	.LFB37
 2656 033d 50000000 		.4byte	.LFE37-.LFB37
 2657 0341 01       		.uleb128 0x1
 2658 0342 9C       		.byte	0x9c
 2659 0343 64030000 		.4byte	0x364
 2660 0347 13       		.uleb128 0x13
 2661 0348 6900     		.ascii	"i\000"
 2662 034a 01       		.byte	0x1
 2663 034b 1C01     		.2byte	0x11c
 2664 034d 83000000 		.4byte	0x83
 2665 0351 02       		.uleb128 0x2
 2666 0352 91       		.byte	0x91
 2667 0353 74       		.sleb128 -12
 2668 0354 14       		.uleb128 0x14
 2669 0355 FB000000 		.4byte	.LASF54
 2670 0359 01       		.byte	0x1
 2671 035a 1D01     		.2byte	0x11d
 2672 035c 83000000 		.4byte	0x83
 2673 0360 02       		.uleb128 0x2
 2674 0361 91       		.byte	0x91
 2675 0362 70       		.sleb128 -16
 2676 0363 00       		.byte	0
 2677 0364 12       		.uleb128 0x12
 2678 0365 72000000 		.4byte	.LASF55
 2679 0369 01       		.byte	0x1
 2680 036a 5B01     		.2byte	0x15b
 2681 036c 00000000 		.4byte	.LFB38
 2682 0370 34020000 		.4byte	.LFE38-.LFB38
 2683 0374 01       		.uleb128 0x1
 2684 0375 9C       		.byte	0x9c
 2685 0376 E4030000 		.4byte	0x3e4
 2686 037a 15       		.uleb128 0x15
 2687 037b 1B050000 		.4byte	.LASF50
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 98


 2688 037f 01       		.byte	0x1
 2689 0380 5B01     		.2byte	0x15b
 2690 0382 83000000 		.4byte	0x83
 2691 0386 02       		.uleb128 0x2
 2692 0387 91       		.byte	0x91
 2693 0388 5C       		.sleb128 -36
 2694 0389 14       		.uleb128 0x14
 2695 038a 6E040000 		.4byte	.LASF56
 2696 038e 01       		.byte	0x1
 2697 038f 5D01     		.2byte	0x15d
 2698 0391 83000000 		.4byte	0x83
 2699 0395 02       		.uleb128 0x2
 2700 0396 91       		.byte	0x91
 2701 0397 60       		.sleb128 -32
 2702 0398 14       		.uleb128 0x14
 2703 0399 58040000 		.4byte	.LASF57
 2704 039d 01       		.byte	0x1
 2705 039e 5E01     		.2byte	0x15e
 2706 03a0 83000000 		.4byte	0x83
 2707 03a4 02       		.uleb128 0x2
 2708 03a5 91       		.byte	0x91
 2709 03a6 6C       		.sleb128 -20
 2710 03a7 14       		.uleb128 0x14
 2711 03a8 E0090000 		.4byte	.LASF58
 2712 03ac 01       		.byte	0x1
 2713 03ad 5F01     		.2byte	0x15f
 2714 03af 77000000 		.4byte	0x77
 2715 03b3 02       		.uleb128 0x2
 2716 03b4 91       		.byte	0x91
 2717 03b5 6A       		.sleb128 -22
 2718 03b6 14       		.uleb128 0x14
 2719 03b7 8F040000 		.4byte	.LASF59
 2720 03bb 01       		.byte	0x1
 2721 03bc 6001     		.2byte	0x160
 2722 03be 77000000 		.4byte	0x77
 2723 03c2 02       		.uleb128 0x2
 2724 03c3 91       		.byte	0x91
 2725 03c4 68       		.sleb128 -24
 2726 03c5 14       		.uleb128 0x14
 2727 03c6 8C030000 		.4byte	.LASF52
 2728 03ca 01       		.byte	0x1
 2729 03cb 6101     		.2byte	0x161
 2730 03cd 6B000000 		.4byte	0x6b
 2731 03d1 02       		.uleb128 0x2
 2732 03d2 91       		.byte	0x91
 2733 03d3 67       		.sleb128 -25
 2734 03d4 14       		.uleb128 0x14
 2735 03d5 CF070000 		.4byte	.LASF60
 2736 03d9 01       		.byte	0x1
 2737 03da 6201     		.2byte	0x162
 2738 03dc 6B000000 		.4byte	0x6b
 2739 03e0 02       		.uleb128 0x2
 2740 03e1 91       		.byte	0x91
 2741 03e2 66       		.sleb128 -26
 2742 03e3 00       		.byte	0
 2743 03e4 12       		.uleb128 0x12
 2744 03e5 05060000 		.4byte	.LASF61
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 99


 2745 03e9 01       		.byte	0x1
 2746 03ea 1B02     		.2byte	0x21b
 2747 03ec 00000000 		.4byte	.LFB39
 2748 03f0 20000000 		.4byte	.LFE39-.LFB39
 2749 03f4 01       		.uleb128 0x1
 2750 03f5 9C       		.byte	0x9c
 2751 03f6 0A040000 		.4byte	0x40a
 2752 03fa 15       		.uleb128 0x15
 2753 03fb 1B050000 		.4byte	.LASF50
 2754 03ff 01       		.byte	0x1
 2755 0400 1B02     		.2byte	0x21b
 2756 0402 83000000 		.4byte	0x83
 2757 0406 02       		.uleb128 0x2
 2758 0407 91       		.byte	0x91
 2759 0408 74       		.sleb128 -12
 2760 0409 00       		.byte	0
 2761 040a 12       		.uleb128 0x12
 2762 040b CB000000 		.4byte	.LASF62
 2763 040f 01       		.byte	0x1
 2764 0410 5102     		.2byte	0x251
 2765 0412 00000000 		.4byte	.LFB40
 2766 0416 44000000 		.4byte	.LFE40-.LFB40
 2767 041a 01       		.uleb128 0x1
 2768 041b 9C       		.byte	0x9c
 2769 041c 3D040000 		.4byte	0x43d
 2770 0420 13       		.uleb128 0x13
 2771 0421 6900     		.ascii	"i\000"
 2772 0423 01       		.byte	0x1
 2773 0424 5302     		.2byte	0x253
 2774 0426 83000000 		.4byte	0x83
 2775 042a 02       		.uleb128 0x2
 2776 042b 91       		.byte	0x91
 2777 042c 74       		.sleb128 -12
 2778 042d 14       		.uleb128 0x14
 2779 042e FB000000 		.4byte	.LASF54
 2780 0432 01       		.byte	0x1
 2781 0433 5402     		.2byte	0x254
 2782 0435 83000000 		.4byte	0x83
 2783 0439 02       		.uleb128 0x2
 2784 043a 91       		.byte	0x91
 2785 043b 70       		.sleb128 -16
 2786 043c 00       		.byte	0
 2787 043d 12       		.uleb128 0x12
 2788 043e E4020000 		.4byte	.LASF63
 2789 0442 01       		.byte	0x1
 2790 0443 7E02     		.2byte	0x27e
 2791 0445 00000000 		.4byte	.LFB41
 2792 0449 58000000 		.4byte	.LFE41-.LFB41
 2793 044d 01       		.uleb128 0x1
 2794 044e 9C       		.byte	0x9c
 2795 044f AC040000 		.4byte	0x4ac
 2796 0453 15       		.uleb128 0x15
 2797 0454 8C030000 		.4byte	.LASF52
 2798 0458 01       		.byte	0x1
 2799 0459 7E02     		.2byte	0x27e
 2800 045b 83000000 		.4byte	0x83
 2801 045f 02       		.uleb128 0x2
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 100


 2802 0460 91       		.byte	0x91
 2803 0461 5C       		.sleb128 -36
 2804 0462 14       		.uleb128 0x14
 2805 0463 9F040000 		.4byte	.LASF64
 2806 0467 01       		.byte	0x1
 2807 0468 8002     		.2byte	0x280
 2808 046a 83000000 		.4byte	0x83
 2809 046e 02       		.uleb128 0x2
 2810 046f 91       		.byte	0x91
 2811 0470 70       		.sleb128 -16
 2812 0471 14       		.uleb128 0x14
 2813 0472 34070000 		.4byte	.LASF65
 2814 0476 01       		.byte	0x1
 2815 0477 8102     		.2byte	0x281
 2816 0479 83000000 		.4byte	0x83
 2817 047d 02       		.uleb128 0x2
 2818 047e 91       		.byte	0x91
 2819 047f 6C       		.sleb128 -20
 2820 0480 14       		.uleb128 0x14
 2821 0481 E1060000 		.4byte	.LASF66
 2822 0485 01       		.byte	0x1
 2823 0486 8202     		.2byte	0x282
 2824 0488 83000000 		.4byte	0x83
 2825 048c 02       		.uleb128 0x2
 2826 048d 91       		.byte	0x91
 2827 048e 68       		.sleb128 -24
 2828 048f 13       		.uleb128 0x13
 2829 0490 6900     		.ascii	"i\000"
 2830 0492 01       		.byte	0x1
 2831 0493 8302     		.2byte	0x283
 2832 0495 83000000 		.4byte	0x83
 2833 0499 02       		.uleb128 0x2
 2834 049a 91       		.byte	0x91
 2835 049b 74       		.sleb128 -12
 2836 049c 14       		.uleb128 0x14
 2837 049d FB000000 		.4byte	.LASF54
 2838 04a1 01       		.byte	0x1
 2839 04a2 8402     		.2byte	0x284
 2840 04a4 83000000 		.4byte	0x83
 2841 04a8 02       		.uleb128 0x2
 2842 04a9 91       		.byte	0x91
 2843 04aa 64       		.sleb128 -28
 2844 04ab 00       		.byte	0
 2845 04ac 16       		.uleb128 0x16
 2846 04ad 76080000 		.4byte	.LASF69
 2847 04b1 01       		.byte	0x1
 2848 04b2 AF02     		.2byte	0x2af
 2849 04b4 77000000 		.4byte	0x77
 2850 04b8 00000000 		.4byte	.LFB42
 2851 04bc 1C000000 		.4byte	.LFE42-.LFB42
 2852 04c0 01       		.uleb128 0x1
 2853 04c1 9C       		.byte	0x9c
 2854 04c2 D6040000 		.4byte	0x4d6
 2855 04c6 15       		.uleb128 0x15
 2856 04c7 1B050000 		.4byte	.LASF50
 2857 04cb 01       		.byte	0x1
 2858 04cc AF02     		.2byte	0x2af
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 101


 2859 04ce 83000000 		.4byte	0x83
 2860 04d2 02       		.uleb128 0x2
 2861 04d3 91       		.byte	0x91
 2862 04d4 74       		.sleb128 -12
 2863 04d5 00       		.byte	0
 2864 04d6 17       		.uleb128 0x17
 2865 04d7 4D020000 		.4byte	.LASF67
 2866 04db 01       		.byte	0x1
 2867 04dc CA02     		.2byte	0x2ca
 2868 04de 00000000 		.4byte	.LFB43
 2869 04e2 28000000 		.4byte	.LFE43-.LFB43
 2870 04e6 01       		.uleb128 0x1
 2871 04e7 9C       		.byte	0x9c
 2872 04e8 0B050000 		.4byte	0x50b
 2873 04ec 15       		.uleb128 0x15
 2874 04ed 1B050000 		.4byte	.LASF50
 2875 04f1 01       		.byte	0x1
 2876 04f2 CA02     		.2byte	0x2ca
 2877 04f4 83000000 		.4byte	0x83
 2878 04f8 02       		.uleb128 0x2
 2879 04f9 91       		.byte	0x91
 2880 04fa 74       		.sleb128 -12
 2881 04fb 15       		.uleb128 0x15
 2882 04fc 86050000 		.4byte	.LASF68
 2883 0500 01       		.byte	0x1
 2884 0501 CA02     		.2byte	0x2ca
 2885 0503 77000000 		.4byte	0x77
 2886 0507 02       		.uleb128 0x2
 2887 0508 91       		.byte	0x91
 2888 0509 72       		.sleb128 -14
 2889 050a 00       		.byte	0
 2890 050b 16       		.uleb128 0x16
 2891 050c 3E040000 		.4byte	.LASF70
 2892 0510 01       		.byte	0x1
 2893 0511 E502     		.2byte	0x2e5
 2894 0513 6B000000 		.4byte	0x6b
 2895 0517 00000000 		.4byte	.LFB44
 2896 051b 1C000000 		.4byte	.LFE44-.LFB44
 2897 051f 01       		.uleb128 0x1
 2898 0520 9C       		.byte	0x9c
 2899 0521 35050000 		.4byte	0x535
 2900 0525 15       		.uleb128 0x15
 2901 0526 1B050000 		.4byte	.LASF50
 2902 052a 01       		.byte	0x1
 2903 052b E502     		.2byte	0x2e5
 2904 052d 83000000 		.4byte	0x83
 2905 0531 02       		.uleb128 0x2
 2906 0532 91       		.byte	0x91
 2907 0533 74       		.sleb128 -12
 2908 0534 00       		.byte	0
 2909 0535 17       		.uleb128 0x17
 2910 0536 83020000 		.4byte	.LASF71
 2911 053a 01       		.byte	0x1
 2912 053b 0003     		.2byte	0x300
 2913 053d 00000000 		.4byte	.LFB45
 2914 0541 28000000 		.4byte	.LFE45-.LFB45
 2915 0545 01       		.uleb128 0x1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 102


 2916 0546 9C       		.byte	0x9c
 2917 0547 6A050000 		.4byte	0x56a
 2918 054b 15       		.uleb128 0x15
 2919 054c 1B050000 		.4byte	.LASF50
 2920 0550 01       		.byte	0x1
 2921 0551 0003     		.2byte	0x300
 2922 0553 83000000 		.4byte	0x83
 2923 0557 02       		.uleb128 0x2
 2924 0558 91       		.byte	0x91
 2925 0559 74       		.sleb128 -12
 2926 055a 15       		.uleb128 0x15
 2927 055b 1B040000 		.4byte	.LASF72
 2928 055f 01       		.byte	0x1
 2929 0560 0003     		.2byte	0x300
 2930 0562 6B000000 		.4byte	0x6b
 2931 0566 02       		.uleb128 0x2
 2932 0567 91       		.byte	0x91
 2933 0568 73       		.sleb128 -13
 2934 0569 00       		.byte	0
 2935 056a 16       		.uleb128 0x16
 2936 056b B9060000 		.4byte	.LASF73
 2937 056f 01       		.byte	0x1
 2938 0570 1B03     		.2byte	0x31b
 2939 0572 6B000000 		.4byte	0x6b
 2940 0576 00000000 		.4byte	.LFB46
 2941 057a 1C000000 		.4byte	.LFE46-.LFB46
 2942 057e 01       		.uleb128 0x1
 2943 057f 9C       		.byte	0x9c
 2944 0580 94050000 		.4byte	0x594
 2945 0584 15       		.uleb128 0x15
 2946 0585 8C030000 		.4byte	.LASF52
 2947 0589 01       		.byte	0x1
 2948 058a 1B03     		.2byte	0x31b
 2949 058c 83000000 		.4byte	0x83
 2950 0590 02       		.uleb128 0x2
 2951 0591 91       		.byte	0x91
 2952 0592 74       		.sleb128 -12
 2953 0593 00       		.byte	0
 2954 0594 16       		.uleb128 0x16
 2955 0595 2B030000 		.4byte	.LASF74
 2956 0599 01       		.byte	0x1
 2957 059a 3603     		.2byte	0x336
 2958 059c 6B000000 		.4byte	0x6b
 2959 05a0 00000000 		.4byte	.LFB47
 2960 05a4 1C000000 		.4byte	.LFE47-.LFB47
 2961 05a8 01       		.uleb128 0x1
 2962 05a9 9C       		.byte	0x9c
 2963 05aa BE050000 		.4byte	0x5be
 2964 05ae 15       		.uleb128 0x15
 2965 05af 8C030000 		.4byte	.LASF52
 2966 05b3 01       		.byte	0x1
 2967 05b4 3603     		.2byte	0x336
 2968 05b6 83000000 		.4byte	0x83
 2969 05ba 02       		.uleb128 0x2
 2970 05bb 91       		.byte	0x91
 2971 05bc 74       		.sleb128 -12
 2972 05bd 00       		.byte	0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 103


 2973 05be 16       		.uleb128 0x16
 2974 05bf 21040000 		.4byte	.LASF75
 2975 05c3 01       		.byte	0x1
 2976 05c4 5203     		.2byte	0x352
 2977 05c6 6B000000 		.4byte	0x6b
 2978 05ca 00000000 		.4byte	.LFB48
 2979 05ce 1C000000 		.4byte	.LFE48-.LFB48
 2980 05d2 01       		.uleb128 0x1
 2981 05d3 9C       		.byte	0x9c
 2982 05d4 E8050000 		.4byte	0x5e8
 2983 05d8 15       		.uleb128 0x15
 2984 05d9 8C030000 		.4byte	.LASF52
 2985 05dd 01       		.byte	0x1
 2986 05de 5203     		.2byte	0x352
 2987 05e0 83000000 		.4byte	0x83
 2988 05e4 02       		.uleb128 0x2
 2989 05e5 91       		.byte	0x91
 2990 05e6 74       		.sleb128 -12
 2991 05e7 00       		.byte	0
 2992 05e8 16       		.uleb128 0x16
 2993 05e9 4D050000 		.4byte	.LASF76
 2994 05ed 01       		.byte	0x1
 2995 05ee 6E03     		.2byte	0x36e
 2996 05f0 6B000000 		.4byte	0x6b
 2997 05f4 00000000 		.4byte	.LFB49
 2998 05f8 1C000000 		.4byte	.LFE49-.LFB49
 2999 05fc 01       		.uleb128 0x1
 3000 05fd 9C       		.byte	0x9c
 3001 05fe 12060000 		.4byte	0x612
 3002 0602 15       		.uleb128 0x15
 3003 0603 8C030000 		.4byte	.LASF52
 3004 0607 01       		.byte	0x1
 3005 0608 6E03     		.2byte	0x36e
 3006 060a 83000000 		.4byte	0x83
 3007 060e 02       		.uleb128 0x2
 3008 060f 91       		.byte	0x91
 3009 0610 74       		.sleb128 -12
 3010 0611 00       		.byte	0
 3011 0612 17       		.uleb128 0x17
 3012 0613 E0030000 		.4byte	.LASF77
 3013 0617 01       		.byte	0x1
 3014 0618 8F03     		.2byte	0x38f
 3015 061a 00000000 		.4byte	.LFB50
 3016 061e 28000000 		.4byte	.LFE50-.LFB50
 3017 0622 01       		.uleb128 0x1
 3018 0623 9C       		.byte	0x9c
 3019 0624 47060000 		.4byte	0x647
 3020 0628 15       		.uleb128 0x15
 3021 0629 8C030000 		.4byte	.LASF52
 3022 062d 01       		.byte	0x1
 3023 062e 8F03     		.2byte	0x38f
 3024 0630 83000000 		.4byte	0x83
 3025 0634 02       		.uleb128 0x2
 3026 0635 91       		.byte	0x91
 3027 0636 74       		.sleb128 -12
 3028 0637 15       		.uleb128 0x15
 3029 0638 1B040000 		.4byte	.LASF72
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 104


 3030 063c 01       		.byte	0x1
 3031 063d 8F03     		.2byte	0x38f
 3032 063f 6B000000 		.4byte	0x6b
 3033 0643 02       		.uleb128 0x2
 3034 0644 91       		.byte	0x91
 3035 0645 73       		.sleb128 -13
 3036 0646 00       		.byte	0
 3037 0647 17       		.uleb128 0x17
 3038 0648 C9020000 		.4byte	.LASF78
 3039 064c 01       		.byte	0x1
 3040 064d AB03     		.2byte	0x3ab
 3041 064f 00000000 		.4byte	.LFB51
 3042 0653 28000000 		.4byte	.LFE51-.LFB51
 3043 0657 01       		.uleb128 0x1
 3044 0658 9C       		.byte	0x9c
 3045 0659 7C060000 		.4byte	0x67c
 3046 065d 15       		.uleb128 0x15
 3047 065e 8C030000 		.4byte	.LASF52
 3048 0662 01       		.byte	0x1
 3049 0663 AB03     		.2byte	0x3ab
 3050 0665 83000000 		.4byte	0x83
 3051 0669 02       		.uleb128 0x2
 3052 066a 91       		.byte	0x91
 3053 066b 74       		.sleb128 -12
 3054 066c 15       		.uleb128 0x15
 3055 066d 1B040000 		.4byte	.LASF72
 3056 0671 01       		.byte	0x1
 3057 0672 AB03     		.2byte	0x3ab
 3058 0674 6B000000 		.4byte	0x6b
 3059 0678 02       		.uleb128 0x2
 3060 0679 91       		.byte	0x91
 3061 067a 73       		.sleb128 -13
 3062 067b 00       		.byte	0
 3063 067c 17       		.uleb128 0x17
 3064 067d 9C060000 		.4byte	.LASF79
 3065 0681 01       		.byte	0x1
 3066 0682 C703     		.2byte	0x3c7
 3067 0684 00000000 		.4byte	.LFB52
 3068 0688 28000000 		.4byte	.LFE52-.LFB52
 3069 068c 01       		.uleb128 0x1
 3070 068d 9C       		.byte	0x9c
 3071 068e B1060000 		.4byte	0x6b1
 3072 0692 15       		.uleb128 0x15
 3073 0693 8C030000 		.4byte	.LASF52
 3074 0697 01       		.byte	0x1
 3075 0698 C703     		.2byte	0x3c7
 3076 069a 83000000 		.4byte	0x83
 3077 069e 02       		.uleb128 0x2
 3078 069f 91       		.byte	0x91
 3079 06a0 74       		.sleb128 -12
 3080 06a1 15       		.uleb128 0x15
 3081 06a2 1B040000 		.4byte	.LASF72
 3082 06a6 01       		.byte	0x1
 3083 06a7 C703     		.2byte	0x3c7
 3084 06a9 6B000000 		.4byte	0x6b
 3085 06ad 02       		.uleb128 0x2
 3086 06ae 91       		.byte	0x91
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 105


 3087 06af 73       		.sleb128 -13
 3088 06b0 00       		.byte	0
 3089 06b1 17       		.uleb128 0x17
 3090 06b2 72060000 		.4byte	.LASF80
 3091 06b6 01       		.byte	0x1
 3092 06b7 E403     		.2byte	0x3e4
 3093 06b9 00000000 		.4byte	.LFB53
 3094 06bd 28000000 		.4byte	.LFE53-.LFB53
 3095 06c1 01       		.uleb128 0x1
 3096 06c2 9C       		.byte	0x9c
 3097 06c3 E6060000 		.4byte	0x6e6
 3098 06c7 15       		.uleb128 0x15
 3099 06c8 8C030000 		.4byte	.LASF52
 3100 06cc 01       		.byte	0x1
 3101 06cd E403     		.2byte	0x3e4
 3102 06cf 83000000 		.4byte	0x83
 3103 06d3 02       		.uleb128 0x2
 3104 06d4 91       		.byte	0x91
 3105 06d5 74       		.sleb128 -12
 3106 06d6 15       		.uleb128 0x15
 3107 06d7 1B040000 		.4byte	.LASF72
 3108 06db 01       		.byte	0x1
 3109 06dc E403     		.2byte	0x3e4
 3110 06de 6B000000 		.4byte	0x6b
 3111 06e2 02       		.uleb128 0x2
 3112 06e3 91       		.byte	0x91
 3113 06e4 73       		.sleb128 -13
 3114 06e5 00       		.byte	0
 3115 06e6 17       		.uleb128 0x17
 3116 06e7 F0070000 		.4byte	.LASF81
 3117 06eb 01       		.byte	0x1
 3118 06ec 0004     		.2byte	0x400
 3119 06ee 00000000 		.4byte	.LFB54
 3120 06f2 28000000 		.4byte	.LFE54-.LFB54
 3121 06f6 01       		.uleb128 0x1
 3122 06f7 9C       		.byte	0x9c
 3123 06f8 1B070000 		.4byte	0x71b
 3124 06fc 15       		.uleb128 0x15
 3125 06fd 8C030000 		.4byte	.LASF52
 3126 0701 01       		.byte	0x1
 3127 0702 0004     		.2byte	0x400
 3128 0704 83000000 		.4byte	0x83
 3129 0708 02       		.uleb128 0x2
 3130 0709 91       		.byte	0x91
 3131 070a 74       		.sleb128 -12
 3132 070b 15       		.uleb128 0x15
 3133 070c 1B040000 		.4byte	.LASF72
 3134 0710 01       		.byte	0x1
 3135 0711 0004     		.2byte	0x400
 3136 0713 6B000000 		.4byte	0x6b
 3137 0717 02       		.uleb128 0x2
 3138 0718 91       		.byte	0x91
 3139 0719 73       		.sleb128 -13
 3140 071a 00       		.byte	0
 3141 071b 17       		.uleb128 0x17
 3142 071c 8F080000 		.4byte	.LASF82
 3143 0720 01       		.byte	0x1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 106


 3144 0721 1C04     		.2byte	0x41c
 3145 0723 00000000 		.4byte	.LFB55
 3146 0727 28000000 		.4byte	.LFE55-.LFB55
 3147 072b 01       		.uleb128 0x1
 3148 072c 9C       		.byte	0x9c
 3149 072d 50070000 		.4byte	0x750
 3150 0731 15       		.uleb128 0x15
 3151 0732 1B050000 		.4byte	.LASF50
 3152 0736 01       		.byte	0x1
 3153 0737 1C04     		.2byte	0x41c
 3154 0739 83000000 		.4byte	0x83
 3155 073d 02       		.uleb128 0x2
 3156 073e 91       		.byte	0x91
 3157 073f 74       		.sleb128 -12
 3158 0740 15       		.uleb128 0x15
 3159 0741 1B040000 		.4byte	.LASF72
 3160 0745 01       		.byte	0x1
 3161 0746 1C04     		.2byte	0x41c
 3162 0748 6B000000 		.4byte	0x6b
 3163 074c 02       		.uleb128 0x2
 3164 074d 91       		.byte	0x91
 3165 074e 73       		.sleb128 -13
 3166 074f 00       		.byte	0
 3167 0750 18       		.uleb128 0x18
 3168 0751 DE050000 		.4byte	.LASF83
 3169 0755 01       		.byte	0x1
 3170 0756 4A04     		.2byte	0x44a
 3171 0758 83000000 		.4byte	0x83
 3172 075c 00000000 		.4byte	.LFB56
 3173 0760 30010000 		.4byte	.LFE56-.LFB56
 3174 0764 01       		.uleb128 0x1
 3175 0765 9C       		.byte	0x9c
 3176 0766 C5070000 		.4byte	0x7c5
 3177 076a 15       		.uleb128 0x15
 3178 076b 1B050000 		.4byte	.LASF50
 3179 076f 01       		.byte	0x1
 3180 0770 4A04     		.2byte	0x44a
 3181 0772 83000000 		.4byte	0x83
 3182 0776 02       		.uleb128 0x2
 3183 0777 91       		.byte	0x91
 3184 0778 6C       		.sleb128 -20
 3185 0779 14       		.uleb128 0x14
 3186 077a 8C030000 		.4byte	.LASF52
 3187 077e 01       		.byte	0x1
 3188 077f 4C04     		.2byte	0x44c
 3189 0781 6B000000 		.4byte	0x6b
 3190 0785 02       		.uleb128 0x2
 3191 0786 91       		.byte	0x91
 3192 0787 77       		.sleb128 -9
 3193 0788 14       		.uleb128 0x14
 3194 0789 CA050000 		.4byte	.LASF84
 3195 078d 01       		.byte	0x1
 3196 078e 4D04     		.2byte	0x44d
 3197 0790 6B000000 		.4byte	0x6b
 3198 0794 02       		.uleb128 0x2
 3199 0795 91       		.byte	0x91
 3200 0796 74       		.sleb128 -12
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 107


 3201 0797 14       		.uleb128 0x14
 3202 0798 48080000 		.4byte	.LASF85
 3203 079c 01       		.byte	0x1
 3204 079d 4E04     		.2byte	0x44e
 3205 079f 6B000000 		.4byte	0x6b
 3206 07a3 02       		.uleb128 0x2
 3207 07a4 91       		.byte	0x91
 3208 07a5 73       		.sleb128 -13
 3209 07a6 14       		.uleb128 0x14
 3210 07a7 05080000 		.4byte	.LASF86
 3211 07ab 01       		.byte	0x1
 3212 07ac 5004     		.2byte	0x450
 3213 07ae 6B000000 		.4byte	0x6b
 3214 07b2 02       		.uleb128 0x2
 3215 07b3 91       		.byte	0x91
 3216 07b4 76       		.sleb128 -10
 3217 07b5 14       		.uleb128 0x14
 3218 07b6 84040000 		.4byte	.LASF87
 3219 07ba 01       		.byte	0x1
 3220 07bb 5104     		.2byte	0x451
 3221 07bd 6B000000 		.4byte	0x6b
 3222 07c1 02       		.uleb128 0x2
 3223 07c2 91       		.byte	0x91
 3224 07c3 75       		.sleb128 -11
 3225 07c4 00       		.byte	0
 3226 07c5 18       		.uleb128 0x18
 3227 07c6 FD090000 		.4byte	.LASF88
 3228 07ca 01       		.byte	0x1
 3229 07cb 9C04     		.2byte	0x49c
 3230 07cd 83000000 		.4byte	0x83
 3231 07d1 00000000 		.4byte	.LFB57
 3232 07d5 42000000 		.4byte	.LFE57-.LFB57
 3233 07d9 01       		.uleb128 0x1
 3234 07da 9C       		.byte	0x9c
 3235 07db 1C080000 		.4byte	0x81c
 3236 07df 15       		.uleb128 0x15
 3237 07e0 8C030000 		.4byte	.LASF52
 3238 07e4 01       		.byte	0x1
 3239 07e5 9C04     		.2byte	0x49c
 3240 07e7 83000000 		.4byte	0x83
 3241 07eb 02       		.uleb128 0x2
 3242 07ec 91       		.byte	0x91
 3243 07ed 64       		.sleb128 -28
 3244 07ee 14       		.uleb128 0x14
 3245 07ef 9A050000 		.4byte	.LASF89
 3246 07f3 01       		.byte	0x1
 3247 07f4 9E04     		.2byte	0x49e
 3248 07f6 83000000 		.4byte	0x83
 3249 07fa 02       		.uleb128 0x2
 3250 07fb 91       		.byte	0x91
 3251 07fc 74       		.sleb128 -12
 3252 07fd 14       		.uleb128 0x14
 3253 07fe 0B010000 		.4byte	.LASF90
 3254 0802 01       		.byte	0x1
 3255 0803 9F04     		.2byte	0x49f
 3256 0805 83000000 		.4byte	0x83
 3257 0809 02       		.uleb128 0x2
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 108


 3258 080a 91       		.byte	0x91
 3259 080b 6C       		.sleb128 -20
 3260 080c 14       		.uleb128 0x14
 3261 080d A5070000 		.4byte	.LASF91
 3262 0811 01       		.byte	0x1
 3263 0812 A004     		.2byte	0x4a0
 3264 0814 83000000 		.4byte	0x83
 3265 0818 02       		.uleb128 0x2
 3266 0819 91       		.byte	0x91
 3267 081a 70       		.sleb128 -16
 3268 081b 00       		.byte	0
 3269 081c 18       		.uleb128 0x18
 3270 081d B0040000 		.4byte	.LASF92
 3271 0821 01       		.byte	0x1
 3272 0822 CA04     		.2byte	0x4ca
 3273 0824 83000000 		.4byte	0x83
 3274 0828 00000000 		.4byte	.LFB58
 3275 082c 36000000 		.4byte	.LFE58-.LFB58
 3276 0830 01       		.uleb128 0x1
 3277 0831 9C       		.byte	0x9c
 3278 0832 53080000 		.4byte	0x853
 3279 0836 13       		.uleb128 0x13
 3280 0837 6900     		.ascii	"i\000"
 3281 0839 01       		.byte	0x1
 3282 083a CD04     		.2byte	0x4cd
 3283 083c 83000000 		.4byte	0x83
 3284 0840 02       		.uleb128 0x2
 3285 0841 91       		.byte	0x91
 3286 0842 74       		.sleb128 -12
 3287 0843 14       		.uleb128 0x14
 3288 0844 A5070000 		.4byte	.LASF91
 3289 0848 01       		.byte	0x1
 3290 0849 CE04     		.2byte	0x4ce
 3291 084b 83000000 		.4byte	0x83
 3292 084f 02       		.uleb128 0x2
 3293 0850 91       		.byte	0x91
 3294 0851 70       		.sleb128 -16
 3295 0852 00       		.byte	0
 3296 0853 12       		.uleb128 0x12
 3297 0854 32050000 		.4byte	.LASF93
 3298 0858 01       		.byte	0x1
 3299 0859 F904     		.2byte	0x4f9
 3300 085b 00000000 		.4byte	.LFB59
 3301 085f 5C000000 		.4byte	.LFE59-.LFB59
 3302 0863 01       		.uleb128 0x1
 3303 0864 9C       		.byte	0x9c
 3304 0865 97080000 		.4byte	0x897
 3305 0869 15       		.uleb128 0x15
 3306 086a 8C030000 		.4byte	.LASF52
 3307 086e 01       		.byte	0x1
 3308 086f F904     		.2byte	0x4f9
 3309 0871 83000000 		.4byte	0x83
 3310 0875 02       		.uleb128 0x2
 3311 0876 91       		.byte	0x91
 3312 0877 6C       		.sleb128 -20
 3313 0878 14       		.uleb128 0x14
 3314 0879 9A050000 		.4byte	.LASF89
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 109


 3315 087d 01       		.byte	0x1
 3316 087e FC04     		.2byte	0x4fc
 3317 0880 6B000000 		.4byte	0x6b
 3318 0884 02       		.uleb128 0x2
 3319 0885 91       		.byte	0x91
 3320 0886 77       		.sleb128 -9
 3321 0887 14       		.uleb128 0x14
 3322 0888 0B010000 		.4byte	.LASF90
 3323 088c 01       		.byte	0x1
 3324 088d FD04     		.2byte	0x4fd
 3325 088f 6B000000 		.4byte	0x6b
 3326 0893 02       		.uleb128 0x2
 3327 0894 91       		.byte	0x91
 3328 0895 76       		.sleb128 -10
 3329 0896 00       		.byte	0
 3330 0897 12       		.uleb128 0x12
 3331 0898 B4000000 		.4byte	.LASF94
 3332 089c 01       		.byte	0x1
 3333 089d 2405     		.2byte	0x524
 3334 089f 00000000 		.4byte	.LFB60
 3335 08a3 5C000000 		.4byte	.LFE60-.LFB60
 3336 08a7 01       		.uleb128 0x1
 3337 08a8 9C       		.byte	0x9c
 3338 08a9 DB080000 		.4byte	0x8db
 3339 08ad 15       		.uleb128 0x15
 3340 08ae 8C030000 		.4byte	.LASF52
 3341 08b2 01       		.byte	0x1
 3342 08b3 2405     		.2byte	0x524
 3343 08b5 83000000 		.4byte	0x83
 3344 08b9 02       		.uleb128 0x2
 3345 08ba 91       		.byte	0x91
 3346 08bb 6C       		.sleb128 -20
 3347 08bc 14       		.uleb128 0x14
 3348 08bd 9A050000 		.4byte	.LASF89
 3349 08c1 01       		.byte	0x1
 3350 08c2 2605     		.2byte	0x526
 3351 08c4 6B000000 		.4byte	0x6b
 3352 08c8 02       		.uleb128 0x2
 3353 08c9 91       		.byte	0x91
 3354 08ca 77       		.sleb128 -9
 3355 08cb 14       		.uleb128 0x14
 3356 08cc 0B010000 		.4byte	.LASF90
 3357 08d0 01       		.byte	0x1
 3358 08d1 2705     		.2byte	0x527
 3359 08d3 6B000000 		.4byte	0x6b
 3360 08d7 02       		.uleb128 0x2
 3361 08d8 91       		.byte	0x91
 3362 08d9 76       		.sleb128 -10
 3363 08da 00       		.byte	0
 3364 08db 16       		.uleb128 0x16
 3365 08dc CA090000 		.4byte	.LASF95
 3366 08e0 01       		.byte	0x1
 3367 08e1 4009     		.2byte	0x940
 3368 08e3 77000000 		.4byte	0x77
 3369 08e7 00000000 		.4byte	.LFB61
 3370 08eb 76000000 		.4byte	.LFE61-.LFB61
 3371 08ef 01       		.uleb128 0x1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 110


 3372 08f0 9C       		.byte	0x9c
 3373 08f1 2F090000 		.4byte	0x92f
 3374 08f5 19       		.uleb128 0x19
 3375 08f6 783100   		.ascii	"x1\000"
 3376 08f9 01       		.byte	0x1
 3377 08fa 4009     		.2byte	0x940
 3378 08fc 77000000 		.4byte	0x77
 3379 0900 02       		.uleb128 0x2
 3380 0901 91       		.byte	0x91
 3381 0902 66       		.sleb128 -26
 3382 0903 19       		.uleb128 0x19
 3383 0904 783200   		.ascii	"x2\000"
 3384 0907 01       		.byte	0x1
 3385 0908 4009     		.2byte	0x940
 3386 090a 77000000 		.4byte	0x77
 3387 090e 02       		.uleb128 0x2
 3388 090f 91       		.byte	0x91
 3389 0910 64       		.sleb128 -28
 3390 0911 19       		.uleb128 0x19
 3391 0912 783300   		.ascii	"x3\000"
 3392 0915 01       		.byte	0x1
 3393 0916 4009     		.2byte	0x940
 3394 0918 77000000 		.4byte	0x77
 3395 091c 02       		.uleb128 0x2
 3396 091d 91       		.byte	0x91
 3397 091e 62       		.sleb128 -30
 3398 091f 13       		.uleb128 0x13
 3399 0920 746D7000 		.ascii	"tmp\000"
 3400 0924 01       		.byte	0x1
 3401 0925 4209     		.2byte	0x942
 3402 0927 77000000 		.4byte	0x77
 3403 092b 02       		.uleb128 0x2
 3404 092c 91       		.byte	0x91
 3405 092d 6E       		.sleb128 -18
 3406 092e 00       		.byte	0
 3407 092f 16       		.uleb128 0x16
 3408 0930 1B000000 		.4byte	.LASF96
 3409 0934 01       		.byte	0x1
 3410 0935 B809     		.2byte	0x9b8
 3411 0937 77000000 		.4byte	0x77
 3412 093b 00000000 		.4byte	.LFB62
 3413 093f 3C000000 		.4byte	.LFE62-.LFB62
 3414 0943 01       		.uleb128 0x1
 3415 0944 9C       		.byte	0x9c
 3416 0945 75090000 		.4byte	0x975
 3417 0949 19       		.uleb128 0x19
 3418 094a 783100   		.ascii	"x1\000"
 3419 094d 01       		.byte	0x1
 3420 094e B809     		.2byte	0x9b8
 3421 0950 77000000 		.4byte	0x77
 3422 0954 02       		.uleb128 0x2
 3423 0955 91       		.byte	0x91
 3424 0956 6E       		.sleb128 -18
 3425 0957 19       		.uleb128 0x19
 3426 0958 783200   		.ascii	"x2\000"
 3427 095b 01       		.byte	0x1
 3428 095c B809     		.2byte	0x9b8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 111


 3429 095e 77000000 		.4byte	0x77
 3430 0962 02       		.uleb128 0x2
 3431 0963 91       		.byte	0x91
 3432 0964 6C       		.sleb128 -20
 3433 0965 13       		.uleb128 0x13
 3434 0966 746D7000 		.ascii	"tmp\000"
 3435 096a 01       		.byte	0x1
 3436 096b BA09     		.2byte	0x9ba
 3437 096d 83000000 		.4byte	0x83
 3438 0971 02       		.uleb128 0x2
 3439 0972 91       		.byte	0x91
 3440 0973 74       		.sleb128 -12
 3441 0974 00       		.byte	0
 3442 0975 16       		.uleb128 0x16
 3443 0976 B1050000 		.4byte	.LASF97
 3444 097a 01       		.byte	0x1
 3445 097b A10A     		.2byte	0xaa1
 3446 097d 83000000 		.4byte	0x83
 3447 0981 00000000 		.4byte	.LFB63
 3448 0985 1C000000 		.4byte	.LFE63-.LFB63
 3449 0989 01       		.uleb128 0x1
 3450 098a 9C       		.byte	0x9c
 3451 098b 9F090000 		.4byte	0x99f
 3452 098f 15       		.uleb128 0x15
 3453 0990 1B050000 		.4byte	.LASF50
 3454 0994 01       		.byte	0x1
 3455 0995 A10A     		.2byte	0xaa1
 3456 0997 83000000 		.4byte	0x83
 3457 099b 02       		.uleb128 0x2
 3458 099c 91       		.byte	0x91
 3459 099d 74       		.sleb128 -12
 3460 099e 00       		.byte	0
 3461 099f 16       		.uleb128 0x16
 3462 09a0 55060000 		.4byte	.LASF98
 3463 09a4 01       		.byte	0x1
 3464 09a5 BB0A     		.2byte	0xabb
 3465 09a7 6B000000 		.4byte	0x6b
 3466 09ab 00000000 		.4byte	.LFB64
 3467 09af 1C000000 		.4byte	.LFE64-.LFB64
 3468 09b3 01       		.uleb128 0x1
 3469 09b4 9C       		.byte	0x9c
 3470 09b5 C9090000 		.4byte	0x9c9
 3471 09b9 15       		.uleb128 0x15
 3472 09ba 1B050000 		.4byte	.LASF50
 3473 09be 01       		.byte	0x1
 3474 09bf BB0A     		.2byte	0xabb
 3475 09c1 83000000 		.4byte	0x83
 3476 09c5 02       		.uleb128 0x2
 3477 09c6 91       		.byte	0x91
 3478 09c7 74       		.sleb128 -12
 3479 09c8 00       		.byte	0
 3480 09c9 16       		.uleb128 0x16
 3481 09ca E8090000 		.4byte	.LASF99
 3482 09ce 01       		.byte	0x1
 3483 09cf D50A     		.2byte	0xad5
 3484 09d1 6B000000 		.4byte	0x6b
 3485 09d5 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 112


 3486 09d9 1C000000 		.4byte	.LFE65-.LFB65
 3487 09dd 01       		.uleb128 0x1
 3488 09de 9C       		.byte	0x9c
 3489 09df F3090000 		.4byte	0x9f3
 3490 09e3 15       		.uleb128 0x15
 3491 09e4 8C030000 		.4byte	.LASF52
 3492 09e8 01       		.byte	0x1
 3493 09e9 D50A     		.2byte	0xad5
 3494 09eb 83000000 		.4byte	0x83
 3495 09ef 02       		.uleb128 0x2
 3496 09f0 91       		.byte	0x91
 3497 09f1 74       		.sleb128 -12
 3498 09f2 00       		.byte	0
 3499 09f3 1A       		.uleb128 0x1a
 3500 09f4 63070000 		.4byte	.LASF100
 3501 09f8 01       		.byte	0x1
 3502 09f9 EF0A     		.2byte	0xaef
 3503 09fb 00000000 		.4byte	.LFB66
 3504 09ff 14000000 		.4byte	.LFE66-.LFB66
 3505 0a03 01       		.uleb128 0x1
 3506 0a04 9C       		.byte	0x9c
 3507 0a05 1A       		.uleb128 0x1a
 3508 0a06 FC030000 		.4byte	.LASF101
 3509 0a0a 01       		.byte	0x1
 3510 0a0b 080B     		.2byte	0xb08
 3511 0a0d 00000000 		.4byte	.LFB67
 3512 0a11 14000000 		.4byte	.LFE67-.LFB67
 3513 0a15 01       		.uleb128 0x1
 3514 0a16 9C       		.byte	0x9c
 3515 0a17 1B       		.uleb128 0x1b
 3516 0a18 6B000000 		.4byte	0x6b
 3517 0a1c 270A0000 		.4byte	0xa27
 3518 0a20 1C       		.uleb128 0x1c
 3519 0a21 A4000000 		.4byte	0xa4
 3520 0a25 01       		.byte	0x1
 3521 0a26 00       		.byte	0
 3522 0a27 0F       		.uleb128 0xf
 3523 0a28 2F000000 		.4byte	.LASF102
 3524 0a2c 01       		.byte	0x1
 3525 0a2d 55       		.byte	0x55
 3526 0a2e 170A0000 		.4byte	0xa17
 3527 0a32 05       		.uleb128 0x5
 3528 0a33 03       		.byte	0x3
 3529 0a34 10000000 		.4byte	CapSense_debounceCounter
 3530 0a38 1B       		.uleb128 0x1b
 3531 0a39 77000000 		.4byte	0x77
 3532 0a3d 480A0000 		.4byte	0xa48
 3533 0a41 1C       		.uleb128 0x1c
 3534 0a42 A4000000 		.4byte	0xa4
 3535 0a46 00       		.byte	0
 3536 0a47 00       		.byte	0
 3537 0a48 1D       		.uleb128 0x1d
 3538 0a49 42060000 		.4byte	.LASF103
 3539 0a4d 01       		.byte	0x1
 3540 0a4e 2C       		.byte	0x2c
 3541 0a4f 380A0000 		.4byte	0xa38
 3542 0a53 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 113


 3543 0a54 6B000000 		.4byte	0x6b
 3544 0a58 630A0000 		.4byte	0xa63
 3545 0a5c 1C       		.uleb128 0x1c
 3546 0a5d A4000000 		.4byte	0xa4
 3547 0a61 00       		.byte	0
 3548 0a62 00       		.byte	0
 3549 0a63 1D       		.uleb128 0x1d
 3550 0a64 72030000 		.4byte	.LASF104
 3551 0a68 01       		.byte	0x1
 3552 0a69 2D       		.byte	0x2d
 3553 0a6a 530A0000 		.4byte	0xa53
 3554 0a6e 1B       		.uleb128 0x1b
 3555 0a6f DB010000 		.4byte	0x1db
 3556 0a73 7E0A0000 		.4byte	0xa7e
 3557 0a77 1C       		.uleb128 0x1c
 3558 0a78 A4000000 		.4byte	0xa4
 3559 0a7c 00       		.byte	0
 3560 0a7d 00       		.byte	0
 3561 0a7e 1D       		.uleb128 0x1d
 3562 0a7f CA030000 		.4byte	.LASF105
 3563 0a83 01       		.byte	0x1
 3564 0a84 2E       		.byte	0x2e
 3565 0a85 890A0000 		.4byte	0xa89
 3566 0a89 08       		.uleb128 0x8
 3567 0a8a 6E0A0000 		.4byte	0xa6e
 3568 0a8e 1E       		.uleb128 0x1e
 3569 0a8f 09070000 		.4byte	.LASF106
 3570 0a93 01       		.byte	0x1
 3571 0a94 34       		.byte	0x34
 3572 0a95 380A0000 		.4byte	0xa38
 3573 0a99 05       		.uleb128 0x5
 3574 0a9a 03       		.byte	0x3
 3575 0a9b 00000000 		.4byte	CapSense_sensorBaseline
 3576 0a9f 1E       		.uleb128 0x1e
 3577 0aa0 00000000 		.4byte	.LASF107
 3578 0aa4 01       		.byte	0x1
 3579 0aa5 35       		.byte	0x35
 3580 0aa6 530A0000 		.4byte	0xa53
 3581 0aaa 05       		.uleb128 0x5
 3582 0aab 03       		.byte	0x3
 3583 0aac 00000000 		.4byte	CapSense_sensorBaselineLow
 3584 0ab0 1E       		.uleb128 0x1e
 3585 0ab1 9D020000 		.4byte	.LASF108
 3586 0ab5 01       		.byte	0x1
 3587 0ab6 36       		.byte	0x36
 3588 0ab7 530A0000 		.4byte	0xa53
 3589 0abb 05       		.uleb128 0x5
 3590 0abc 03       		.byte	0x3
 3591 0abd 00000000 		.4byte	CapSense_sensorSignal
 3592 0ac1 1E       		.uleb128 0x1e
 3593 0ac2 3F0A0000 		.4byte	.LASF109
 3594 0ac6 01       		.byte	0x1
 3595 0ac7 37       		.byte	0x37
 3596 0ac8 530A0000 		.4byte	0xa53
 3597 0acc 05       		.uleb128 0x5
 3598 0acd 03       		.byte	0x3
 3599 0ace 00000000 		.4byte	CapSense_sensorOnMask
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 114


 3600 0ad2 1E       		.uleb128 0x1e
 3601 0ad3 55000000 		.4byte	.LASF110
 3602 0ad7 01       		.byte	0x1
 3603 0ad8 39       		.byte	0x39
 3604 0ad9 530A0000 		.4byte	0xa53
 3605 0add 05       		.uleb128 0x5
 3606 0ade 03       		.byte	0x3
 3607 0adf 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3608 0ae3 1E       		.uleb128 0x1e
 3609 0ae4 81070000 		.4byte	.LASF111
 3610 0ae8 01       		.byte	0x1
 3611 0ae9 3A       		.byte	0x3a
 3612 0aea 530A0000 		.4byte	0xa53
 3613 0aee 05       		.uleb128 0x5
 3614 0aef 03       		.byte	0x3
 3615 0af0 00000000 		.4byte	CapSense_lowBaselineReset
 3616 0af4 1E       		.uleb128 0x1e
 3617 0af5 93030000 		.4byte	.LASF112
 3618 0af9 01       		.byte	0x1
 3619 0afa 49       		.byte	0x49
 3620 0afb 530A0000 		.4byte	0xa53
 3621 0aff 05       		.uleb128 0x5
 3622 0b00 03       		.byte	0x3
 3623 0b01 00000000 		.4byte	CapSense_fingerThreshold
 3624 0b05 1E       		.uleb128 0x1e
 3625 0b06 30080000 		.4byte	.LASF113
 3626 0b0a 01       		.byte	0x1
 3627 0b0b 4B       		.byte	0x4b
 3628 0b0c 530A0000 		.4byte	0xa53
 3629 0b10 05       		.uleb128 0x5
 3630 0b11 03       		.byte	0x3
 3631 0b12 00000000 		.4byte	CapSense_noiseThreshold
 3632 0b16 1E       		.uleb128 0x1e
 3633 0b17 E9040000 		.4byte	.LASF114
 3634 0b1b 01       		.byte	0x1
 3635 0b1c 4D       		.byte	0x4d
 3636 0b1d 530A0000 		.4byte	0xa53
 3637 0b21 05       		.uleb128 0x5
 3638 0b22 03       		.byte	0x3
 3639 0b23 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3640 0b27 1E       		.uleb128 0x1e
 3641 0b28 02030000 		.4byte	.LASF115
 3642 0b2c 01       		.byte	0x1
 3643 0b2d 4F       		.byte	0x4f
 3644 0b2e 530A0000 		.4byte	0xa53
 3645 0b32 05       		.uleb128 0x5
 3646 0b33 03       		.byte	0x3
 3647 0b34 00000000 		.4byte	CapSense_hysteresis
 3648 0b38 1E       		.uleb128 0x1e
 3649 0b39 40070000 		.4byte	.LASF116
 3650 0b3d 01       		.byte	0x1
 3651 0b3e 51       		.byte	0x51
 3652 0b3f 530A0000 		.4byte	0xa53
 3653 0b43 05       		.uleb128 0x5
 3654 0b44 03       		.byte	0x3
 3655 0b45 00000000 		.4byte	CapSense_debounce
 3656 0b49 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 115


 3657 0b4a B3020000 		.4byte	.LASF117
 3658 0b4e 01       		.byte	0x1
 3659 0b4f 59       		.byte	0x59
 3660 0b50 5A0B0000 		.4byte	0xb5a
 3661 0b54 05       		.uleb128 0x5
 3662 0b55 03       		.byte	0x3
 3663 0b56 00000000 		.4byte	CapSense_rawDataIndex
 3664 0b5a 08       		.uleb128 0x8
 3665 0b5b 6E0A0000 		.4byte	0xa6e
 3666 0b5f 1E       		.uleb128 0x1e
 3667 0b60 D0040000 		.4byte	.LASF118
 3668 0b64 01       		.byte	0x1
 3669 0b65 5D       		.byte	0x5d
 3670 0b66 700B0000 		.4byte	0xb70
 3671 0b6a 05       		.uleb128 0x5
 3672 0b6b 03       		.byte	0x3
 3673 0b6c 00000000 		.4byte	CapSense_numberOfSensors
 3674 0b70 08       		.uleb128 0x8
 3675 0b71 6E0A0000 		.4byte	0xa6e
 3676 0b75 1E       		.uleb128 0x1e
 3677 0b76 270A0000 		.4byte	.LASF119
 3678 0b7a 01       		.byte	0x1
 3679 0b7b 27       		.byte	0x27
 3680 0b7c 380A0000 		.4byte	0xa38
 3681 0b80 05       		.uleb128 0x5
 3682 0b81 03       		.byte	0x3
 3683 0b82 00000000 		.4byte	CapSense_rawFilterData1
 3684 0b86 1D       		.uleb128 0x1d
 3685 0b87 EB000000 		.4byte	.LASF120
 3686 0b8b 01       		.byte	0x1
 3687 0b8c 41       		.byte	0x41
 3688 0b8d AE020000 		.4byte	0x2ae
 3689 0b91 1E       		.uleb128 0x1e
 3690 0b92 78090000 		.4byte	.LASF121
 3691 0b96 01       		.byte	0x1
 3692 0b97 45       		.byte	0x45
 3693 0b98 6B000000 		.4byte	0x6b
 3694 0b9c 05       		.uleb128 0x5
 3695 0b9d 03       		.byte	0x3
 3696 0b9e 00000000 		.4byte	CapSense_enableRawFilters
 3697 0ba2 00       		.byte	0
 3698              		.section	.debug_abbrev,"",%progbits
 3699              	.Ldebug_abbrev0:
 3700 0000 01       		.uleb128 0x1
 3701 0001 11       		.uleb128 0x11
 3702 0002 01       		.byte	0x1
 3703 0003 25       		.uleb128 0x25
 3704 0004 0E       		.uleb128 0xe
 3705 0005 13       		.uleb128 0x13
 3706 0006 0B       		.uleb128 0xb
 3707 0007 03       		.uleb128 0x3
 3708 0008 0E       		.uleb128 0xe
 3709 0009 1B       		.uleb128 0x1b
 3710 000a 0E       		.uleb128 0xe
 3711 000b 55       		.uleb128 0x55
 3712 000c 17       		.uleb128 0x17
 3713 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 116


 3714 000e 01       		.uleb128 0x1
 3715 000f 10       		.uleb128 0x10
 3716 0010 17       		.uleb128 0x17
 3717 0011 00       		.byte	0
 3718 0012 00       		.byte	0
 3719 0013 02       		.uleb128 0x2
 3720 0014 24       		.uleb128 0x24
 3721 0015 00       		.byte	0
 3722 0016 0B       		.uleb128 0xb
 3723 0017 0B       		.uleb128 0xb
 3724 0018 3E       		.uleb128 0x3e
 3725 0019 0B       		.uleb128 0xb
 3726 001a 03       		.uleb128 0x3
 3727 001b 0E       		.uleb128 0xe
 3728 001c 00       		.byte	0
 3729 001d 00       		.byte	0
 3730 001e 03       		.uleb128 0x3
 3731 001f 24       		.uleb128 0x24
 3732 0020 00       		.byte	0
 3733 0021 0B       		.uleb128 0xb
 3734 0022 0B       		.uleb128 0xb
 3735 0023 3E       		.uleb128 0x3e
 3736 0024 0B       		.uleb128 0xb
 3737 0025 03       		.uleb128 0x3
 3738 0026 08       		.uleb128 0x8
 3739 0027 00       		.byte	0
 3740 0028 00       		.byte	0
 3741 0029 04       		.uleb128 0x4
 3742 002a 16       		.uleb128 0x16
 3743 002b 00       		.byte	0
 3744 002c 03       		.uleb128 0x3
 3745 002d 0E       		.uleb128 0xe
 3746 002e 3A       		.uleb128 0x3a
 3747 002f 0B       		.uleb128 0xb
 3748 0030 3B       		.uleb128 0x3b
 3749 0031 05       		.uleb128 0x5
 3750 0032 49       		.uleb128 0x49
 3751 0033 13       		.uleb128 0x13
 3752 0034 00       		.byte	0
 3753 0035 00       		.byte	0
 3754 0036 05       		.uleb128 0x5
 3755 0037 13       		.uleb128 0x13
 3756 0038 01       		.byte	0x1
 3757 0039 0B       		.uleb128 0xb
 3758 003a 0B       		.uleb128 0xb
 3759 003b 3A       		.uleb128 0x3a
 3760 003c 0B       		.uleb128 0xb
 3761 003d 3B       		.uleb128 0x3b
 3762 003e 0B       		.uleb128 0xb
 3763 003f 01       		.uleb128 0x1
 3764 0040 13       		.uleb128 0x13
 3765 0041 00       		.byte	0
 3766 0042 00       		.byte	0
 3767 0043 06       		.uleb128 0x6
 3768 0044 0D       		.uleb128 0xd
 3769 0045 00       		.byte	0
 3770 0046 03       		.uleb128 0x3
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 117


 3771 0047 0E       		.uleb128 0xe
 3772 0048 3A       		.uleb128 0x3a
 3773 0049 0B       		.uleb128 0xb
 3774 004a 3B       		.uleb128 0x3b
 3775 004b 0B       		.uleb128 0xb
 3776 004c 49       		.uleb128 0x49
 3777 004d 13       		.uleb128 0x13
 3778 004e 38       		.uleb128 0x38
 3779 004f 0B       		.uleb128 0xb
 3780 0050 00       		.byte	0
 3781 0051 00       		.byte	0
 3782 0052 07       		.uleb128 0x7
 3783 0053 0F       		.uleb128 0xf
 3784 0054 00       		.byte	0
 3785 0055 0B       		.uleb128 0xb
 3786 0056 0B       		.uleb128 0xb
 3787 0057 49       		.uleb128 0x49
 3788 0058 13       		.uleb128 0x13
 3789 0059 00       		.byte	0
 3790 005a 00       		.byte	0
 3791 005b 08       		.uleb128 0x8
 3792 005c 26       		.uleb128 0x26
 3793 005d 00       		.byte	0
 3794 005e 49       		.uleb128 0x49
 3795 005f 13       		.uleb128 0x13
 3796 0060 00       		.byte	0
 3797 0061 00       		.byte	0
 3798 0062 09       		.uleb128 0x9
 3799 0063 15       		.uleb128 0x15
 3800 0064 01       		.byte	0x1
 3801 0065 27       		.uleb128 0x27
 3802 0066 19       		.uleb128 0x19
 3803 0067 49       		.uleb128 0x49
 3804 0068 13       		.uleb128 0x13
 3805 0069 01       		.uleb128 0x1
 3806 006a 13       		.uleb128 0x13
 3807 006b 00       		.byte	0
 3808 006c 00       		.byte	0
 3809 006d 0A       		.uleb128 0xa
 3810 006e 05       		.uleb128 0x5
 3811 006f 00       		.byte	0
 3812 0070 49       		.uleb128 0x49
 3813 0071 13       		.uleb128 0x13
 3814 0072 00       		.byte	0
 3815 0073 00       		.byte	0
 3816 0074 0B       		.uleb128 0xb
 3817 0075 15       		.uleb128 0x15
 3818 0076 01       		.byte	0x1
 3819 0077 27       		.uleb128 0x27
 3820 0078 19       		.uleb128 0x19
 3821 0079 01       		.uleb128 0x1
 3822 007a 13       		.uleb128 0x13
 3823 007b 00       		.byte	0
 3824 007c 00       		.byte	0
 3825 007d 0C       		.uleb128 0xc
 3826 007e 16       		.uleb128 0x16
 3827 007f 00       		.byte	0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 118


 3828 0080 03       		.uleb128 0x3
 3829 0081 0E       		.uleb128 0xe
 3830 0082 3A       		.uleb128 0x3a
 3831 0083 0B       		.uleb128 0xb
 3832 0084 3B       		.uleb128 0x3b
 3833 0085 0B       		.uleb128 0xb
 3834 0086 49       		.uleb128 0x49
 3835 0087 13       		.uleb128 0x13
 3836 0088 00       		.byte	0
 3837 0089 00       		.byte	0
 3838 008a 0D       		.uleb128 0xd
 3839 008b 2E       		.uleb128 0x2e
 3840 008c 01       		.byte	0x1
 3841 008d 3F       		.uleb128 0x3f
 3842 008e 19       		.uleb128 0x19
 3843 008f 03       		.uleb128 0x3
 3844 0090 0E       		.uleb128 0xe
 3845 0091 3A       		.uleb128 0x3a
 3846 0092 0B       		.uleb128 0xb
 3847 0093 3B       		.uleb128 0x3b
 3848 0094 0B       		.uleb128 0xb
 3849 0095 27       		.uleb128 0x27
 3850 0096 19       		.uleb128 0x19
 3851 0097 11       		.uleb128 0x11
 3852 0098 01       		.uleb128 0x1
 3853 0099 12       		.uleb128 0x12
 3854 009a 06       		.uleb128 0x6
 3855 009b 40       		.uleb128 0x40
 3856 009c 18       		.uleb128 0x18
 3857 009d 9742     		.uleb128 0x2117
 3858 009f 19       		.uleb128 0x19
 3859 00a0 01       		.uleb128 0x1
 3860 00a1 13       		.uleb128 0x13
 3861 00a2 00       		.byte	0
 3862 00a3 00       		.byte	0
 3863 00a4 0E       		.uleb128 0xe
 3864 00a5 05       		.uleb128 0x5
 3865 00a6 00       		.byte	0
 3866 00a7 03       		.uleb128 0x3
 3867 00a8 0E       		.uleb128 0xe
 3868 00a9 3A       		.uleb128 0x3a
 3869 00aa 0B       		.uleb128 0xb
 3870 00ab 3B       		.uleb128 0x3b
 3871 00ac 0B       		.uleb128 0xb
 3872 00ad 49       		.uleb128 0x49
 3873 00ae 13       		.uleb128 0x13
 3874 00af 02       		.uleb128 0x2
 3875 00b0 18       		.uleb128 0x18
 3876 00b1 00       		.byte	0
 3877 00b2 00       		.byte	0
 3878 00b3 0F       		.uleb128 0xf
 3879 00b4 34       		.uleb128 0x34
 3880 00b5 00       		.byte	0
 3881 00b6 03       		.uleb128 0x3
 3882 00b7 0E       		.uleb128 0xe
 3883 00b8 3A       		.uleb128 0x3a
 3884 00b9 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 119


 3885 00ba 3B       		.uleb128 0x3b
 3886 00bb 0B       		.uleb128 0xb
 3887 00bc 49       		.uleb128 0x49
 3888 00bd 13       		.uleb128 0x13
 3889 00be 02       		.uleb128 0x2
 3890 00bf 18       		.uleb128 0x18
 3891 00c0 00       		.byte	0
 3892 00c1 00       		.byte	0
 3893 00c2 10       		.uleb128 0x10
 3894 00c3 2E       		.uleb128 0x2e
 3895 00c4 01       		.byte	0x1
 3896 00c5 3F       		.uleb128 0x3f
 3897 00c6 19       		.uleb128 0x19
 3898 00c7 03       		.uleb128 0x3
 3899 00c8 0E       		.uleb128 0xe
 3900 00c9 3A       		.uleb128 0x3a
 3901 00ca 0B       		.uleb128 0xb
 3902 00cb 3B       		.uleb128 0x3b
 3903 00cc 0B       		.uleb128 0xb
 3904 00cd 27       		.uleb128 0x27
 3905 00ce 19       		.uleb128 0x19
 3906 00cf 11       		.uleb128 0x11
 3907 00d0 01       		.uleb128 0x1
 3908 00d1 12       		.uleb128 0x12
 3909 00d2 06       		.uleb128 0x6
 3910 00d3 40       		.uleb128 0x40
 3911 00d4 18       		.uleb128 0x18
 3912 00d5 9642     		.uleb128 0x2116
 3913 00d7 19       		.uleb128 0x19
 3914 00d8 01       		.uleb128 0x1
 3915 00d9 13       		.uleb128 0x13
 3916 00da 00       		.byte	0
 3917 00db 00       		.byte	0
 3918 00dc 11       		.uleb128 0x11
 3919 00dd 34       		.uleb128 0x34
 3920 00de 00       		.byte	0
 3921 00df 03       		.uleb128 0x3
 3922 00e0 08       		.uleb128 0x8
 3923 00e1 3A       		.uleb128 0x3a
 3924 00e2 0B       		.uleb128 0xb
 3925 00e3 3B       		.uleb128 0x3b
 3926 00e4 0B       		.uleb128 0xb
 3927 00e5 49       		.uleb128 0x49
 3928 00e6 13       		.uleb128 0x13
 3929 00e7 02       		.uleb128 0x2
 3930 00e8 18       		.uleb128 0x18
 3931 00e9 00       		.byte	0
 3932 00ea 00       		.byte	0
 3933 00eb 12       		.uleb128 0x12
 3934 00ec 2E       		.uleb128 0x2e
 3935 00ed 01       		.byte	0x1
 3936 00ee 3F       		.uleb128 0x3f
 3937 00ef 19       		.uleb128 0x19
 3938 00f0 03       		.uleb128 0x3
 3939 00f1 0E       		.uleb128 0xe
 3940 00f2 3A       		.uleb128 0x3a
 3941 00f3 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 120


 3942 00f4 3B       		.uleb128 0x3b
 3943 00f5 05       		.uleb128 0x5
 3944 00f6 27       		.uleb128 0x27
 3945 00f7 19       		.uleb128 0x19
 3946 00f8 11       		.uleb128 0x11
 3947 00f9 01       		.uleb128 0x1
 3948 00fa 12       		.uleb128 0x12
 3949 00fb 06       		.uleb128 0x6
 3950 00fc 40       		.uleb128 0x40
 3951 00fd 18       		.uleb128 0x18
 3952 00fe 9642     		.uleb128 0x2116
 3953 0100 19       		.uleb128 0x19
 3954 0101 01       		.uleb128 0x1
 3955 0102 13       		.uleb128 0x13
 3956 0103 00       		.byte	0
 3957 0104 00       		.byte	0
 3958 0105 13       		.uleb128 0x13
 3959 0106 34       		.uleb128 0x34
 3960 0107 00       		.byte	0
 3961 0108 03       		.uleb128 0x3
 3962 0109 08       		.uleb128 0x8
 3963 010a 3A       		.uleb128 0x3a
 3964 010b 0B       		.uleb128 0xb
 3965 010c 3B       		.uleb128 0x3b
 3966 010d 05       		.uleb128 0x5
 3967 010e 49       		.uleb128 0x49
 3968 010f 13       		.uleb128 0x13
 3969 0110 02       		.uleb128 0x2
 3970 0111 18       		.uleb128 0x18
 3971 0112 00       		.byte	0
 3972 0113 00       		.byte	0
 3973 0114 14       		.uleb128 0x14
 3974 0115 34       		.uleb128 0x34
 3975 0116 00       		.byte	0
 3976 0117 03       		.uleb128 0x3
 3977 0118 0E       		.uleb128 0xe
 3978 0119 3A       		.uleb128 0x3a
 3979 011a 0B       		.uleb128 0xb
 3980 011b 3B       		.uleb128 0x3b
 3981 011c 05       		.uleb128 0x5
 3982 011d 49       		.uleb128 0x49
 3983 011e 13       		.uleb128 0x13
 3984 011f 02       		.uleb128 0x2
 3985 0120 18       		.uleb128 0x18
 3986 0121 00       		.byte	0
 3987 0122 00       		.byte	0
 3988 0123 15       		.uleb128 0x15
 3989 0124 05       		.uleb128 0x5
 3990 0125 00       		.byte	0
 3991 0126 03       		.uleb128 0x3
 3992 0127 0E       		.uleb128 0xe
 3993 0128 3A       		.uleb128 0x3a
 3994 0129 0B       		.uleb128 0xb
 3995 012a 3B       		.uleb128 0x3b
 3996 012b 05       		.uleb128 0x5
 3997 012c 49       		.uleb128 0x49
 3998 012d 13       		.uleb128 0x13
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 121


 3999 012e 02       		.uleb128 0x2
 4000 012f 18       		.uleb128 0x18
 4001 0130 00       		.byte	0
 4002 0131 00       		.byte	0
 4003 0132 16       		.uleb128 0x16
 4004 0133 2E       		.uleb128 0x2e
 4005 0134 01       		.byte	0x1
 4006 0135 3F       		.uleb128 0x3f
 4007 0136 19       		.uleb128 0x19
 4008 0137 03       		.uleb128 0x3
 4009 0138 0E       		.uleb128 0xe
 4010 0139 3A       		.uleb128 0x3a
 4011 013a 0B       		.uleb128 0xb
 4012 013b 3B       		.uleb128 0x3b
 4013 013c 05       		.uleb128 0x5
 4014 013d 27       		.uleb128 0x27
 4015 013e 19       		.uleb128 0x19
 4016 013f 49       		.uleb128 0x49
 4017 0140 13       		.uleb128 0x13
 4018 0141 11       		.uleb128 0x11
 4019 0142 01       		.uleb128 0x1
 4020 0143 12       		.uleb128 0x12
 4021 0144 06       		.uleb128 0x6
 4022 0145 40       		.uleb128 0x40
 4023 0146 18       		.uleb128 0x18
 4024 0147 9742     		.uleb128 0x2117
 4025 0149 19       		.uleb128 0x19
 4026 014a 01       		.uleb128 0x1
 4027 014b 13       		.uleb128 0x13
 4028 014c 00       		.byte	0
 4029 014d 00       		.byte	0
 4030 014e 17       		.uleb128 0x17
 4031 014f 2E       		.uleb128 0x2e
 4032 0150 01       		.byte	0x1
 4033 0151 3F       		.uleb128 0x3f
 4034 0152 19       		.uleb128 0x19
 4035 0153 03       		.uleb128 0x3
 4036 0154 0E       		.uleb128 0xe
 4037 0155 3A       		.uleb128 0x3a
 4038 0156 0B       		.uleb128 0xb
 4039 0157 3B       		.uleb128 0x3b
 4040 0158 05       		.uleb128 0x5
 4041 0159 27       		.uleb128 0x27
 4042 015a 19       		.uleb128 0x19
 4043 015b 11       		.uleb128 0x11
 4044 015c 01       		.uleb128 0x1
 4045 015d 12       		.uleb128 0x12
 4046 015e 06       		.uleb128 0x6
 4047 015f 40       		.uleb128 0x40
 4048 0160 18       		.uleb128 0x18
 4049 0161 9742     		.uleb128 0x2117
 4050 0163 19       		.uleb128 0x19
 4051 0164 01       		.uleb128 0x1
 4052 0165 13       		.uleb128 0x13
 4053 0166 00       		.byte	0
 4054 0167 00       		.byte	0
 4055 0168 18       		.uleb128 0x18
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 122


 4056 0169 2E       		.uleb128 0x2e
 4057 016a 01       		.byte	0x1
 4058 016b 3F       		.uleb128 0x3f
 4059 016c 19       		.uleb128 0x19
 4060 016d 03       		.uleb128 0x3
 4061 016e 0E       		.uleb128 0xe
 4062 016f 3A       		.uleb128 0x3a
 4063 0170 0B       		.uleb128 0xb
 4064 0171 3B       		.uleb128 0x3b
 4065 0172 05       		.uleb128 0x5
 4066 0173 27       		.uleb128 0x27
 4067 0174 19       		.uleb128 0x19
 4068 0175 49       		.uleb128 0x49
 4069 0176 13       		.uleb128 0x13
 4070 0177 11       		.uleb128 0x11
 4071 0178 01       		.uleb128 0x1
 4072 0179 12       		.uleb128 0x12
 4073 017a 06       		.uleb128 0x6
 4074 017b 40       		.uleb128 0x40
 4075 017c 18       		.uleb128 0x18
 4076 017d 9642     		.uleb128 0x2116
 4077 017f 19       		.uleb128 0x19
 4078 0180 01       		.uleb128 0x1
 4079 0181 13       		.uleb128 0x13
 4080 0182 00       		.byte	0
 4081 0183 00       		.byte	0
 4082 0184 19       		.uleb128 0x19
 4083 0185 05       		.uleb128 0x5
 4084 0186 00       		.byte	0
 4085 0187 03       		.uleb128 0x3
 4086 0188 08       		.uleb128 0x8
 4087 0189 3A       		.uleb128 0x3a
 4088 018a 0B       		.uleb128 0xb
 4089 018b 3B       		.uleb128 0x3b
 4090 018c 05       		.uleb128 0x5
 4091 018d 49       		.uleb128 0x49
 4092 018e 13       		.uleb128 0x13
 4093 018f 02       		.uleb128 0x2
 4094 0190 18       		.uleb128 0x18
 4095 0191 00       		.byte	0
 4096 0192 00       		.byte	0
 4097 0193 1A       		.uleb128 0x1a
 4098 0194 2E       		.uleb128 0x2e
 4099 0195 00       		.byte	0
 4100 0196 3F       		.uleb128 0x3f
 4101 0197 19       		.uleb128 0x19
 4102 0198 03       		.uleb128 0x3
 4103 0199 0E       		.uleb128 0xe
 4104 019a 3A       		.uleb128 0x3a
 4105 019b 0B       		.uleb128 0xb
 4106 019c 3B       		.uleb128 0x3b
 4107 019d 05       		.uleb128 0x5
 4108 019e 27       		.uleb128 0x27
 4109 019f 19       		.uleb128 0x19
 4110 01a0 11       		.uleb128 0x11
 4111 01a1 01       		.uleb128 0x1
 4112 01a2 12       		.uleb128 0x12
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 123


 4113 01a3 06       		.uleb128 0x6
 4114 01a4 40       		.uleb128 0x40
 4115 01a5 18       		.uleb128 0x18
 4116 01a6 9742     		.uleb128 0x2117
 4117 01a8 19       		.uleb128 0x19
 4118 01a9 00       		.byte	0
 4119 01aa 00       		.byte	0
 4120 01ab 1B       		.uleb128 0x1b
 4121 01ac 01       		.uleb128 0x1
 4122 01ad 01       		.byte	0x1
 4123 01ae 49       		.uleb128 0x49
 4124 01af 13       		.uleb128 0x13
 4125 01b0 01       		.uleb128 0x1
 4126 01b1 13       		.uleb128 0x13
 4127 01b2 00       		.byte	0
 4128 01b3 00       		.byte	0
 4129 01b4 1C       		.uleb128 0x1c
 4130 01b5 21       		.uleb128 0x21
 4131 01b6 00       		.byte	0
 4132 01b7 49       		.uleb128 0x49
 4133 01b8 13       		.uleb128 0x13
 4134 01b9 2F       		.uleb128 0x2f
 4135 01ba 0B       		.uleb128 0xb
 4136 01bb 00       		.byte	0
 4137 01bc 00       		.byte	0
 4138 01bd 1D       		.uleb128 0x1d
 4139 01be 34       		.uleb128 0x34
 4140 01bf 00       		.byte	0
 4141 01c0 03       		.uleb128 0x3
 4142 01c1 0E       		.uleb128 0xe
 4143 01c2 3A       		.uleb128 0x3a
 4144 01c3 0B       		.uleb128 0xb
 4145 01c4 3B       		.uleb128 0x3b
 4146 01c5 0B       		.uleb128 0xb
 4147 01c6 49       		.uleb128 0x49
 4148 01c7 13       		.uleb128 0x13
 4149 01c8 3F       		.uleb128 0x3f
 4150 01c9 19       		.uleb128 0x19
 4151 01ca 3C       		.uleb128 0x3c
 4152 01cb 19       		.uleb128 0x19
 4153 01cc 00       		.byte	0
 4154 01cd 00       		.byte	0
 4155 01ce 1E       		.uleb128 0x1e
 4156 01cf 34       		.uleb128 0x34
 4157 01d0 00       		.byte	0
 4158 01d1 03       		.uleb128 0x3
 4159 01d2 0E       		.uleb128 0xe
 4160 01d3 3A       		.uleb128 0x3a
 4161 01d4 0B       		.uleb128 0xb
 4162 01d5 3B       		.uleb128 0x3b
 4163 01d6 0B       		.uleb128 0xb
 4164 01d7 49       		.uleb128 0x49
 4165 01d8 13       		.uleb128 0x13
 4166 01d9 3F       		.uleb128 0x3f
 4167 01da 19       		.uleb128 0x19
 4168 01db 02       		.uleb128 0x2
 4169 01dc 18       		.uleb128 0x18
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 124


 4170 01dd 00       		.byte	0
 4171 01de 00       		.byte	0
 4172 01df 00       		.byte	0
 4173              		.section	.debug_aranges,"",%progbits
 4174 0000 24010000 		.4byte	0x124
 4175 0004 0200     		.2byte	0x2
 4176 0006 00000000 		.4byte	.Ldebug_info0
 4177 000a 04       		.byte	0x4
 4178 000b 00       		.byte	0
 4179 000c 0000     		.2byte	0
 4180 000e 0000     		.2byte	0
 4181 0010 00000000 		.4byte	.LFB34
 4182 0014 88000000 		.4byte	.LFE34-.LFB34
 4183 0018 00000000 		.4byte	.LFB35
 4184 001c 2A000000 		.4byte	.LFE35-.LFB35
 4185 0020 00000000 		.4byte	.LFB36
 4186 0024 28000000 		.4byte	.LFE36-.LFB36
 4187 0028 00000000 		.4byte	.LFB37
 4188 002c 50000000 		.4byte	.LFE37-.LFB37
 4189 0030 00000000 		.4byte	.LFB38
 4190 0034 34020000 		.4byte	.LFE38-.LFB38
 4191 0038 00000000 		.4byte	.LFB39
 4192 003c 20000000 		.4byte	.LFE39-.LFB39
 4193 0040 00000000 		.4byte	.LFB40
 4194 0044 44000000 		.4byte	.LFE40-.LFB40
 4195 0048 00000000 		.4byte	.LFB41
 4196 004c 58000000 		.4byte	.LFE41-.LFB41
 4197 0050 00000000 		.4byte	.LFB42
 4198 0054 1C000000 		.4byte	.LFE42-.LFB42
 4199 0058 00000000 		.4byte	.LFB43
 4200 005c 28000000 		.4byte	.LFE43-.LFB43
 4201 0060 00000000 		.4byte	.LFB44
 4202 0064 1C000000 		.4byte	.LFE44-.LFB44
 4203 0068 00000000 		.4byte	.LFB45
 4204 006c 28000000 		.4byte	.LFE45-.LFB45
 4205 0070 00000000 		.4byte	.LFB46
 4206 0074 1C000000 		.4byte	.LFE46-.LFB46
 4207 0078 00000000 		.4byte	.LFB47
 4208 007c 1C000000 		.4byte	.LFE47-.LFB47
 4209 0080 00000000 		.4byte	.LFB48
 4210 0084 1C000000 		.4byte	.LFE48-.LFB48
 4211 0088 00000000 		.4byte	.LFB49
 4212 008c 1C000000 		.4byte	.LFE49-.LFB49
 4213 0090 00000000 		.4byte	.LFB50
 4214 0094 28000000 		.4byte	.LFE50-.LFB50
 4215 0098 00000000 		.4byte	.LFB51
 4216 009c 28000000 		.4byte	.LFE51-.LFB51
 4217 00a0 00000000 		.4byte	.LFB52
 4218 00a4 28000000 		.4byte	.LFE52-.LFB52
 4219 00a8 00000000 		.4byte	.LFB53
 4220 00ac 28000000 		.4byte	.LFE53-.LFB53
 4221 00b0 00000000 		.4byte	.LFB54
 4222 00b4 28000000 		.4byte	.LFE54-.LFB54
 4223 00b8 00000000 		.4byte	.LFB55
 4224 00bc 28000000 		.4byte	.LFE55-.LFB55
 4225 00c0 00000000 		.4byte	.LFB56
 4226 00c4 30010000 		.4byte	.LFE56-.LFB56
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 125


 4227 00c8 00000000 		.4byte	.LFB57
 4228 00cc 42000000 		.4byte	.LFE57-.LFB57
 4229 00d0 00000000 		.4byte	.LFB58
 4230 00d4 36000000 		.4byte	.LFE58-.LFB58
 4231 00d8 00000000 		.4byte	.LFB59
 4232 00dc 5C000000 		.4byte	.LFE59-.LFB59
 4233 00e0 00000000 		.4byte	.LFB60
 4234 00e4 5C000000 		.4byte	.LFE60-.LFB60
 4235 00e8 00000000 		.4byte	.LFB61
 4236 00ec 76000000 		.4byte	.LFE61-.LFB61
 4237 00f0 00000000 		.4byte	.LFB62
 4238 00f4 3C000000 		.4byte	.LFE62-.LFB62
 4239 00f8 00000000 		.4byte	.LFB63
 4240 00fc 1C000000 		.4byte	.LFE63-.LFB63
 4241 0100 00000000 		.4byte	.LFB64
 4242 0104 1C000000 		.4byte	.LFE64-.LFB64
 4243 0108 00000000 		.4byte	.LFB65
 4244 010c 1C000000 		.4byte	.LFE65-.LFB65
 4245 0110 00000000 		.4byte	.LFB66
 4246 0114 14000000 		.4byte	.LFE66-.LFB66
 4247 0118 00000000 		.4byte	.LFB67
 4248 011c 14000000 		.4byte	.LFE67-.LFB67
 4249 0120 00000000 		.4byte	0
 4250 0124 00000000 		.4byte	0
 4251              		.section	.debug_ranges,"",%progbits
 4252              	.Ldebug_ranges0:
 4253 0000 00000000 		.4byte	.LFB34
 4254 0004 88000000 		.4byte	.LFE34
 4255 0008 00000000 		.4byte	.LFB35
 4256 000c 2A000000 		.4byte	.LFE35
 4257 0010 00000000 		.4byte	.LFB36
 4258 0014 28000000 		.4byte	.LFE36
 4259 0018 00000000 		.4byte	.LFB37
 4260 001c 50000000 		.4byte	.LFE37
 4261 0020 00000000 		.4byte	.LFB38
 4262 0024 34020000 		.4byte	.LFE38
 4263 0028 00000000 		.4byte	.LFB39
 4264 002c 20000000 		.4byte	.LFE39
 4265 0030 00000000 		.4byte	.LFB40
 4266 0034 44000000 		.4byte	.LFE40
 4267 0038 00000000 		.4byte	.LFB41
 4268 003c 58000000 		.4byte	.LFE41
 4269 0040 00000000 		.4byte	.LFB42
 4270 0044 1C000000 		.4byte	.LFE42
 4271 0048 00000000 		.4byte	.LFB43
 4272 004c 28000000 		.4byte	.LFE43
 4273 0050 00000000 		.4byte	.LFB44
 4274 0054 1C000000 		.4byte	.LFE44
 4275 0058 00000000 		.4byte	.LFB45
 4276 005c 28000000 		.4byte	.LFE45
 4277 0060 00000000 		.4byte	.LFB46
 4278 0064 1C000000 		.4byte	.LFE46
 4279 0068 00000000 		.4byte	.LFB47
 4280 006c 1C000000 		.4byte	.LFE47
 4281 0070 00000000 		.4byte	.LFB48
 4282 0074 1C000000 		.4byte	.LFE48
 4283 0078 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 126


 4284 007c 1C000000 		.4byte	.LFE49
 4285 0080 00000000 		.4byte	.LFB50
 4286 0084 28000000 		.4byte	.LFE50
 4287 0088 00000000 		.4byte	.LFB51
 4288 008c 28000000 		.4byte	.LFE51
 4289 0090 00000000 		.4byte	.LFB52
 4290 0094 28000000 		.4byte	.LFE52
 4291 0098 00000000 		.4byte	.LFB53
 4292 009c 28000000 		.4byte	.LFE53
 4293 00a0 00000000 		.4byte	.LFB54
 4294 00a4 28000000 		.4byte	.LFE54
 4295 00a8 00000000 		.4byte	.LFB55
 4296 00ac 28000000 		.4byte	.LFE55
 4297 00b0 00000000 		.4byte	.LFB56
 4298 00b4 30010000 		.4byte	.LFE56
 4299 00b8 00000000 		.4byte	.LFB57
 4300 00bc 42000000 		.4byte	.LFE57
 4301 00c0 00000000 		.4byte	.LFB58
 4302 00c4 36000000 		.4byte	.LFE58
 4303 00c8 00000000 		.4byte	.LFB59
 4304 00cc 5C000000 		.4byte	.LFE59
 4305 00d0 00000000 		.4byte	.LFB60
 4306 00d4 5C000000 		.4byte	.LFE60
 4307 00d8 00000000 		.4byte	.LFB61
 4308 00dc 76000000 		.4byte	.LFE61
 4309 00e0 00000000 		.4byte	.LFB62
 4310 00e4 3C000000 		.4byte	.LFE62
 4311 00e8 00000000 		.4byte	.LFB63
 4312 00ec 1C000000 		.4byte	.LFE63
 4313 00f0 00000000 		.4byte	.LFB64
 4314 00f4 1C000000 		.4byte	.LFE64
 4315 00f8 00000000 		.4byte	.LFB65
 4316 00fc 1C000000 		.4byte	.LFE65
 4317 0100 00000000 		.4byte	.LFB66
 4318 0104 14000000 		.4byte	.LFE66
 4319 0108 00000000 		.4byte	.LFB67
 4320 010c 14000000 		.4byte	.LFE67
 4321 0110 00000000 		.4byte	0
 4322 0114 00000000 		.4byte	0
 4323              		.section	.debug_line,"",%progbits
 4324              	.Ldebug_line0:
 4325 0000 E0030000 		.section	.debug_str,"MS",%progbits,1
 4325      02005C00 
 4325      00000201 
 4325      FB0E0D00 
 4325      01010101 
 4326              	.LASF107:
 4327 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4327      656E7365 
 4327      5F73656E 
 4327      736F7242 
 4327      6173656C 
 4328              	.LASF96:
 4329 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4329      656E7365 
 4329      5F494952 
 4329      3446696C 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 127


 4329      74657200 
 4330              	.LASF102:
 4331 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 4331      656E7365 
 4331      5F646562 
 4331      6F756E63 
 4331      65436F75 
 4332              	.LASF31:
 4333 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 4333      53706565 
 4333      6454626C 
 4333      00
 4334              	.LASF110:
 4335 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4335      656E7365 
 4335      5F6C6F77 
 4335      42617365 
 4335      6C696E65 
 4336              	.LASF55:
 4337 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4337      656E7365 
 4337      5F557064 
 4337      61746542 
 4337      6173656C 
 4338              	.LASF34:
 4339 0095 6E756D62 		.ascii	"numberOfSensors\000"
 4339      65724F66 
 4339      53656E73 
 4339      6F727300 
 4340              	.LASF38:
 4341 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 4341      65744269 
 4341      7456616C 
 4341      756500
 4342              	.LASF94:
 4343 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 4343      656E7365 
 4343      5F446973 
 4343      61626C65 
 4343      57696467 
 4344              	.LASF62:
 4345 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4345      656E7365 
 4345      5F557064 
 4345      61746545 
 4345      6E61626C 
 4346              	.LASF120:
 4347 00eb 43617053 		.ascii	"CapSense_config\000"
 4347      656E7365 
 4347      5F636F6E 
 4347      66696700 
 4348              	.LASF54:
 4349 00fb 69735365 		.ascii	"isSensorEnabled\000"
 4349      6E736F72 
 4349      456E6162 
 4349      6C656400 
 4350              	.LASF90:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 128


 4351 010b 6E756D4F 		.ascii	"numOfSensors\000"
 4351      6653656E 
 4351      736F7273 
 4351      00
 4352              	.LASF40:
 4353 0118 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4353      656E7365 
 4353      5F434F4E 
 4353      4649475F 
 4353      54595045 
 4354              	.LASF8:
 4355 013f 756E7369 		.ascii	"unsigned int\000"
 4355      676E6564 
 4355      20696E74 
 4355      00
 4356              	.LASF43:
 4357 014c 746F7461 		.ascii	"totalSensorsNum\000"
 4357      6C53656E 
 4357      736F7273 
 4357      4E756D00 
 4358              	.LASF122:
 4359 015c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4359      43313120 
 4359      352E342E 
 4359      31203230 
 4359      31363036 
 4360 018f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4360      20726576 
 4360      6973696F 
 4360      6E203233 
 4360      37373135 
 4361 01c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4361      66756E63 
 4361      74696F6E 
 4361      2D736563 
 4361      74696F6E 
 4362              	.LASF28:
 4363 01ea 73616D70 		.ascii	"sampleMaxTbl\000"
 4363      6C654D61 
 4363      7854626C 
 4363      00
 4364              	.LASF53:
 4365 01f7 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4365      656E7365 
 4365      5F496E69 
 4365      7469616C 
 4365      697A6545 
 4366              	.LASF26:
 4367 021b 7369676E 		.ascii	"signRegisterTbl\000"
 4367      52656769 
 4367      73746572 
 4367      54626C00 
 4368              	.LASF49:
 4369 022b 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4369      656E7365 
 4369      5F496E69 
 4369      7469616C 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 129


 4369      697A6553 
 4370              	.LASF67:
 4371 024d 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4371      656E7365 
 4371      5F536574 
 4371      42617365 
 4371      6C696E65 
 4372              	.LASF33:
 4373 0266 72617744 		.ascii	"rawDataIndex\000"
 4373      61746149 
 4373      6E646578 
 4373      00
 4374              	.LASF42:
 4375 0273 746F7461 		.ascii	"totalWidgetsNum\000"
 4375      6C576964 
 4375      67657473 
 4375      4E756D00 
 4376              	.LASF71:
 4377 0283 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4377      656E7365 
 4377      5F536574 
 4377      44696666 
 4377      436F756E 
 4378              	.LASF108:
 4379 029d 43617053 		.ascii	"CapSense_sensorSignal\000"
 4379      656E7365 
 4379      5F73656E 
 4379      736F7253 
 4379      69676E61 
 4380              	.LASF117:
 4381 02b3 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4381      656E7365 
 4381      5F726177 
 4381      44617461 
 4381      496E6465 
 4382              	.LASF78:
 4383 02c9 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4383      656E7365 
 4383      5F536574 
 4383      4E6F6973 
 4383      65546872 
 4384              	.LASF63:
 4385 02e4 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4385      656E7365 
 4385      5F557064 
 4385      61746557 
 4385      69646765 
 4386              	.LASF115:
 4387 0302 43617053 		.ascii	"CapSense_hysteresis\000"
 4387      656E7365 
 4387      5F687973 
 4387      74657265 
 4387      73697300 
 4388              	.LASF12:
 4389 0316 666C6F61 		.ascii	"float\000"
 4389      7400
 4390              	.LASF23:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 130


 4391 031c 7265736F 		.ascii	"resolutionsTbl\000"
 4391      6C757469 
 4391      6F6E7354 
 4391      626C00
 4392              	.LASF74:
 4393 032b 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4393      656E7365 
 4393      5F476574 
 4393      4E6F6973 
 4393      65546872 
 4394              	.LASF25:
 4395 0346 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4395      696E6744 
 4395      69666665 
 4395      72656E63 
 4395      6554626C 
 4396              	.LASF7:
 4397 035b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4397      206C6F6E 
 4397      6720756E 
 4397      7369676E 
 4397      65642069 
 4398              	.LASF104:
 4399 0372 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4399      656E7365 
 4399      5F73656E 
 4399      736F7245 
 4399      6E61626C 
 4400              	.LASF52:
 4401 038c 77696467 		.ascii	"widget\000"
 4401      657400
 4402              	.LASF112:
 4403 0393 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4403      656E7365 
 4403      5F66696E 
 4403      67657254 
 4403      68726573 
 4404              	.LASF47:
 4405 03ac 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 4405      656E7365 
 4405      5F434F4E 
 4405      4649475F 
 4405      54595045 
 4406              	.LASF105:
 4407 03ca 43617053 		.ascii	"CapSense_widgetNumber\000"
 4407      656E7365 
 4407      5F776964 
 4407      6765744E 
 4407      756D6265 
 4408              	.LASF77:
 4409 03e0 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4409      656E7365 
 4409      5F536574 
 4409      46696E67 
 4409      65725468 
 4410              	.LASF101:
 4411 03fc 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 131


 4411      656E7365 
 4411      5F446973 
 4411      61626C65 
 4411      52617744 
 4412              	.LASF72:
 4413 041b 76616C75 		.ascii	"value\000"
 4413      6500
 4414              	.LASF75:
 4415 0421 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4415      656E7365 
 4415      5F476574 
 4415      46696E67 
 4415      65724879 
 4416              	.LASF70:
 4417 043e 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4417      656E7365 
 4417      5F476574 
 4417      44696666 
 4417      436F756E 
 4418              	.LASF57:
 4419 0458 7369676E 		.ascii	"sign\000"
 4419      00
 4420              	.LASF24:
 4421 045d 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4421      65456E76 
 4421      656C6F70 
 4421      6554626C 
 4421      00
 4422              	.LASF56:
 4423 046e 63616C63 		.ascii	"calc\000"
 4423      00
 4424              	.LASF37:
 4425 0473 70747252 		.ascii	"ptrReadSensorRaw\000"
 4425      65616453 
 4425      656E736F 
 4425      72526177 
 4425      00
 4426              	.LASF87:
 4427 0484 68797374 		.ascii	"hysteresis\000"
 4427      65726573 
 4427      697300
 4428              	.LASF59:
 4429 048f 66696C74 		.ascii	"filteredRawData\000"
 4429      65726564 
 4429      52617744 
 4429      61746100 
 4430              	.LASF64:
 4431 049f 73656E73 		.ascii	"sensorsPerWidget\000"
 4431      6F727350 
 4431      65725769 
 4431      64676574 
 4431      00
 4432              	.LASF92:
 4433 04b0 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4433      656E7365 
 4433      5F436865 
 4433      636B4973 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 132


 4433      416E7957 
 4434              	.LASF118:
 4435 04d0 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4435      656E7365 
 4435      5F6E756D 
 4435      6265724F 
 4435      6653656E 
 4436              	.LASF114:
 4437 04e9 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4437      656E7365 
 4437      5F6E6567 
 4437      61746976 
 4437      654E6F69 
 4438              	.LASF41:
 4439 0509 746F7461 		.ascii	"totalScanslotsNum\000"
 4439      6C536361 
 4439      6E736C6F 
 4439      74734E75 
 4439      6D00
 4440              	.LASF50:
 4441 051b 73656E73 		.ascii	"sensor\000"
 4441      6F7200
 4442              	.LASF44:
 4443 0522 73656E73 		.ascii	"sensetivitySeed\000"
 4443      65746976 
 4443      69747953 
 4443      65656400 
 4444              	.LASF93:
 4445 0532 43617053 		.ascii	"CapSense_EnableWidget\000"
 4445      656E7365 
 4445      5F456E61 
 4445      626C6557 
 4445      69646765 
 4446              	.LASF14:
 4447 0548 63686172 		.ascii	"char\000"
 4447      00
 4448              	.LASF76:
 4449 054d 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4449      656E7365 
 4449      5F476574 
 4449      4E656761 
 4449      74697665 
 4450              	.LASF32:
 4451 0570 70726573 		.ascii	"prescalerTable\000"
 4451      63616C65 
 4451      72546162 
 4451      6C6500
 4452              	.LASF10:
 4453 057f 75696E74 		.ascii	"uint16\000"
 4453      313600
 4454              	.LASF68:
 4455 0586 64617461 		.ascii	"data\000"
 4455      00
 4456              	.LASF17:
 4457 058b 69646163 		.ascii	"idac1LevelsTbl\000"
 4457      314C6576 
 4457      656C7354 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 133


 4457      626C00
 4458              	.LASF89:
 4459 059a 72617749 		.ascii	"rawIndex\000"
 4459      6E646578 
 4459      00
 4460              	.LASF6:
 4461 05a3 6C6F6E67 		.ascii	"long long int\000"
 4461      206C6F6E 
 4461      6720696E 
 4461      7400
 4462              	.LASF97:
 4463 05b1 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4463      656E7365 
 4463      5F476574 
 4463      57696467 
 4463      65744E75 
 4464              	.LASF84:
 4465 05ca 6465626F 		.ascii	"debounce\000"
 4465      756E6365 
 4465      00
 4466              	.LASF36:
 4467 05d3 70747250 		.ascii	"ptrPreScan\000"
 4467      72655363 
 4467      616E00
 4468              	.LASF83:
 4469 05de 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4469      656E7365 
 4469      5F436865 
 4469      636B4973 
 4469      53656E73 
 4470              	.LASF35:
 4471 05fb 70747247 		.ascii	"ptrGetRaw\000"
 4471      65745261 
 4471      7700
 4472              	.LASF61:
 4473 0605 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4473      656E7365 
 4473      5F557064 
 4473      61746553 
 4473      656E736F 
 4474              	.LASF48:
 4475 0623 43617053 		.ascii	"CapSense_BaseInit\000"
 4475      656E7365 
 4475      5F426173 
 4475      65496E69 
 4475      7400
 4476              	.LASF27:
 4477 0635 73616D70 		.ascii	"sampleMinTbl\000"
 4477      6C654D69 
 4477      6E54626C 
 4477      00
 4478              	.LASF103:
 4479 0642 43617053 		.ascii	"CapSense_sensorRaw\000"
 4479      656E7365 
 4479      5F73656E 
 4479      736F7252 
 4479      617700
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 134


 4480              	.LASF98:
 4481 0655 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4481      656E7365 
 4481      5F476574 
 4481      4C6F7742 
 4481      6173656C 
 4482              	.LASF80:
 4483 0672 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4483      656E7365 
 4483      5F536574 
 4483      4E656761 
 4483      74697665 
 4484              	.LASF11:
 4485 0695 75696E74 		.ascii	"uint32\000"
 4485      333200
 4486              	.LASF79:
 4487 069c 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4487      656E7365 
 4487      5F536574 
 4487      46696E67 
 4487      65724879 
 4488              	.LASF73:
 4489 06b9 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4489      656E7365 
 4489      5F476574 
 4489      46696E67 
 4489      65725468 
 4490              	.LASF16:
 4491 06d5 6C6F6E67 		.ascii	"long double\000"
 4491      20646F75 
 4491      626C6500 
 4492              	.LASF66:
 4493 06e1 6C617374 		.ascii	"lastSensor\000"
 4493      53656E73 
 4493      6F7200
 4494              	.LASF45:
 4495 06ec 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4495      6B467265 
 4495      715F4D48 
 4495      7A00
 4496              	.LASF18:
 4497 06fa 69646163 		.ascii	"idac2LevelsTbl\000"
 4497      324C6576 
 4497      656C7354 
 4497      626C00
 4498              	.LASF106:
 4499 0709 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4499      656E7365 
 4499      5F73656E 
 4499      736F7242 
 4499      6173656C 
 4500              	.LASF2:
 4501 0721 73686F72 		.ascii	"short int\000"
 4501      7420696E 
 4501      7400
 4502              	.LASF4:
 4503 072b 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 135


 4503      20696E74 
 4503      00
 4504              	.LASF65:
 4505 0734 66697273 		.ascii	"firstSensor\000"
 4505      7453656E 
 4505      736F7200 
 4506              	.LASF116:
 4507 0740 43617053 		.ascii	"CapSense_debounce\000"
 4507      656E7365 
 4507      5F646562 
 4507      6F756E63 
 4507      6500
 4508              	.LASF22:
 4509 0752 77696467 		.ascii	"widgetNubmersTbl\000"
 4509      65744E75 
 4509      626D6572 
 4509      7354626C 
 4509      00
 4510              	.LASF100:
 4511 0763 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4511      656E7365 
 4511      5F456E61 
 4511      626C6552 
 4511      61774461 
 4512              	.LASF111:
 4513 0781 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4513      656E7365 
 4513      5F6C6F77 
 4513      42617365 
 4513      6C696E65 
 4514              	.LASF30:
 4515 079b 6B56616C 		.ascii	"kValueTbl\000"
 4515      75655462 
 4515      6C00
 4516              	.LASF91:
 4517 07a5 73746174 		.ascii	"state\000"
 4517      6500
 4518              	.LASF15:
 4519 07ab 73697A65 		.ascii	"sizetype\000"
 4519      74797065 
 4519      00
 4520              	.LASF5:
 4521 07b4 6C6F6E67 		.ascii	"long unsigned int\000"
 4521      20756E73 
 4521      69676E65 
 4521      6420696E 
 4521      7400
 4522              	.LASF46:
 4523 07c6 706F696E 		.ascii	"pointers\000"
 4523      74657273 
 4523      00
 4524              	.LASF60:
 4525 07cf 6E6F6973 		.ascii	"noiseThreshold\000"
 4525      65546872 
 4525      6573686F 
 4525      6C6400
 4526              	.LASF29:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 136


 4527 07de 70726576 		.ascii	"previousSampleTbl\000"
 4527      696F7573 
 4527      53616D70 
 4527      6C655462 
 4527      6C00
 4528              	.LASF81:
 4529 07f0 43617053 		.ascii	"CapSense_SetDebounce\000"
 4529      656E7365 
 4529      5F536574 
 4529      4465626F 
 4529      756E6365 
 4530              	.LASF86:
 4531 0805 66696E67 		.ascii	"fingerThreshold\000"
 4531      65725468 
 4531      72657368 
 4531      6F6C6400 
 4532              	.LASF20:
 4533 0815 63686172 		.ascii	"chargeDivTbl\000"
 4533      67654469 
 4533      7654626C 
 4533      00
 4534              	.LASF1:
 4535 0822 756E7369 		.ascii	"unsigned char\000"
 4535      676E6564 
 4535      20636861 
 4535      7200
 4536              	.LASF113:
 4537 0830 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4537      656E7365 
 4537      5F6E6F69 
 4537      73655468 
 4537      72657368 
 4538              	.LASF85:
 4539 0848 6465626F 		.ascii	"debounceIndex\000"
 4539      756E6365 
 4539      496E6465 
 4539      7800
 4540              	.LASF51:
 4541 0856 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4541      656E7365 
 4541      5F496E69 
 4541      7469616C 
 4541      697A6541 
 4542              	.LASF69:
 4543 0876 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4543      656E7365 
 4543      5F476574 
 4543      42617365 
 4543      6C696E65 
 4544              	.LASF82:
 4545 088f 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4545      656E7365 
 4545      5F536574 
 4545      4C6F7742 
 4545      6173656C 
 4546              	.LASF19:
 4547 08ac 73656E73 		.ascii	"sensetivityTbl\000"
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 137


 4547      65746976 
 4547      69747954 
 4547      626C00
 4548              	.LASF123:
 4549 08bb 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4549      72617465 
 4549      645F536F 
 4549      75726365 
 4549      5C50536F 
 4550              	.LASF124:
 4551 08e2 413A5C44 		.ascii	"A:\\Documents\\School\\ECEG-721_Embedded_Systems\\L"
 4551      6F63756D 
 4551      656E7473 
 4551      5C536368 
 4551      6F6F6C5C 
 4552 0911 6162735C 		.ascii	"abs\\Project\\Day002_Heart_Rate_Sensor\\PSoC 4 BLE "
 4552      50726F6A 
 4552      6563745C 
 4552      44617930 
 4552      30325F48 
 4553 0941 2D204865 		.ascii	"- Heart Rate Sensor\\PSoC 4 BLE_Heart_Rate_Sensor.c"
 4553      61727420 
 4553      52617465 
 4553      2053656E 
 4553      736F725C 
 4554 0973 7964736E 		.ascii	"ydsn\000"
 4554      00
 4555              	.LASF121:
 4556 0978 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4556      656E7365 
 4556      5F656E61 
 4556      626C6552 
 4556      61774669 
 4557              	.LASF21:
 4558 0992 6D6F6444 		.ascii	"modDivTbl\000"
 4558      69765462 
 4558      6C00
 4559              	.LASF0:
 4560 099c 7369676E 		.ascii	"signed char\000"
 4560      65642063 
 4560      68617200 
 4561              	.LASF3:
 4562 09a8 73686F72 		.ascii	"short unsigned int\000"
 4562      7420756E 
 4562      7369676E 
 4562      65642069 
 4562      6E7400
 4563              	.LASF39:
 4564 09bb 70747253 		.ascii	"ptrSetBitValue\000"
 4564      65744269 
 4564      7456616C 
 4564      756500
 4565              	.LASF95:
 4566 09ca 43617053 		.ascii	"CapSense_MedianFilter\000"
 4566      656E7365 
 4566      5F4D6564 
 4566      69616E46 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccaFmGkj.s 			page 138


 4566      696C7465 
 4567              	.LASF58:
 4568 09e0 74656D70 		.ascii	"tempRaw\000"
 4568      52617700 
 4569              	.LASF99:
 4570 09e8 43617053 		.ascii	"CapSense_GetDebounce\000"
 4570      656E7365 
 4570      5F476574 
 4570      4465626F 
 4570      756E6365 
 4571              	.LASF88:
 4572 09fd 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4572      656E7365 
 4572      5F436865 
 4572      636B4973 
 4572      57696467 
 4573              	.LASF9:
 4574 0a1a 75696E74 		.ascii	"uint8\000"
 4574      3800
 4575              	.LASF13:
 4576 0a20 646F7562 		.ascii	"double\000"
 4576      6C6500
 4577              	.LASF119:
 4578 0a27 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4578      656E7365 
 4578      5F726177 
 4578      46696C74 
 4578      65724461 
 4579              	.LASF109:
 4580 0a3f 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4580      656E7365 
 4580      5F73656E 
 4580      736F724F 
 4580      6E4D6173 
 4581              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
