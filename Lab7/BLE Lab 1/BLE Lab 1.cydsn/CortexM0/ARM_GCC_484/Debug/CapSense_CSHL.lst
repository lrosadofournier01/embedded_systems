ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB35:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 137 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 30B5     		push	{r4, r5, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 4


 139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  34              		.loc 1 140 0
  35 0002 094B     		ldr	r3, .L2
  36 0004 1C5C     		ldrb	r4, [r3, r0]
  37              	.LVL1:
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  38              		.loc 1 154 0
  39 0006 4300     		lsl	r3, r0, #1
  40              	.LVL2:
  41 0008 084A     		ldr	r2, .L2+4
  42 000a 995A     		ldrh	r1, [r3, r2]
  43 000c 084A     		ldr	r2, .L2+8
  44 000e 9952     		strh	r1, [r3, r2]
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  45              		.loc 1 155 0
  46 0010 1018     		add	r0, r2, r0
  47              	.LVL3:
  48 0012 0025     		mov	r5, #0
  49 0014 0571     		strb	r5, [r0, #4]
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  50              		.loc 1 156 0
  51 0016 0572     		strb	r5, [r0, #8]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  52              		.loc 1 158 0
  53 0018 0648     		ldr	r0, .L2+12
  54 001a 005D     		ldrb	r0, [r0, r4]
  55 001c 1219     		add	r2, r2, r4
  56 001e 1073     		strb	r0, [r2, #12]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 5


 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  57              		.loc 1 173 0
  58 0020 054A     		ldr	r2, .L2+16
  59 0022 9952     		strh	r1, [r3, r2]
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  60              		.loc 1 185 0
  61              		@ sp needed
  62              	.LVL4:
  63 0024 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65 0026 C046     		.align	2
  66              	.L2:
  67 0028 00000000 		.word	CapSense_widgetNumber
  68 002c 00000000 		.word	CapSense_sensorRaw
  69 0030 00000000 		.word	.LANCHOR0
  70 0034 00000000 		.word	.LANCHOR1
  71 0038 00000000 		.word	CapSense_rawFilterData1
  72              		.cfi_endproc
  73              	.LFE35:
  74              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  75              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_InitializeSensorBaseline
  78              		.code	16
  79              		.thumb_func
  80              		.type	CapSense_InitializeSensorBaseline, %function
  81              	CapSense_InitializeSensorBaseline:
  82              	.LFB36:
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 6


 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  83              		.loc 1 213 0
  84              		.cfi_startproc
  85              	.LVL5:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90 0002 041C     		mov	r4, r0
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  91              		.loc 1 215 0
  92 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  93              	.LVL6:
  94              	.L5:
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  95              		.loc 1 216 0 discriminator 1
  96 0008 FFF7FEFF 		bl	CapSense_IsBusy
  97              	.LVL7:
  98 000c 0028     		cmp	r0, #0
  99 000e FBD1     		bne	.L5
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 100              		.loc 1 222 0
 101 0010 201C     		mov	r0, r4
 102 0012 FFF7FEFF 		bl	CapSense_BaseInit
 103              	.LVL8:
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 104              		.loc 1 223 0
 105              		@ sp needed
 106              	.LVL9:
 107 0016 10BD     		pop	{r4, pc}
 108              		.cfi_endproc
 109              	.LFE36:
 110              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 111              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 112              		.align	2
 113              		.global	CapSense_InitializeAllBaselines
 114              		.code	16
 115              		.thumb_func
 116              		.type	CapSense_InitializeAllBaselines, %function
 117              	CapSense_InitializeAllBaselines:
 118              	.LFB37:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 7


 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 119              		.loc 1 250 0
 120              		.cfi_startproc
 121 0000 10B5     		push	{r4, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 125              	.LVL10:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 126              		.loc 1 253 0
 127 0002 0024     		mov	r4, #0
 128 0004 03E0     		b	.L8
 129              	.LVL11:
 130              	.L9:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 131              		.loc 1 255 0 discriminator 2
 132 0006 201C     		mov	r0, r4
 133 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 134              	.LVL12:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 135              		.loc 1 253 0 discriminator 2
 136 000c 0134     		add	r4, r4, #1
 137              	.LVL13:
 138              	.L8:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 139              		.loc 1 253 0 is_stmt 0 discriminator 1
 140 000e 012C     		cmp	r4, #1
 141 0010 F9D9     		bls	.L9
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 8


 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 142              		.loc 1 257 0 is_stmt 1
 143              		@ sp needed
 144              	.LVL14:
 145 0012 10BD     		pop	{r4, pc}
 146              		.cfi_endproc
 147              	.LFE37:
 148              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 149              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 150              		.align	2
 151              		.global	CapSense_InitializeEnabledBaselines
 152              		.code	16
 153              		.thumb_func
 154              		.type	CapSense_InitializeEnabledBaselines, %function
 155              	CapSense_InitializeEnabledBaselines:
 156              	.LFB38:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 157              		.loc 1 285 0
 158              		.cfi_startproc
 159 0000 38B5     		push	{r3, r4, r5, lr}
 160              		.cfi_def_cfa_offset 16
 161              		.cfi_offset 3, -16
 162              		.cfi_offset 4, -12
 163              		.cfi_offset 5, -8
 164              		.cfi_offset 14, -4
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 165              		.loc 1 289 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 9


 166 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 167              	.LVL15:
 168              	.L11:
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 169              		.loc 1 290 0 discriminator 1
 170 0006 FFF7FEFF 		bl	CapSense_IsBusy
 171              	.LVL16:
 172 000a 0028     		cmp	r0, #0
 173 000c FBD1     		bne	.L11
 174 000e 0024     		mov	r4, #0
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 175              		.loc 1 297 0
 176 0010 074D     		ldr	r5, .L16
 177 0012 09E0     		b	.L12
 178              	.LVL17:
 179              	.L14:
 180 0014 281C     		mov	r0, r5
 181 0016 211C     		mov	r1, r4
 182 0018 FFF7FEFF 		bl	CapSense_GetBitValue
 183              	.LVL18:
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 184              		.loc 1 300 0
 185 001c 0028     		cmp	r0, #0
 186 001e 02D0     		beq	.L13
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 187              		.loc 1 303 0
 188 0020 201C     		mov	r0, r4
 189              	.LVL19:
 190 0022 FFF7FEFF 		bl	CapSense_BaseInit
 191              	.LVL20:
 192              	.L13:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 193              		.loc 1 295 0
 194 0026 0134     		add	r4, r4, #1
 195              	.LVL21:
 196              	.L12:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 197              		.loc 1 295 0 is_stmt 0 discriminator 1
 198 0028 012C     		cmp	r4, #1
 199 002a F3D9     		bls	.L14
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 200              		.loc 1 306 0 is_stmt 1
 201              		@ sp needed
 202              	.LVL22:
 203 002c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 10


 204              	.L17:
 205 002e C046     		.align	2
 206              	.L16:
 207 0030 00000000 		.word	CapSense_sensorEnableMask
 208              		.cfi_endproc
 209              	.LFE38:
 210              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 211              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 212              		.align	2
 213              		.global	CapSense_GetBaselineData
 214              		.code	16
 215              		.thumb_func
 216              		.type	CapSense_GetBaselineData, %function
 217              	CapSense_GetBaselineData:
 218              	.LFB43:
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 11


 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 12


 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 13


 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 14


 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 15


 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 16


 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 219              		.loc 1 689 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 17


 220              		.cfi_startproc
 221              	.LVL23:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 222              		.loc 1 690 0
 223 0000 4000     		lsl	r0, r0, #1
 224              	.LVL24:
 225 0002 014B     		ldr	r3, .L19
 226 0004 185A     		ldrh	r0, [r3, r0]
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 227              		.loc 1 691 0
 228              		@ sp needed
 229 0006 7047     		bx	lr
 230              	.L20:
 231              		.align	2
 232              	.L19:
 233 0008 00000000 		.word	.LANCHOR0
 234              		.cfi_endproc
 235              	.LFE43:
 236              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 237              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 238              		.align	2
 239              		.global	CapSense_SetBaselineData
 240              		.code	16
 241              		.thumb_func
 242              		.type	CapSense_SetBaselineData, %function
 243              	CapSense_SetBaselineData:
 244              	.LFB44:
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 245              		.loc 1 716 0
 246              		.cfi_startproc
 247              	.LVL25:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 248              		.loc 1 717 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 18


 249 0000 4000     		lsl	r0, r0, #1
 250              	.LVL26:
 251 0002 014B     		ldr	r3, .L22
 252 0004 C152     		strh	r1, [r0, r3]
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 253              		.loc 1 718 0
 254              		@ sp needed
 255 0006 7047     		bx	lr
 256              	.L23:
 257              		.align	2
 258              	.L22:
 259 0008 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE44:
 262              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 263              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_GetDiffCountData
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_GetDiffCountData, %function
 269              	CapSense_GetDiffCountData:
 270              	.LFB45:
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 271              		.loc 1 743 0
 272              		.cfi_startproc
 273              	.LVL27:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 274              		.loc 1 744 0
 275 0000 014B     		ldr	r3, .L25
 276 0002 1818     		add	r0, r3, r0
 277              	.LVL28:
 278 0004 007A     		ldrb	r0, [r0, #8]
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 19


 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 279              		.loc 1 745 0
 280              		@ sp needed
 281 0006 7047     		bx	lr
 282              	.L26:
 283              		.align	2
 284              	.L25:
 285 0008 00000000 		.word	.LANCHOR0
 286              		.cfi_endproc
 287              	.LFE45:
 288              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 289              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 290              		.align	2
 291              		.global	CapSense_SetDiffCountData
 292              		.code	16
 293              		.thumb_func
 294              		.type	CapSense_SetDiffCountData, %function
 295              	CapSense_SetDiffCountData:
 296              	.LFB46:
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 297              		.loc 1 770 0
 298              		.cfi_startproc
 299              	.LVL29:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 300              		.loc 1 771 0
 301 0000 014B     		ldr	r3, .L28
 302 0002 1818     		add	r0, r3, r0
 303              	.LVL30:
 304 0004 0172     		strb	r1, [r0, #8]
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 305              		.loc 1 772 0
 306              		@ sp needed
 307 0006 7047     		bx	lr
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 20


 308              	.L29:
 309              		.align	2
 310              	.L28:
 311 0008 00000000 		.word	.LANCHOR0
 312              		.cfi_endproc
 313              	.LFE46:
 314              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 315              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 316              		.align	2
 317              		.global	CapSense_GetFingerThreshold
 318              		.code	16
 319              		.thumb_func
 320              		.type	CapSense_GetFingerThreshold, %function
 321              	CapSense_GetFingerThreshold:
 322              	.LFB47:
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 323              		.loc 1 797 0
 324              		.cfi_startproc
 325              	.LVL31:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 326              		.loc 1 798 0
 327 0000 014B     		ldr	r3, .L31
 328 0002 185C     		ldrb	r0, [r3, r0]
 329              	.LVL32:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 330              		.loc 1 799 0
 331              		@ sp needed
 332 0004 7047     		bx	lr
 333              	.L32:
 334 0006 C046     		.align	2
 335              	.L31:
 336 0008 00000000 		.word	CapSense_fingerThreshold
 337              		.cfi_endproc
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 21


 338              	.LFE47:
 339              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 340              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 341              		.align	2
 342              		.global	CapSense_GetNoiseThreshold
 343              		.code	16
 344              		.thumb_func
 345              		.type	CapSense_GetNoiseThreshold, %function
 346              	CapSense_GetNoiseThreshold:
 347              	.LFB48:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 348              		.loc 1 824 0
 349              		.cfi_startproc
 350              	.LVL33:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 351              		.loc 1 825 0
 352 0000 014B     		ldr	r3, .L34
 353 0002 185C     		ldrb	r0, [r3, r0]
 354              	.LVL34:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 355              		.loc 1 826 0
 356              		@ sp needed
 357 0004 7047     		bx	lr
 358              	.L35:
 359 0006 C046     		.align	2
 360              	.L34:
 361 0008 00000000 		.word	CapSense_noiseThreshold
 362              		.cfi_endproc
 363              	.LFE48:
 364              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 365              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 366              		.align	2
 367              		.global	CapSense_GetFingerHysteresis
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 22


 368              		.code	16
 369              		.thumb_func
 370              		.type	CapSense_GetFingerHysteresis, %function
 371              	CapSense_GetFingerHysteresis:
 372              	.LFB49:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 373              		.loc 1 852 0
 374              		.cfi_startproc
 375              	.LVL35:
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 376              		.loc 1 853 0
 377 0000 014B     		ldr	r3, .L37
 378 0002 185C     		ldrb	r0, [r3, r0]
 379              	.LVL36:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 380              		.loc 1 854 0
 381              		@ sp needed
 382 0004 7047     		bx	lr
 383              	.L38:
 384 0006 C046     		.align	2
 385              	.L37:
 386 0008 00000000 		.word	CapSense_hysteresis
 387              		.cfi_endproc
 388              	.LFE49:
 389              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 390              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 391              		.align	2
 392              		.global	CapSense_GetNegativeNoiseThreshold
 393              		.code	16
 394              		.thumb_func
 395              		.type	CapSense_GetNegativeNoiseThreshold, %function
 396              	CapSense_GetNegativeNoiseThreshold:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 23


 397              	.LFB50:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 398              		.loc 1 880 0
 399              		.cfi_startproc
 400              	.LVL37:
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 401              		.loc 1 882 0
 402 0000 014B     		ldr	r3, .L40
 403 0002 185C     		ldrb	r0, [r3, r0]
 404              	.LVL38:
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 405              		.loc 1 886 0
 406              		@ sp needed
 407 0004 7047     		bx	lr
 408              	.L41:
 409 0006 C046     		.align	2
 410              	.L40:
 411 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 412              		.cfi_endproc
 413              	.LFE50:
 414              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 415              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 416              		.align	2
 417              		.global	CapSense_SetFingerThreshold
 418              		.code	16
 419              		.thumb_func
 420              		.type	CapSense_SetFingerThreshold, %function
 421              	CapSense_SetFingerThreshold:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 24


 422              	.LFB51:
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 423              		.loc 1 913 0
 424              		.cfi_startproc
 425              	.LVL39:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 426              		.loc 1 914 0
 427 0000 014B     		ldr	r3, .L43
 428 0002 1954     		strb	r1, [r3, r0]
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 429              		.loc 1 915 0
 430              		@ sp needed
 431 0004 7047     		bx	lr
 432              	.L44:
 433 0006 C046     		.align	2
 434              	.L43:
 435 0008 00000000 		.word	CapSense_fingerThreshold
 436              		.cfi_endproc
 437              	.LFE51:
 438              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 439              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 440              		.align	2
 441              		.global	CapSense_SetNoiseThreshold
 442              		.code	16
 443              		.thumb_func
 444              		.type	CapSense_SetNoiseThreshold, %function
 445              	CapSense_SetNoiseThreshold:
 446              	.LFB52:
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 25


 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 447              		.loc 1 941 0
 448              		.cfi_startproc
 449              	.LVL40:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 450              		.loc 1 942 0
 451 0000 014B     		ldr	r3, .L46
 452 0002 1954     		strb	r1, [r3, r0]
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 453              		.loc 1 943 0
 454              		@ sp needed
 455 0004 7047     		bx	lr
 456              	.L47:
 457 0006 C046     		.align	2
 458              	.L46:
 459 0008 00000000 		.word	CapSense_noiseThreshold
 460              		.cfi_endproc
 461              	.LFE52:
 462              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 463              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 464              		.align	2
 465              		.global	CapSense_SetFingerHysteresis
 466              		.code	16
 467              		.thumb_func
 468              		.type	CapSense_SetFingerHysteresis, %function
 469              	CapSense_SetFingerHysteresis:
 470              	.LFB53:
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 26


 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 471              		.loc 1 969 0
 472              		.cfi_startproc
 473              	.LVL41:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 474              		.loc 1 970 0
 475 0000 014B     		ldr	r3, .L49
 476 0002 1954     		strb	r1, [r3, r0]
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 477              		.loc 1 971 0
 478              		@ sp needed
 479 0004 7047     		bx	lr
 480              	.L50:
 481 0006 C046     		.align	2
 482              	.L49:
 483 0008 00000000 		.word	CapSense_hysteresis
 484              		.cfi_endproc
 485              	.LFE53:
 486              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 487              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 488              		.align	2
 489              		.global	CapSense_SetNegativeNoiseThreshold
 490              		.code	16
 491              		.thumb_func
 492              		.type	CapSense_SetNegativeNoiseThreshold, %function
 493              	CapSense_SetNegativeNoiseThreshold:
 494              	.LFB54:
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 27


 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 495              		.loc 1 998 0
 496              		.cfi_startproc
 497              	.LVL42:
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 498              		.loc 1 999 0
 499 0000 014B     		ldr	r3, .L52
 500 0002 1954     		strb	r1, [r3, r0]
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 501              		.loc 1 1000 0
 502              		@ sp needed
 503 0004 7047     		bx	lr
 504              	.L53:
 505 0006 C046     		.align	2
 506              	.L52:
 507 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 508              		.cfi_endproc
 509              	.LFE54:
 510              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 511              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 512              		.align	2
 513              		.global	CapSense_SetDebounce
 514              		.code	16
 515              		.thumb_func
 516              		.type	CapSense_SetDebounce, %function
 517              	CapSense_SetDebounce:
 518              	.LFB55:
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 28


1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 519              		.loc 1 1026 0
 520              		.cfi_startproc
 521              	.LVL43:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 522              		.loc 1 1027 0
 523 0000 014B     		ldr	r3, .L55
 524 0002 1954     		strb	r1, [r3, r0]
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 525              		.loc 1 1028 0
 526              		@ sp needed
 527 0004 7047     		bx	lr
 528              	.L56:
 529 0006 C046     		.align	2
 530              	.L55:
 531 0008 00000000 		.word	.LANCHOR1
 532              		.cfi_endproc
 533              	.LFE55:
 534              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 535              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 536              		.align	2
 537              		.global	CapSense_SetLowBaselineReset
 538              		.code	16
 539              		.thumb_func
 540              		.type	CapSense_SetLowBaselineReset, %function
 541              	CapSense_SetLowBaselineReset:
 542              	.LFB56:
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 29


1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 543              		.loc 1 1054 0
 544              		.cfi_startproc
 545              	.LVL44:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 546              		.loc 1 1055 0
 547 0000 014B     		ldr	r3, .L58
 548 0002 1818     		add	r0, r3, r0
 549              	.LVL45:
 550 0004 0171     		strb	r1, [r0, #4]
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 551              		.loc 1 1056 0
 552              		@ sp needed
 553 0006 7047     		bx	lr
 554              	.L59:
 555              		.align	2
 556              	.L58:
 557 0008 00000000 		.word	.LANCHOR1
 558              		.cfi_endproc
 559              	.LFE56:
 560              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 561              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 562              		.align	2
 563              		.global	CapSense_CheckIsSensorActive
 564              		.code	16
 565              		.thumb_func
 566              		.type	CapSense_CheckIsSensorActive, %function
 567              	CapSense_CheckIsSensorActive:
 568              	.LFB57:
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 30


1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 569              		.loc 1 1100 0
 570              		.cfi_startproc
 571              	.LVL46:
 572 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 573              		.cfi_def_cfa_offset 20
 574              		.cfi_offset 4, -20
 575              		.cfi_offset 5, -16
 576              		.cfi_offset 6, -12
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
 579 0002 4746     		mov	r7, r8
 580 0004 80B4     		push	{r7}
 581              		.cfi_def_cfa_offset 24
 582              		.cfi_offset 8, -24
 583 0006 041C     		mov	r4, r0
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 584              		.loc 1 1110 0
 585 0008 234B     		ldr	r3, .L66
 586 000a 1D5C     		ldrb	r5, [r3, r0]
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 587              		.loc 1 1112 0
 588 000c 234B     		ldr	r3, .L66+4
 589 000e 5F5D     		ldrb	r7, [r3, r5]
 590              	.LVL47:
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 591              		.loc 1 1113 0
 592 0010 234B     		ldr	r3, .L66+8
 593              	.LVL48:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 31


 594 0012 5E5D     		ldrb	r6, [r3, r5]
 595              	.LVL49:
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 596              		.loc 1 1114 0
 597 0014 234B     		ldr	r3, .L66+12
 598              	.LVL50:
 599 0016 5B5D     		ldrb	r3, [r3, r5]
 600 0018 9846     		mov	r8, r3
 601              	.LVL51:
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 602              		.loc 1 1120 0
 603 001a 2348     		ldr	r0, .L66+16
 604              	.LVL52:
 605 001c 1030     		add	r0, r0, #16
 606 001e 211C     		mov	r1, r4
 607 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 608              	.LVL53:
 609 0024 0028     		cmp	r0, #0
 610 0026 10D0     		beq	.L61
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 611              		.loc 1 1123 0
 612 0028 1F4B     		ldr	r3, .L66+16
 613 002a 1B19     		add	r3, r3, r4
 614 002c 1B7A     		ldrb	r3, [r3, #8]
 615 002e BE1B     		sub	r6, r7, r6
 616              	.LVL54:
 617 0030 B342     		cmp	r3, r6
 618 0032 23DA     		bge	.L62
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 619              		.loc 1 1125 0
 620 0034 1C4E     		ldr	r6, .L66+16
 621 0036 301C     		mov	r0, r6
 622 0038 1030     		add	r0, r0, #16
 623 003a 211C     		mov	r1, r4
 624 003c 0022     		mov	r2, #0
 625 003e FFF7FEFF 		bl	CapSense_SetBitValue
 626              	.LVL55:
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 627              		.loc 1 1127 0
 628 0042 7519     		add	r5, r6, r5
 629 0044 4346     		mov	r3, r8
 630 0046 2B73     		strb	r3, [r5, #12]
 631 0048 18E0     		b	.L62
 632              	.LVL56:
 633              	.L61:
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 32


1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 634              		.loc 1 1133 0
 635 004a 174B     		ldr	r3, .L66+16
 636 004c 1B19     		add	r3, r3, r4
 637 004e 1B7A     		ldrb	r3, [r3, #8]
 638 0050 BE19     		add	r6, r7, r6
 639              	.LVL57:
 640 0052 B342     		cmp	r3, r6
 641 0054 0EDB     		blt	.L63
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 642              		.loc 1 1135 0
 643 0056 144B     		ldr	r3, .L66+16
 644 0058 5D19     		add	r5, r3, r5
 645 005a 2B7B     		ldrb	r3, [r5, #12]
 646 005c 013B     		sub	r3, r3, #1
 647 005e DBB2     		uxtb	r3, r3
 648 0060 2B73     		strb	r3, [r5, #12]
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 649              		.loc 1 1137 0
 650 0062 002B     		cmp	r3, #0
 651 0064 0AD1     		bne	.L62
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 652              		.loc 1 1139 0
 653 0066 1048     		ldr	r0, .L66+16
 654 0068 1030     		add	r0, r0, #16
 655 006a 211C     		mov	r1, r4
 656 006c 0122     		mov	r2, #1
 657 006e FFF7FEFF 		bl	CapSense_SetBitValue
 658              	.LVL58:
 659 0072 03E0     		b	.L62
 660              	.L63:
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 661              		.loc 1 1145 0
 662 0074 0C4B     		ldr	r3, .L66+16
 663 0076 5D19     		add	r5, r3, r5
 664 0078 4346     		mov	r3, r8
 665 007a 2B73     		strb	r3, [r5, #12]
 666              	.L62:
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 667              		.loc 1 1149 0
 668 007c 0A48     		ldr	r0, .L66+16
 669 007e 1030     		add	r0, r0, #16
 670 0080 211C     		mov	r1, r4
 671 0082 FFF7FEFF 		bl	CapSense_GetBitValue
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 33


 672              	.LVL59:
 673 0086 0028     		cmp	r0, #0
 674 0088 01D0     		beq	.L65
 675 008a 0120     		mov	r0, #1
 676 008c 00E0     		b	.L64
 677              	.L65:
 678 008e 0020     		mov	r0, #0
 679              	.L64:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 680              		.loc 1 1150 0 discriminator 3
 681              		@ sp needed
 682              	.LVL60:
 683              	.LVL61:
 684              	.LVL62:
 685 0090 04BC     		pop	{r2}
 686 0092 9046     		mov	r8, r2
 687 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 688              	.L67:
 689 0096 C046     		.align	2
 690              	.L66:
 691 0098 00000000 		.word	CapSense_widgetNumber
 692 009c 00000000 		.word	CapSense_fingerThreshold
 693 00a0 00000000 		.word	CapSense_hysteresis
 694 00a4 00000000 		.word	.LANCHOR1
 695 00a8 00000000 		.word	.LANCHOR0
 696              		.cfi_endproc
 697              	.LFE57:
 698              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 699              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 700              		.align	2
 701              		.global	CapSense_CheckIsWidgetActive
 702              		.code	16
 703              		.thumb_func
 704              		.type	CapSense_CheckIsWidgetActive, %function
 705              	CapSense_CheckIsWidgetActive:
 706              	.LFB58:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 34


1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 707              		.loc 1 1182 0
 708              		.cfi_startproc
 709              	.LVL63:
 710 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 711              		.cfi_def_cfa_offset 24
 712              		.cfi_offset 3, -24
 713              		.cfi_offset 4, -20
 714              		.cfi_offset 5, -16
 715              		.cfi_offset 6, -12
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 718              		.loc 1 1183 0
 719 0002 094B     		ldr	r3, .L73
 720 0004 1C5C     		ldrb	r4, [r3, r0]
 721              	.LVL64:
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 722              		.loc 1 1184 0
 723 0006 1818     		add	r0, r3, r0
 724              	.LVL65:
 725 0008 0579     		ldrb	r5, [r0, #4]
 726 000a 2D19     		add	r5, r5, r4
 727              	.LVL66:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 728              		.loc 1 1185 0
 729 000c 0026     		mov	r6, #0
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 730              		.loc 1 1192 0
 731 000e 0127     		mov	r7, #1
 732              	.LVL67:
 733              	.L70:
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 734              		.loc 1 1190 0
 735 0010 201C     		mov	r0, r4
 736 0012 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 737              	.LVL68:
 738 0016 0028     		cmp	r0, #0
 739 0018 00D0     		beq	.L69
 740              		.loc 1 1192 0
 741 001a 3E1C     		mov	r6, r7
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 35


 742              	.LVL69:
 743              	.L69:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 744              		.loc 1 1194 0
 745 001c 0134     		add	r4, r4, #1
 746              	.LVL70:
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 747              		.loc 1 1196 0
 748 001e AC42     		cmp	r4, r5
 749 0020 F6D3     		bcc	.L70
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 750              		.loc 1 1201 0
 751 0022 301C     		mov	r0, r6
 752              		@ sp needed
 753              	.LVL71:
 754              	.LVL72:
 755              	.LVL73:
 756 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 757              	.L74:
 758 0026 C046     		.align	2
 759              	.L73:
 760 0028 00000000 		.word	.LANCHOR2
 761              		.cfi_endproc
 762              	.LFE58:
 763              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 764              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 765              		.align	2
 766              		.global	CapSense_CheckIsAnyWidgetActive
 767              		.code	16
 768              		.thumb_func
 769              		.type	CapSense_CheckIsAnyWidgetActive, %function
 770              	CapSense_CheckIsAnyWidgetActive:
 771              	.LFB59:
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 36


1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 772              		.loc 1 1228 0
 773              		.cfi_startproc
 774 0000 70B5     		push	{r4, r5, r6, lr}
 775              		.cfi_def_cfa_offset 16
 776              		.cfi_offset 4, -16
 777              		.cfi_offset 5, -12
 778              		.cfi_offset 6, -8
 779              		.cfi_offset 14, -4
 780              	.LVL74:
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 781              		.loc 1 1231 0
 782 0002 0025     		mov	r5, #0
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 783              		.loc 1 1233 0
 784 0004 0024     		mov	r4, #0
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 785              		.loc 1 1237 0
 786 0006 0126     		mov	r6, #1
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 787              		.loc 1 1233 0
 788 0008 06E0     		b	.L76
 789              	.LVL75:
 790              	.L78:
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 791              		.loc 1 1235 0
 792 000a 201C     		mov	r0, r4
 793 000c FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 794              	.LVL76:
 795 0010 0028     		cmp	r0, #0
 796 0012 00D0     		beq	.L77
 797              		.loc 1 1237 0
 798 0014 351C     		mov	r5, r6
 799              	.LVL77:
 800              	.L77:
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 801              		.loc 1 1233 0
 802 0016 0134     		add	r4, r4, #1
 803              	.LVL78:
 804              	.L76:
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 805              		.loc 1 1233 0 is_stmt 0 discriminator 1
 806 0018 012C     		cmp	r4, #1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 37


 807 001a F6D9     		bls	.L78
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 808              		.loc 1 1244 0 is_stmt 1
 809 001c 281C     		mov	r0, r5
 810              		@ sp needed
 811              	.LVL79:
 812              	.LVL80:
 813 001e 70BD     		pop	{r4, r5, r6, pc}
 814              		.cfi_endproc
 815              	.LFE59:
 816              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 817              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 818              		.align	2
 819              		.global	CapSense_EnableWidget
 820              		.code	16
 821              		.thumb_func
 822              		.type	CapSense_EnableWidget, %function
 823              	CapSense_EnableWidget:
 824              	.LFB60:
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 825              		.loc 1 1275 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 38


 826              		.cfi_startproc
 827              	.LVL81:
 828 0000 70B5     		push	{r4, r5, r6, lr}
 829              		.cfi_def_cfa_offset 16
 830              		.cfi_offset 4, -16
 831              		.cfi_offset 5, -12
 832              		.cfi_offset 6, -8
 833              		.cfi_offset 14, -4
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 834              		.loc 1 1277 0
 835 0002 084B     		ldr	r3, .L83
 836 0004 1C5C     		ldrb	r4, [r3, r0]
 837              	.LVL82:
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 838              		.loc 1 1278 0
 839 0006 1818     		add	r0, r3, r0
 840              	.LVL83:
 841 0008 0679     		ldrb	r6, [r0, #4]
 842 000a 3619     		add	r6, r6, r4
 843 000c F6B2     		uxtb	r6, r6
 844              	.LVL84:
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 845              		.loc 1 1283 0
 846 000e 064D     		ldr	r5, .L83+4
 847              	.LVL85:
 848              	.L81:
 849              		.loc 1 1283 0 is_stmt 0 discriminator 1
 850 0010 281C     		mov	r0, r5
 851 0012 211C     		mov	r1, r4
 852 0014 0122     		mov	r2, #1
 853 0016 FFF7FEFF 		bl	CapSense_SetBitValue
 854              	.LVL86:
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 855              		.loc 1 1284 0 is_stmt 1 discriminator 1
 856 001a 0134     		add	r4, r4, #1
 857              	.LVL87:
 858 001c E4B2     		uxtb	r4, r4
 859              	.LVL88:
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 860              		.loc 1 1286 0 discriminator 1
 861 001e B442     		cmp	r4, r6
 862 0020 F6D3     		bcc	.L81
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 863              		.loc 1 1287 0
 864              		@ sp needed
 865              	.LVL89:
 866              	.LVL90:
 867 0022 70BD     		pop	{r4, r5, r6, pc}
 868              	.L84:
 869              		.align	2
 870              	.L83:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 39


 871 0024 00000000 		.word	.LANCHOR2
 872 0028 00000000 		.word	CapSense_sensorEnableMask
 873              		.cfi_endproc
 874              	.LFE60:
 875              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 876              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 877              		.align	2
 878              		.global	CapSense_DisableWidget
 879              		.code	16
 880              		.thumb_func
 881              		.type	CapSense_DisableWidget, %function
 882              	CapSense_DisableWidget:
 883              	.LFB61:
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 884              		.loc 1 1318 0
 885              		.cfi_startproc
 886              	.LVL91:
 887 0000 70B5     		push	{r4, r5, r6, lr}
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 4, -16
 890              		.cfi_offset 5, -12
 891              		.cfi_offset 6, -8
 892              		.cfi_offset 14, -4
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 893              		.loc 1 1319 0
 894 0002 084B     		ldr	r3, .L88
 895 0004 1C5C     		ldrb	r4, [r3, r0]
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 40


 896              	.LVL92:
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 897              		.loc 1 1320 0
 898 0006 1818     		add	r0, r3, r0
 899              	.LVL93:
 900 0008 0679     		ldrb	r6, [r0, #4]
 901 000a 3619     		add	r6, r6, r4
 902 000c F6B2     		uxtb	r6, r6
 903              	.LVL94:
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 904              		.loc 1 1326 0
 905 000e 064D     		ldr	r5, .L88+4
 906              	.LVL95:
 907              	.L86:
 908              		.loc 1 1326 0 is_stmt 0 discriminator 1
 909 0010 281C     		mov	r0, r5
 910 0012 211C     		mov	r1, r4
 911 0014 0022     		mov	r2, #0
 912 0016 FFF7FEFF 		bl	CapSense_SetBitValue
 913              	.LVL96:
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 914              		.loc 1 1327 0 is_stmt 1 discriminator 1
 915 001a 0134     		add	r4, r4, #1
 916              	.LVL97:
 917 001c E4B2     		uxtb	r4, r4
 918              	.LVL98:
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 919              		.loc 1 1329 0 discriminator 1
 920 001e B442     		cmp	r4, r6
 921 0020 F6D3     		bcc	.L86
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 922              		.loc 1 1330 0
 923              		@ sp needed
 924              	.LVL99:
 925              	.LVL100:
 926 0022 70BD     		pop	{r4, r5, r6, pc}
 927              	.L89:
 928              		.align	2
 929              	.L88:
 930 0024 00000000 		.word	.LANCHOR2
 931 0028 00000000 		.word	CapSense_sensorEnableMask
 932              		.cfi_endproc
 933              	.LFE61:
 934              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 935              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 936              		.align	2
 937              		.global	CapSense_MedianFilter
 938              		.code	16
 939              		.thumb_func
 940              		.type	CapSense_MedianFilter, %function
 941              	CapSense_MedianFilter:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 41


 942              	.LFB62:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 42


1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 43


1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 44


1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 45


1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 46


1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 47


1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 48


1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 49


1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 50


1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 51


1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 52


1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 53


2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 54


2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 55


2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 56


2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 57


2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 58


2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 59


2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 943              		.loc 1 2370 0
 944              		.cfi_startproc
 945              	.LVL101:
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 946              		.loc 1 2373 0
 947 0000 8842     		cmp	r0, r1
 948 0002 02D9     		bls	.L91
 949 0004 031C     		mov	r3, r0
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 950              		.loc 1 2377 0
 951 0006 081C     		mov	r0, r1
 952              	.LVL102:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 953              		.loc 1 2376 0
 954 0008 191C     		mov	r1, r3
 955              	.LVL103:
 956              	.L91:
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 957              		.loc 1 2380 0
 958 000a 9142     		cmp	r1, r2
 959 000c 00D9     		bls	.L92
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 960              		.loc 1 2382 0
 961 000e 111C     		mov	r1, r2
 962              	.LVL104:
 963              	.L92:
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 964              		.loc 1 2385 0
 965 0010 0B1C     		add	r3, r1, #0
 966 0012 8142     		cmp	r1, r0
 967 0014 00D2     		bcs	.L93
 968 0016 031C     		add	r3, r0, #0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 60


 969              	.L93:
 970 0018 98B2     		uxth	r0, r3
 971              	.LVL105:
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 972              		.loc 1 2386 0
 973              		@ sp needed
 974 001a 7047     		bx	lr
 975              		.cfi_endproc
 976              	.LFE62:
 977              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 978              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 979              		.align	2
 980              		.global	CapSense_IIR4Filter
 981              		.code	16
 982              		.thumb_func
 983              		.type	CapSense_IIR4Filter, %function
 984              	CapSense_IIR4Filter:
 985              	.LFB63:
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 61


2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 62


2483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 986              		.loc 1 2490 0
 987              		.cfi_startproc
 988              	.LVL106:
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 989              		.loc 1 2494 0
 990 0000 4018     		add	r0, r0, r1
 991              	.LVL107:
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 992              		.loc 1 2495 0
 993 0002 4900     		lsl	r1, r1, #1
 994              	.LVL108:
 995 0004 0818     		add	r0, r1, r0
 996              	.LVL109:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 997              		.loc 1 2498 0
 998 0006 8008     		lsr	r0, r0, #2
 999              	.LVL110:
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1000              		.loc 1 2499 0
 1001              		@ sp needed
 1002 0008 7047     		bx	lr
 1003              		.cfi_endproc
 1004              	.LFE63:
 1005              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1006 000a C046     		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1007              		.align	2
 1008              		.global	CapSense_UpdateBaselineNoThreshold
 1009              		.code	16
 1010              		.thumb_func
 1011              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1012              	CapSense_UpdateBaselineNoThreshold:
 1013              	.LFB39:
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1014              		.loc 1 350 0
 1015              		.cfi_startproc
 1016              	.LVL111:
 1017 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1018              		.cfi_def_cfa_offset 24
 1019              		.cfi_offset 3, -24
 1020              		.cfi_offset 4, -20
 1021              		.cfi_offset 5, -16
 1022              		.cfi_offset 6, -12
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 63


 1025 0002 4F46     		mov	r7, r9
 1026 0004 4646     		mov	r6, r8
 1027 0006 C0B4     		push	{r6, r7}
 1028              		.cfi_def_cfa_offset 32
 1029              		.cfi_offset 8, -32
 1030              		.cfi_offset 9, -28
 1031 0008 041C     		mov	r4, r0
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 1032              		.loc 1 355 0
 1033 000a 394B     		ldr	r3, .L108
 1034 000c 1F5C     		ldrb	r7, [r3, r0]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 1035              		.loc 1 356 0
 1036 000e 394B     		ldr	r3, .L108+4
 1037 0010 DB5D     		ldrb	r3, [r3, r7]
 1038 0012 9846     		mov	r8, r3
 1039              	.LVL112:
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1040              		.loc 1 364 0
 1041 0014 4200     		lsl	r2, r0, #1
 1042 0016 384B     		ldr	r3, .L108+8
 1043 0018 D55A     		ldrh	r5, [r2, r3]
 1044              	.LVL113:
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 1045              		.loc 1 367 0
 1046 001a 384B     		ldr	r3, .L108+12
 1047              	.LVL114:
 1048 001c 9B79     		ldrb	r3, [r3, #6]
 1049 001e 002B     		cmp	r3, #0
 1050 0020 08D0     		beq	.L98
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 1051              		.loc 1 388 0
 1052 0022 374E     		ldr	r6, .L108+16
 1053 0024 9146     		mov	r9, r2
 1054 0026 915B     		ldrh	r1, [r2, r6]
 1055 0028 281C     		mov	r0, r5
 1056              	.LVL115:
 1057 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1058              	.LVL116:
 1059 002e 051C     		mov	r5, r0
 1060              	.LVL117:
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 1061              		.loc 1 389 0
 1062 0030 4B46     		mov	r3, r9
 1063 0032 9853     		strh	r0, [r3, r6]
 1064              	.LVL118:
 1065              	.L98:
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 1066              		.loc 1 410 0
 1067 0034 E1B2     		uxtb	r1, r4
 1068 0036 3348     		ldr	r0, .L108+20
 1069 0038 2F4A     		ldr	r2, .L108+8
 1070 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 1071              	.LVL119:
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 1072              		.loc 1 415 0
 1073 003e 6300     		lsl	r3, r4, #1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 64


 1074 0040 314A     		ldr	r2, .L108+24
 1075 0042 9B5A     		ldrh	r3, [r3, r2]
 1076 0044 AB42     		cmp	r3, r5
 1077 0046 07D8     		bhi	.L99
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 1078              		.loc 1 417 0
 1079 0048 0021     		mov	r1, #0
 1080 004a 304A     		ldr	r2, .L108+28
 1081 004c 1155     		strb	r1, [r2, r4]
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1082              		.loc 1 418 0
 1083 004e EE1A     		sub	r6, r5, r3
 1084 0050 B6B2     		uxth	r6, r6
 1085              	.LVL120:
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1086              		.loc 1 419 0
 1087 0052 0122     		mov	r2, #1
 1088 0054 9146     		mov	r9, r2
 1089 0056 03E0     		b	.L100
 1090              	.LVL121:
 1091              	.L99:
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 1092              		.loc 1 423 0
 1093 0058 5E1B     		sub	r6, r3, r5
 1094 005a B6B2     		uxth	r6, r6
 1095              	.LVL122:
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1096              		.loc 1 424 0
 1097 005c 0022     		mov	r2, #0
 1098 005e 9146     		mov	r9, r2
 1099              	.LVL123:
 1100              	.L100:
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 1101              		.loc 1 428 0
 1102 0060 4A46     		mov	r2, r9
 1103 0062 002A     		cmp	r2, #0
 1104 0064 15D1     		bne	.L101
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 1105              		.loc 1 428 0 is_stmt 0 discriminator 1
 1106 0066 2A4A     		ldr	r2, .L108+32
 1107 0068 D25D     		ldrb	r2, [r2, r7]
 1108 006a B242     		cmp	r2, r6
 1109 006c 11D2     		bcs	.L101
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 1110              		.loc 1 433 0 is_stmt 1
 1111 006e 274B     		ldr	r3, .L108+28
 1112 0070 1B5D     		ldrb	r3, [r3, r4]
 1113 0072 224A     		ldr	r2, .L108+12
 1114 0074 1219     		add	r2, r2, r4
 1115 0076 1279     		ldrb	r2, [r2, #4]
 1116 0078 9342     		cmp	r3, r2
 1117 007a 06D3     		bcc	.L102
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 1118              		.loc 1 435 0
 1119 007c 201C     		mov	r0, r4
 1120 007e FFF7FEFF 		bl	CapSense_BaseInit
 1121              	.LVL124:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 65


 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1122              		.loc 1 436 0
 1123 0082 0022     		mov	r2, #0
 1124 0084 214B     		ldr	r3, .L108+28
 1125 0086 1A55     		strb	r2, [r3, r4]
 1126 0088 1AE0     		b	.L103
 1127              	.L102:
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 1128              		.loc 1 440 0
 1129 008a 0133     		add	r3, r3, #1
 1130 008c 1F4A     		ldr	r2, .L108+28
 1131 008e 1355     		strb	r3, [r2, r4]
 1132 0090 16E0     		b	.L103
 1133              	.L101:
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 1134              		.loc 1 448 0
 1135 0092 B045     		cmp	r8, r6
 1136 0094 06D2     		bcs	.L104
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1137              		.loc 1 449 0 discriminator 1
 1138 0096 1E4A     		ldr	r2, .L108+32
 1139 0098 D25D     		ldrb	r2, [r2, r7]
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 1140              		.loc 1 448 0 discriminator 1
 1141 009a B242     		cmp	r2, r6
 1142 009c 10D9     		bls	.L103
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 1143              		.loc 1 450 0
 1144 009e 4A46     		mov	r2, r9
 1145 00a0 002A     		cmp	r2, #0
 1146 00a2 0DD1     		bne	.L103
 1147              	.L104:
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 1148              		.loc 1 461 0
 1149 00a4 1802     		lsl	r0, r3, #8
 1150              	.LVL125:
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1151              		.loc 1 462 0
 1152 00a6 1849     		ldr	r1, .L108+24
 1153 00a8 0A19     		add	r2, r1, r4
 1154 00aa 1779     		ldrb	r7, [r2, #4]
 1155 00ac 3843     		orr	r0, r7
 1156              	.LVL126:
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 1157              		.loc 1 465 0
 1158 00ae 2D18     		add	r5, r5, r0
 1159              	.LVL127:
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 1160              		.loc 1 468 0
 1161 00b0 EB1A     		sub	r3, r5, r3
 1162              	.LVL128:
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 1163              		.loc 1 471 0
 1164 00b2 1D0A     		lsr	r5, r3, #8
 1165 00b4 6000     		lsl	r0, r4, #1
 1166 00b6 0D52     		strh	r5, [r1, r0]
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 66


 1167              		.loc 1 472 0
 1168 00b8 1371     		strb	r3, [r2, #4]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 1169              		.loc 1 474 0
 1170 00ba 0022     		mov	r2, #0
 1171 00bc 134B     		ldr	r3, .L108+28
 1172              	.LVL129:
 1173 00be 1A55     		strb	r2, [r3, r4]
 1174              	.L103:
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1175              		.loc 1 481 0
 1176 00c0 B045     		cmp	r8, r6
 1177 00c2 0DD2     		bcs	.L105
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 1178              		.loc 1 481 0 is_stmt 0 discriminator 1
 1179 00c4 4B46     		mov	r3, r9
 1180 00c6 002B     		cmp	r3, #0
 1181 00c8 0AD0     		beq	.L105
 1182              	.LVL130:
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 1183              		.loc 1 485 0 is_stmt 1
 1184 00ca FF2E     		cmp	r6, #255
 1185 00cc 04D9     		bls	.L106
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 1186              		.loc 1 487 0
 1187 00ce 0E4B     		ldr	r3, .L108+24
 1188              	.LVL131:
 1189 00d0 1C19     		add	r4, r3, r4
 1190              	.LVL132:
 1191 00d2 FF23     		mov	r3, #255
 1192 00d4 2372     		strb	r3, [r4, #8]
 1193 00d6 07E0     		b	.L97
 1194              	.LVL133:
 1195              	.L106:
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 1196              		.loc 1 491 0
 1197 00d8 0B4B     		ldr	r3, .L108+24
 1198              	.LVL134:
 1199 00da 1C19     		add	r4, r3, r4
 1200              	.LVL135:
 1201 00dc 2672     		strb	r6, [r4, #8]
 1202 00de 03E0     		b	.L97
 1203              	.LVL136:
 1204              	.L105:
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 1205              		.loc 1 500 0
 1206 00e0 094B     		ldr	r3, .L108+24
 1207 00e2 1C19     		add	r4, r3, r4
 1208              	.LVL137:
 1209 00e4 0023     		mov	r3, #0
 1210 00e6 2372     		strb	r3, [r4, #8]
 1211              	.L97:
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1212              		.loc 1 507 0
 1213              		@ sp needed
 1214              	.LVL138:
 1215              	.LVL139:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 67


 1216              	.LVL140:
 1217 00e8 0CBC     		pop	{r2, r3}
 1218 00ea 9046     		mov	r8, r2
 1219 00ec 9946     		mov	r9, r3
 1220 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1221              	.L109:
 1222              		.align	2
 1223              	.L108:
 1224 00f0 00000000 		.word	CapSense_widgetNumber
 1225 00f4 00000000 		.word	CapSense_noiseThreshold
 1226 00f8 00000000 		.word	CapSense_sensorRaw
 1227 00fc 00000000 		.word	.LANCHOR1
 1228 0100 00000000 		.word	CapSense_rawFilterData1
 1229 0104 00000000 		.word	CapSense_config
 1230 0108 00000000 		.word	.LANCHOR0
 1231 010c 00000000 		.word	CapSense_lowBaselineResetCnt
 1232 0110 00000000 		.word	CapSense_negativeNoiseThreshold
 1233              		.cfi_endproc
 1234              	.LFE39:
 1235              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1236              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 1237              		.align	2
 1238              		.global	CapSense_UpdateSensorBaseline
 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	CapSense_UpdateSensorBaseline, %function
 1242              	CapSense_UpdateSensorBaseline:
 1243              	.LFB40:
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1244              		.loc 1 541 0
 1245              		.cfi_startproc
 1246              	.LVL141:
 1247 0000 10B5     		push	{r4, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 4, -8
 1250              		.cfi_offset 14, -4
 1251 0002 041C     		mov	r4, r0
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 1252              		.loc 1 553 0
 1253 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1254              	.LVL142:
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 1255              		.loc 1 556 0
 1256 0008 201C     		mov	r0, r4
 1257 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1258              	.LVL143:
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1259              		.loc 1 562 0
 1260              		@ sp needed
 1261              	.LVL144:
 1262 000e 10BD     		pop	{r4, pc}
 1263              		.cfi_endproc
 1264              	.LFE40:
 1265              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1266              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1267              		.align	2
 1268              		.global	CapSense_UpdateEnabledBaselines
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 68


 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	CapSense_UpdateEnabledBaselines, %function
 1272              	CapSense_UpdateEnabledBaselines:
 1273              	.LFB41:
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1274              		.loc 1 595 0
 1275              		.cfi_startproc
 1276 0000 38B5     		push	{r3, r4, r5, lr}
 1277              		.cfi_def_cfa_offset 16
 1278              		.cfi_offset 3, -16
 1279              		.cfi_offset 4, -12
 1280              		.cfi_offset 5, -8
 1281              		.cfi_offset 14, -4
 1282              	.LVL145:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1283              		.loc 1 599 0
 1284 0002 0024     		mov	r4, #0
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1285              		.loc 1 601 0
 1286 0004 074D     		ldr	r5, .L115
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1287              		.loc 1 599 0
 1288 0006 09E0     		b	.L112
 1289              	.LVL146:
 1290              	.L114:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1291              		.loc 1 601 0
 1292 0008 281C     		mov	r0, r5
 1293 000a 211C     		mov	r1, r4
 1294 000c FFF7FEFF 		bl	CapSense_GetBitValue
 1295              	.LVL147:
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 1296              		.loc 1 603 0
 1297 0010 0028     		cmp	r0, #0
 1298 0012 02D0     		beq	.L113
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 1299              		.loc 1 605 0
 1300 0014 201C     		mov	r0, r4
 1301              	.LVL148:
 1302 0016 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1303              	.LVL149:
 1304              	.L113:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1305              		.loc 1 599 0
 1306 001a 0134     		add	r4, r4, #1
 1307              	.LVL150:
 1308              	.L112:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1309              		.loc 1 599 0 is_stmt 0 discriminator 1
 1310 001c 012C     		cmp	r4, #1
 1311 001e F3D9     		bls	.L114
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1312              		.loc 1 608 0 is_stmt 1
 1313              		@ sp needed
 1314              	.LVL151:
 1315 0020 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 69


 1316              	.L116:
 1317 0022 C046     		.align	2
 1318              	.L115:
 1319 0024 00000000 		.word	CapSense_sensorEnableMask
 1320              		.cfi_endproc
 1321              	.LFE41:
 1322              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1323              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1324              		.align	2
 1325              		.global	CapSense_UpdateWidgetBaseline
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	CapSense_UpdateWidgetBaseline, %function
 1329              	CapSense_UpdateWidgetBaseline:
 1330              	.LFB42:
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1331              		.loc 1 640 0
 1332              		.cfi_startproc
 1333              	.LVL152:
 1334 0000 70B5     		push	{r4, r5, r6, lr}
 1335              		.cfi_def_cfa_offset 16
 1336              		.cfi_offset 4, -16
 1337              		.cfi_offset 5, -12
 1338              		.cfi_offset 6, -8
 1339              		.cfi_offset 14, -4
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 1340              		.loc 1 648 0
 1341 0002 0A4B     		ldr	r3, .L121
 1342 0004 1A18     		add	r2, r3, r0
 1343 0006 1579     		ldrb	r5, [r2, #4]
 1344              	.LVL153:
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 1345              		.loc 1 651 0
 1346 0008 1C5C     		ldrb	r4, [r3, r0]
 1347              	.LVL154:
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 1348              		.loc 1 654 0
 1349 000a 2D19     		add	r5, r5, r4
 1350              	.LVL155:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1351              		.loc 1 658 0
 1352 000c 084E     		ldr	r6, .L121+4
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1353              		.loc 1 656 0
 1354 000e 09E0     		b	.L118
 1355              	.LVL156:
 1356              	.L120:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 1357              		.loc 1 658 0
 1358 0010 301C     		mov	r0, r6
 1359 0012 211C     		mov	r1, r4
 1360 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 1361              	.LVL157:
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 1362              		.loc 1 660 0
 1363 0018 0028     		cmp	r0, #0
 1364 001a 02D0     		beq	.L119
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 70


 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 1365              		.loc 1 662 0
 1366 001c 201C     		mov	r0, r4
 1367              	.LVL158:
 1368 001e FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1369              	.LVL159:
 1370              	.L119:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1371              		.loc 1 656 0
 1372 0022 0134     		add	r4, r4, #1
 1373              	.LVL160:
 1374              	.L118:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 1375              		.loc 1 656 0 is_stmt 0 discriminator 1
 1376 0024 AC42     		cmp	r4, r5
 1377 0026 F3D3     		bcc	.L120
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1378              		.loc 1 665 0 is_stmt 1
 1379              		@ sp needed
 1380              	.LVL161:
 1381              	.LVL162:
 1382 0028 70BD     		pop	{r4, r5, r6, pc}
 1383              	.L122:
 1384 002a C046     		.align	2
 1385              	.L121:
 1386 002c 00000000 		.word	.LANCHOR2
 1387 0030 00000000 		.word	CapSense_sensorEnableMask
 1388              		.cfi_endproc
 1389              	.LFE42:
 1390              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1391              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1392              		.align	2
 1393              		.global	CapSense_GetWidgetNumber
 1394              		.code	16
 1395              		.thumb_func
 1396              		.type	CapSense_GetWidgetNumber, %function
 1397              	CapSense_GetWidgetNumber:
 1398              	.LFB64:
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 71


2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 72


2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 73


2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 74


2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1399              		.loc 1 2723 0
 1400              		.cfi_startproc
 1401              	.LVL163:
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1402              		.loc 1 2724 0
 1403 0000 014B     		ldr	r3, .L124
 1404 0002 185C     		ldrb	r0, [r3, r0]
 1405              	.LVL164:
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1406              		.loc 1 2725 0
 1407              		@ sp needed
 1408 0004 7047     		bx	lr
 1409              	.L125:
 1410 0006 C046     		.align	2
 1411              	.L124:
 1412 0008 00000000 		.word	CapSense_widgetNumber
 1413              		.cfi_endproc
 1414              	.LFE64:
 1415              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1416              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1417              		.align	2
 1418              		.global	CapSense_GetLowBaselineReset
 1419              		.code	16
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 75


 1420              		.thumb_func
 1421              		.type	CapSense_GetLowBaselineReset, %function
 1422              	CapSense_GetLowBaselineReset:
 1423              	.LFB65:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1424              		.loc 1 2749 0
 1425              		.cfi_startproc
 1426              	.LVL165:
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1427              		.loc 1 2750 0
 1428 0000 014B     		ldr	r3, .L127
 1429 0002 1818     		add	r0, r3, r0
 1430              	.LVL166:
 1431 0004 0079     		ldrb	r0, [r0, #4]
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1432              		.loc 1 2751 0
 1433              		@ sp needed
 1434 0006 7047     		bx	lr
 1435              	.L128:
 1436              		.align	2
 1437              	.L127:
 1438 0008 00000000 		.word	.LANCHOR1
 1439              		.cfi_endproc
 1440              	.LFE65:
 1441              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1442              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1443              		.align	2
 1444              		.global	CapSense_GetDebounce
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CapSense_GetDebounce, %function
 1448              	CapSense_GetDebounce:
 1449              	.LFB66:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 76


2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1450              		.loc 1 2775 0
 1451              		.cfi_startproc
 1452              	.LVL167:
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 1453              		.loc 1 2776 0
 1454 0000 014B     		ldr	r3, .L130
 1455 0002 185C     		ldrb	r0, [r3, r0]
 1456              	.LVL168:
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1457              		.loc 1 2777 0
 1458              		@ sp needed
 1459 0004 7047     		bx	lr
 1460              	.L131:
 1461 0006 C046     		.align	2
 1462              	.L130:
 1463 0008 00000000 		.word	.LANCHOR1
 1464              		.cfi_endproc
 1465              	.LFE66:
 1466              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1467              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1468              		.align	2
 1469              		.global	CapSense_EnableRawDataFilters
 1470              		.code	16
 1471              		.thumb_func
 1472              		.type	CapSense_EnableRawDataFilters, %function
 1473              	CapSense_EnableRawDataFilters:
 1474              	.LFB67:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 77


2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1475              		.loc 1 2801 0
 1476              		.cfi_startproc
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1477              		.loc 1 2802 0
 1478 0000 0122     		mov	r2, #1
 1479 0002 014B     		ldr	r3, .L133
 1480 0004 9A71     		strb	r2, [r3, #6]
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1481              		.loc 1 2803 0
 1482              		@ sp needed
 1483 0006 7047     		bx	lr
 1484              	.L134:
 1485              		.align	2
 1486              	.L133:
 1487 0008 00000000 		.word	.LANCHOR1
 1488              		.cfi_endproc
 1489              	.LFE67:
 1490              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1491              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1492              		.align	2
 1493              		.global	CapSense_DisableRawDataFilters
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	CapSense_DisableRawDataFilters, %function
 1497              	CapSense_DisableRawDataFilters:
 1498              	.LFB68:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 78


2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1499              		.loc 1 2826 0
 1500              		.cfi_startproc
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1501              		.loc 1 2827 0
 1502 0000 0022     		mov	r2, #0
 1503 0002 014B     		ldr	r3, .L136
 1504 0004 9A71     		strb	r2, [r3, #6]
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1505              		.loc 1 2828 0
 1506              		@ sp needed
 1507 0006 7047     		bx	lr
 1508              	.L137:
 1509              		.align	2
 1510              	.L136:
 1511 0008 00000000 		.word	.LANCHOR1
 1512              		.cfi_endproc
 1513              	.LFE68:
 1514              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1515              		.global	CapSense_numberOfSensors
 1516              		.global	CapSense_rawDataIndex
 1517              		.global	CapSense_debounce
 1518              		.comm	CapSense_hysteresis,2,4
 1519              		.comm	CapSense_negativeNoiseThreshold,2,4
 1520              		.comm	CapSense_noiseThreshold,2,4
 1521              		.comm	CapSense_fingerThreshold,2,4
 1522              		.global	CapSense_enableRawFilters
 1523              		.global	CapSense_lowBaselineReset
 1524              		.comm	CapSense_lowBaselineResetCnt,2,4
 1525              		.global	CapSense_sensorOnMask
 1526              		.global	CapSense_sensorSignal
 1527              		.global	CapSense_sensorBaselineLow
 1528              		.global	CapSense_sensorBaseline
 1529              		.comm	CapSense_rawFilterData1,4,4
 1530              		.section	.rodata
 1531              		.align	2
 1532              		.set	.LANCHOR2,. + 0
 1533              		.type	CapSense_rawDataIndex, %object
 1534              		.size	CapSense_rawDataIndex, 2
 1535              	CapSense_rawDataIndex:
 1536 0000 00       		.byte	0
 1537 0001 01       		.byte	1
 1538 0002 0000     		.space	2
 1539              		.type	CapSense_numberOfSensors, %object
 1540              		.size	CapSense_numberOfSensors, 2
 1541              	CapSense_numberOfSensors:
 1542 0004 01       		.byte	1
 1543 0005 01       		.byte	1
 1544 0006 0000     		.data
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 79


 1545              		.align	2
 1546              		.set	.LANCHOR1,. + 0
 1547              		.type	CapSense_debounce, %object
 1548              		.size	CapSense_debounce, 2
 1549              	CapSense_debounce:
 1550 0000 05       		.byte	5
 1551 0001 05       		.byte	5
 1552 0002 0000     		.space	2
 1553              		.type	CapSense_lowBaselineReset, %object
 1554              		.size	CapSense_lowBaselineReset, 2
 1555              	CapSense_lowBaselineReset:
 1556 0004 1E       		.byte	30
 1557 0005 1E       		.byte	30
 1558              		.type	CapSense_enableRawFilters, %object
 1559              		.size	CapSense_enableRawFilters, 1
 1560              	CapSense_enableRawFilters:
 1561 0006 01       		.byte	1
 1562 0007 00       		.bss
 1563              		.align	2
 1564              		.set	.LANCHOR0,. + 0
 1565              		.type	CapSense_sensorBaseline, %object
 1566              		.size	CapSense_sensorBaseline, 4
 1567              	CapSense_sensorBaseline:
 1568 0000 00000000 		.space	4
 1569              		.type	CapSense_sensorBaselineLow, %object
 1570              		.size	CapSense_sensorBaselineLow, 2
 1571              	CapSense_sensorBaselineLow:
 1572 0004 0000     		.space	2
 1573 0006 0000     		.space	2
 1574              		.type	CapSense_sensorSignal, %object
 1575              		.size	CapSense_sensorSignal, 2
 1576              	CapSense_sensorSignal:
 1577 0008 0000     		.space	2
 1578 000a 0000     		.space	2
 1579              		.type	CapSense_debounceCounter, %object
 1580              		.size	CapSense_debounceCounter, 3
 1581              	CapSense_debounceCounter:
 1582 000c 000000   		.space	3
 1583 000f 00       		.space	1
 1584              		.type	CapSense_sensorOnMask, %object
 1585              		.size	CapSense_sensorOnMask, 1
 1586              	CapSense_sensorOnMask:
 1587 0010 00       		.space	1
 1588 0011 000000   		.text
 1589              	.Letext0:
 1590              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1591              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1592              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1593              		.section	.debug_info,"",%progbits
 1594              	.Ldebug_info0:
 1595 0000 C60D0000 		.4byte	0xdc6
 1596 0004 0400     		.2byte	0x4
 1597 0006 00000000 		.4byte	.Ldebug_abbrev0
 1598 000a 04       		.byte	0x4
 1599 000b 01       		.uleb128 0x1
 1600 000c F7000000 		.4byte	.LASF115
 1601 0010 01       		.byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 80


 1602 0011 02050000 		.4byte	.LASF116
 1603 0015 3D040000 		.4byte	.LASF117
 1604 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1605 001d 00000000 		.4byte	0
 1606 0021 00000000 		.4byte	.Ldebug_line0
 1607 0025 02       		.uleb128 0x2
 1608 0026 01       		.byte	0x1
 1609 0027 06       		.byte	0x6
 1610 0028 0D020000 		.4byte	.LASF0
 1611 002c 02       		.uleb128 0x2
 1612 002d 01       		.byte	0x1
 1613 002e 08       		.byte	0x8
 1614 002f CF060000 		.4byte	.LASF1
 1615 0033 02       		.uleb128 0x2
 1616 0034 02       		.byte	0x2
 1617 0035 05       		.byte	0x5
 1618 0036 36070000 		.4byte	.LASF2
 1619 003a 02       		.uleb128 0x2
 1620 003b 02       		.byte	0x2
 1621 003c 07       		.byte	0x7
 1622 003d 1B040000 		.4byte	.LASF3
 1623 0041 02       		.uleb128 0x2
 1624 0042 04       		.byte	0x4
 1625 0043 05       		.byte	0x5
 1626 0044 79020000 		.4byte	.LASF4
 1627 0048 02       		.uleb128 0x2
 1628 0049 04       		.byte	0x4
 1629 004a 07       		.byte	0x7
 1630 004b B9030000 		.4byte	.LASF5
 1631 004f 02       		.uleb128 0x2
 1632 0050 08       		.byte	0x8
 1633 0051 05       		.byte	0x5
 1634 0052 FF010000 		.4byte	.LASF6
 1635 0056 02       		.uleb128 0x2
 1636 0057 08       		.byte	0x8
 1637 0058 07       		.byte	0x7
 1638 0059 73010000 		.4byte	.LASF7
 1639 005d 03       		.uleb128 0x3
 1640 005e 04       		.byte	0x4
 1641 005f 05       		.byte	0x5
 1642 0060 696E7400 		.ascii	"int\000"
 1643 0064 02       		.uleb128 0x2
 1644 0065 04       		.byte	0x4
 1645 0066 07       		.byte	0x7
 1646 0067 AC030000 		.4byte	.LASF8
 1647 006b 04       		.uleb128 0x4
 1648 006c A2020000 		.4byte	.LASF9
 1649 0070 02       		.byte	0x2
 1650 0071 B3       		.byte	0xb3
 1651 0072 2C000000 		.4byte	0x2c
 1652 0076 04       		.uleb128 0x4
 1653 0077 00000000 		.4byte	.LASF10
 1654 007b 02       		.byte	0x2
 1655 007c B4       		.byte	0xb4
 1656 007d 3A000000 		.4byte	0x3a
 1657 0081 04       		.uleb128 0x4
 1658 0082 FE020000 		.4byte	.LASF11
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 81


 1659 0086 02       		.byte	0x2
 1660 0087 B5       		.byte	0xb5
 1661 0088 48000000 		.4byte	0x48
 1662 008c 02       		.uleb128 0x2
 1663 008d 04       		.byte	0x4
 1664 008e 04       		.byte	0x4
 1665 008f 8F060000 		.4byte	.LASF12
 1666 0093 02       		.uleb128 0x2
 1667 0094 08       		.byte	0x8
 1668 0095 04       		.byte	0x4
 1669 0096 E1020000 		.4byte	.LASF13
 1670 009a 02       		.uleb128 0x2
 1671 009b 01       		.byte	0x1
 1672 009c 08       		.byte	0x8
 1673 009d 06080000 		.4byte	.LASF14
 1674 00a1 02       		.uleb128 0x2
 1675 00a2 04       		.byte	0x4
 1676 00a3 07       		.byte	0x7
 1677 00a4 65050000 		.4byte	.LASF15
 1678 00a8 05       		.uleb128 0x5
 1679 00a9 38       		.byte	0x38
 1680 00aa 03       		.byte	0x3
 1681 00ab 2F       		.byte	0x2f
 1682 00ac 59010000 		.4byte	0x159
 1683 00b0 06       		.uleb128 0x6
 1684 00b1 03060000 		.4byte	.LASF16
 1685 00b5 03       		.byte	0x3
 1686 00b6 31       		.byte	0x31
 1687 00b7 59010000 		.4byte	0x159
 1688 00bb 00       		.byte	0
 1689 00bc 06       		.uleb128 0x6
 1690 00bd 12060000 		.4byte	.LASF17
 1691 00c1 03       		.byte	0x3
 1692 00c2 32       		.byte	0x32
 1693 00c3 59010000 		.4byte	0x159
 1694 00c7 04       		.byte	0x4
 1695 00c8 06       		.uleb128 0x6
 1696 00c9 2E040000 		.4byte	.LASF18
 1697 00cd 03       		.byte	0x3
 1698 00ce 33       		.byte	0x33
 1699 00cf 59010000 		.4byte	0x159
 1700 00d3 08       		.byte	0x8
 1701 00d4 06       		.uleb128 0x6
 1702 00d5 E5040000 		.4byte	.LASF19
 1703 00d9 03       		.byte	0x3
 1704 00da 34       		.byte	0x34
 1705 00db 59010000 		.4byte	0x159
 1706 00df 0C       		.byte	0xc
 1707 00e0 06       		.uleb128 0x6
 1708 00e1 47070000 		.4byte	.LASF20
 1709 00e5 03       		.byte	0x3
 1710 00e6 35       		.byte	0x35
 1711 00e7 59010000 		.4byte	0x159
 1712 00eb 10       		.byte	0x10
 1713 00ec 06       		.uleb128 0x6
 1714 00ed 49020000 		.4byte	.LASF21
 1715 00f1 03       		.byte	0x3
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 82


 1716 00f2 36       		.byte	0x36
 1717 00f3 5F010000 		.4byte	0x15f
 1718 00f7 14       		.byte	0x14
 1719 00f8 06       		.uleb128 0x6
 1720 00f9 E6030000 		.4byte	.LASF22
 1721 00fd 03       		.byte	0x3
 1722 00fe 37       		.byte	0x37
 1723 00ff 6A010000 		.4byte	0x16a
 1724 0103 18       		.byte	0x18
 1725 0104 06       		.uleb128 0x6
 1726 0105 AC090000 		.4byte	.LASF23
 1727 0109 03       		.byte	0x3
 1728 010a 38       		.byte	0x38
 1729 010b 5F010000 		.4byte	0x15f
 1730 010f 1C       		.byte	0x1c
 1731 0110 06       		.uleb128 0x6
 1732 0111 39020000 		.4byte	.LASF24
 1733 0115 03       		.byte	0x3
 1734 0116 39       		.byte	0x39
 1735 0117 5F010000 		.4byte	0x15f
 1736 011b 20       		.byte	0x20
 1737 011c 06       		.uleb128 0x6
 1738 011d C2000000 		.4byte	.LASF25
 1739 0121 03       		.byte	0x3
 1740 0122 3A       		.byte	0x3a
 1741 0123 7F010000 		.4byte	0x17f
 1742 0127 24       		.byte	0x24
 1743 0128 06       		.uleb128 0x6
 1744 0129 78080000 		.4byte	.LASF26
 1745 012d 03       		.byte	0x3
 1746 012e 3B       		.byte	0x3b
 1747 012f 90010000 		.4byte	0x190
 1748 0133 28       		.byte	0x28
 1749 0134 06       		.uleb128 0x6
 1750 0135 FD060000 		.4byte	.LASF27
 1751 0139 03       		.byte	0x3
 1752 013a 3C       		.byte	0x3c
 1753 013b 7F010000 		.4byte	0x17f
 1754 013f 2C       		.byte	0x2c
 1755 0140 06       		.uleb128 0x6
 1756 0141 F5030000 		.4byte	.LASF28
 1757 0145 03       		.byte	0x3
 1758 0146 3D       		.byte	0x3d
 1759 0147 AA010000 		.4byte	0x1aa
 1760 014b 30       		.byte	0x30
 1761 014c 06       		.uleb128 0x6
 1762 014d 1C090000 		.4byte	.LASF29
 1763 0151 03       		.byte	0x3
 1764 0152 3E       		.byte	0x3e
 1765 0153 C5010000 		.4byte	0x1c5
 1766 0157 34       		.byte	0x34
 1767 0158 00       		.byte	0
 1768 0159 07       		.uleb128 0x7
 1769 015a 04       		.byte	0x4
 1770 015b 6B000000 		.4byte	0x6b
 1771 015f 07       		.uleb128 0x7
 1772 0160 04       		.byte	0x4
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 83


 1773 0161 65010000 		.4byte	0x165
 1774 0165 08       		.uleb128 0x8
 1775 0166 6B000000 		.4byte	0x6b
 1776 016a 07       		.uleb128 0x7
 1777 016b 04       		.byte	0x4
 1778 016c 81000000 		.4byte	0x81
 1779 0170 09       		.uleb128 0x9
 1780 0171 76000000 		.4byte	0x76
 1781 0175 7F010000 		.4byte	0x17f
 1782 0179 0A       		.uleb128 0xa
 1783 017a 81000000 		.4byte	0x81
 1784 017e 00       		.byte	0
 1785 017f 07       		.uleb128 0x7
 1786 0180 04       		.byte	0x4
 1787 0181 70010000 		.4byte	0x170
 1788 0185 0B       		.uleb128 0xb
 1789 0186 90010000 		.4byte	0x190
 1790 018a 0A       		.uleb128 0xa
 1791 018b 81000000 		.4byte	0x81
 1792 018f 00       		.byte	0
 1793 0190 07       		.uleb128 0x7
 1794 0191 04       		.byte	0x4
 1795 0192 85010000 		.4byte	0x185
 1796 0196 09       		.uleb128 0x9
 1797 0197 81000000 		.4byte	0x81
 1798 019b AA010000 		.4byte	0x1aa
 1799 019f 0A       		.uleb128 0xa
 1800 01a0 5F010000 		.4byte	0x15f
 1801 01a4 0A       		.uleb128 0xa
 1802 01a5 81000000 		.4byte	0x81
 1803 01a9 00       		.byte	0
 1804 01aa 07       		.uleb128 0x7
 1805 01ab 04       		.byte	0x4
 1806 01ac 96010000 		.4byte	0x196
 1807 01b0 0B       		.uleb128 0xb
 1808 01b1 C5010000 		.4byte	0x1c5
 1809 01b5 0A       		.uleb128 0xa
 1810 01b6 59010000 		.4byte	0x159
 1811 01ba 0A       		.uleb128 0xa
 1812 01bb 81000000 		.4byte	0x81
 1813 01bf 0A       		.uleb128 0xa
 1814 01c0 81000000 		.4byte	0x81
 1815 01c4 00       		.byte	0
 1816 01c5 07       		.uleb128 0x7
 1817 01c6 04       		.byte	0x4
 1818 01c7 B0010000 		.4byte	0x1b0
 1819 01cb 04       		.uleb128 0x4
 1820 01cc 83080000 		.4byte	.LASF30
 1821 01d0 03       		.byte	0x3
 1822 01d1 3F       		.byte	0x3f
 1823 01d2 A8000000 		.4byte	0xa8
 1824 01d6 05       		.uleb128 0x5
 1825 01d7 0C       		.byte	0xc
 1826 01d8 03       		.byte	0x3
 1827 01d9 41       		.byte	0x41
 1828 01da 27020000 		.4byte	0x227
 1829 01de 06       		.uleb128 0x6
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 84


 1830 01df DD080000 		.4byte	.LASF31
 1831 01e3 03       		.byte	0x3
 1832 01e4 43       		.byte	0x43
 1833 01e5 6B000000 		.4byte	0x6b
 1834 01e9 00       		.byte	0
 1835 01ea 06       		.uleb128 0x6
 1836 01eb DF090000 		.4byte	.LASF32
 1837 01ef 03       		.byte	0x3
 1838 01f0 44       		.byte	0x44
 1839 01f1 6B000000 		.4byte	0x6b
 1840 01f5 01       		.byte	0x1
 1841 01f6 06       		.uleb128 0x6
 1842 01f7 51030000 		.4byte	.LASF33
 1843 01fb 03       		.byte	0x3
 1844 01fc 45       		.byte	0x45
 1845 01fd 6B000000 		.4byte	0x6b
 1846 0201 02       		.byte	0x2
 1847 0202 06       		.uleb128 0x6
 1848 0203 41030000 		.4byte	.LASF34
 1849 0207 03       		.byte	0x3
 1850 0208 46       		.byte	0x46
 1851 0209 76000000 		.4byte	0x76
 1852 020d 04       		.byte	0x4
 1853 020e 06       		.uleb128 0x6
 1854 020f 57050000 		.4byte	.LASF35
 1855 0213 03       		.byte	0x3
 1856 0214 47       		.byte	0x47
 1857 0215 76000000 		.4byte	0x76
 1858 0219 06       		.byte	0x6
 1859 021a 06       		.uleb128 0x6
 1860 021b 45050000 		.4byte	.LASF36
 1861 021f 03       		.byte	0x3
 1862 0220 48       		.byte	0x48
 1863 0221 27020000 		.4byte	0x227
 1864 0225 08       		.byte	0x8
 1865 0226 00       		.byte	0
 1866 0227 07       		.uleb128 0x7
 1867 0228 04       		.byte	0x4
 1868 0229 2D020000 		.4byte	0x22d
 1869 022d 08       		.uleb128 0x8
 1870 022e CB010000 		.4byte	0x1cb
 1871 0232 04       		.uleb128 0x4
 1872 0233 73070000 		.4byte	.LASF37
 1873 0237 03       		.byte	0x3
 1874 0238 49       		.byte	0x49
 1875 0239 D6010000 		.4byte	0x1d6
 1876 023d 0C       		.uleb128 0xc
 1877 023e 61070000 		.4byte	.LASF38
 1878 0242 01       		.byte	0x1
 1879 0243 88       		.byte	0x88
 1880 0244 00000000 		.4byte	.LFB35
 1881 0248 3C000000 		.4byte	.LFE35-.LFB35
 1882 024c 01       		.uleb128 0x1
 1883 024d 9C       		.byte	0x9c
 1884 024e 71020000 		.4byte	0x271
 1885 0252 0D       		.uleb128 0xd
 1886 0253 AA080000 		.4byte	.LASF40
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 85


 1887 0257 01       		.byte	0x1
 1888 0258 88       		.byte	0x88
 1889 0259 81000000 		.4byte	0x81
 1890 025d 00000000 		.4byte	.LLST0
 1891 0261 0E       		.uleb128 0xe
 1892 0262 40070000 		.4byte	.LASF42
 1893 0266 01       		.byte	0x1
 1894 0267 8C       		.byte	0x8c
 1895 0268 6B000000 		.4byte	0x6b
 1896 026c 21000000 		.4byte	.LLST1
 1897 0270 00       		.byte	0
 1898 0271 0C       		.uleb128 0xc
 1899 0272 A7050000 		.4byte	.LASF39
 1900 0276 01       		.byte	0x1
 1901 0277 D4       		.byte	0xd4
 1902 0278 00000000 		.4byte	.LFB36
 1903 027c 18000000 		.4byte	.LFE36-.LFB36
 1904 0280 01       		.uleb128 0x1
 1905 0281 9C       		.byte	0x9c
 1906 0282 C3020000 		.4byte	0x2c3
 1907 0286 0D       		.uleb128 0xd
 1908 0287 AA080000 		.4byte	.LASF40
 1909 028b 01       		.byte	0x1
 1910 028c D4       		.byte	0xd4
 1911 028d 81000000 		.4byte	0x81
 1912 0291 5C000000 		.4byte	.LLST2
 1913 0295 0F       		.uleb128 0xf
 1914 0296 08000000 		.4byte	.LVL6
 1915 029a 380D0000 		.4byte	0xd38
 1916 029e A9020000 		.4byte	0x2a9
 1917 02a2 10       		.uleb128 0x10
 1918 02a3 01       		.uleb128 0x1
 1919 02a4 50       		.byte	0x50
 1920 02a5 02       		.uleb128 0x2
 1921 02a6 74       		.byte	0x74
 1922 02a7 00       		.sleb128 0
 1923 02a8 00       		.byte	0
 1924 02a9 11       		.uleb128 0x11
 1925 02aa 0C000000 		.4byte	.LVL7
 1926 02ae 490D0000 		.4byte	0xd49
 1927 02b2 12       		.uleb128 0x12
 1928 02b3 16000000 		.4byte	.LVL8
 1929 02b7 3D020000 		.4byte	0x23d
 1930 02bb 10       		.uleb128 0x10
 1931 02bc 01       		.uleb128 0x1
 1932 02bd 50       		.byte	0x50
 1933 02be 02       		.uleb128 0x2
 1934 02bf 74       		.byte	0x74
 1935 02c0 00       		.sleb128 0
 1936 02c1 00       		.byte	0
 1937 02c2 00       		.byte	0
 1938 02c3 0C       		.uleb128 0xc
 1939 02c4 DD060000 		.4byte	.LASF41
 1940 02c8 01       		.byte	0x1
 1941 02c9 F9       		.byte	0xf9
 1942 02ca 00000000 		.4byte	.LFB37
 1943 02ce 14000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 86


 1944 02d2 01       		.uleb128 0x1
 1945 02d3 9C       		.byte	0x9c
 1946 02d4 F6020000 		.4byte	0x2f6
 1947 02d8 13       		.uleb128 0x13
 1948 02d9 6900     		.ascii	"i\000"
 1949 02db 01       		.byte	0x1
 1950 02dc FB       		.byte	0xfb
 1951 02dd 81000000 		.4byte	0x81
 1952 02e1 88000000 		.4byte	.LLST3
 1953 02e5 12       		.uleb128 0x12
 1954 02e6 0C000000 		.4byte	.LVL12
 1955 02ea 71020000 		.4byte	0x271
 1956 02ee 10       		.uleb128 0x10
 1957 02ef 01       		.uleb128 0x1
 1958 02f0 50       		.byte	0x50
 1959 02f1 02       		.uleb128 0x2
 1960 02f2 74       		.byte	0x74
 1961 02f3 00       		.sleb128 0
 1962 02f4 00       		.byte	0
 1963 02f5 00       		.byte	0
 1964 02f6 14       		.uleb128 0x14
 1965 02f7 BB010000 		.4byte	.LASF43
 1966 02fb 01       		.byte	0x1
 1967 02fc 1C01     		.2byte	0x11c
 1968 02fe 00000000 		.4byte	.LFB38
 1969 0302 34000000 		.4byte	.LFE38-.LFB38
 1970 0306 01       		.uleb128 0x1
 1971 0307 9C       		.byte	0x9c
 1972 0308 67030000 		.4byte	0x367
 1973 030c 15       		.uleb128 0x15
 1974 030d 6900     		.ascii	"i\000"
 1975 030f 01       		.byte	0x1
 1976 0310 1E01     		.2byte	0x11e
 1977 0312 81000000 		.4byte	0x81
 1978 0316 A7000000 		.4byte	.LLST4
 1979 031a 16       		.uleb128 0x16
 1980 031b 51070000 		.4byte	.LASF44
 1981 031f 01       		.byte	0x1
 1982 0320 1F01     		.2byte	0x11f
 1983 0322 81000000 		.4byte	0x81
 1984 0326 BA000000 		.4byte	.LLST5
 1985 032a 11       		.uleb128 0x11
 1986 032b 06000000 		.4byte	.LVL15
 1987 032f 540D0000 		.4byte	0xd54
 1988 0333 11       		.uleb128 0x11
 1989 0334 0A000000 		.4byte	.LVL16
 1990 0338 490D0000 		.4byte	0xd49
 1991 033c 0F       		.uleb128 0xf
 1992 033d 1C000000 		.4byte	.LVL18
 1993 0341 5B0D0000 		.4byte	0xd5b
 1994 0345 56030000 		.4byte	0x356
 1995 0349 10       		.uleb128 0x10
 1996 034a 01       		.uleb128 0x1
 1997 034b 51       		.byte	0x51
 1998 034c 02       		.uleb128 0x2
 1999 034d 74       		.byte	0x74
 2000 034e 00       		.sleb128 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 87


 2001 034f 10       		.uleb128 0x10
 2002 0350 01       		.uleb128 0x1
 2003 0351 50       		.byte	0x50
 2004 0352 02       		.uleb128 0x2
 2005 0353 75       		.byte	0x75
 2006 0354 00       		.sleb128 0
 2007 0355 00       		.byte	0
 2008 0356 12       		.uleb128 0x12
 2009 0357 26000000 		.4byte	.LVL20
 2010 035b 3D020000 		.4byte	0x23d
 2011 035f 10       		.uleb128 0x10
 2012 0360 01       		.uleb128 0x1
 2013 0361 50       		.byte	0x50
 2014 0362 02       		.uleb128 0x2
 2015 0363 74       		.byte	0x74
 2016 0364 00       		.sleb128 0
 2017 0365 00       		.byte	0
 2018 0366 00       		.byte	0
 2019 0367 17       		.uleb128 0x17
 2020 0368 5A020000 		.4byte	.LASF47
 2021 036c 01       		.byte	0x1
 2022 036d B002     		.2byte	0x2b0
 2023 036f 76000000 		.4byte	0x76
 2024 0373 00000000 		.4byte	.LFB43
 2025 0377 0C000000 		.4byte	.LFE43-.LFB43
 2026 037b 01       		.uleb128 0x1
 2027 037c 9C       		.byte	0x9c
 2028 037d 92030000 		.4byte	0x392
 2029 0381 18       		.uleb128 0x18
 2030 0382 AA080000 		.4byte	.LASF40
 2031 0386 01       		.byte	0x1
 2032 0387 B002     		.2byte	0x2b0
 2033 0389 81000000 		.4byte	0x81
 2034 038d CD000000 		.4byte	.LLST6
 2035 0391 00       		.byte	0
 2036 0392 14       		.uleb128 0x14
 2037 0393 0E070000 		.4byte	.LASF45
 2038 0397 01       		.byte	0x1
 2039 0398 CB02     		.2byte	0x2cb
 2040 039a 00000000 		.4byte	.LFB44
 2041 039e 0C000000 		.4byte	.LFE44-.LFB44
 2042 03a2 01       		.uleb128 0x1
 2043 03a3 9C       		.byte	0x9c
 2044 03a4 C7030000 		.4byte	0x3c7
 2045 03a8 18       		.uleb128 0x18
 2046 03a9 AA080000 		.4byte	.LASF40
 2047 03ad 01       		.byte	0x1
 2048 03ae CB02     		.2byte	0x2cb
 2049 03b0 81000000 		.4byte	0x81
 2050 03b4 EE000000 		.4byte	.LLST7
 2051 03b8 19       		.uleb128 0x19
 2052 03b9 16040000 		.4byte	.LASF46
 2053 03bd 01       		.byte	0x1
 2054 03be CB02     		.2byte	0x2cb
 2055 03c0 76000000 		.4byte	0x76
 2056 03c4 01       		.uleb128 0x1
 2057 03c5 51       		.byte	0x51
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 88


 2058 03c6 00       		.byte	0
 2059 03c7 17       		.uleb128 0x17
 2060 03c8 2B050000 		.4byte	.LASF48
 2061 03cc 01       		.byte	0x1
 2062 03cd E602     		.2byte	0x2e6
 2063 03cf 6B000000 		.4byte	0x6b
 2064 03d3 00000000 		.4byte	.LFB45
 2065 03d7 0C000000 		.4byte	.LFE45-.LFB45
 2066 03db 01       		.uleb128 0x1
 2067 03dc 9C       		.byte	0x9c
 2068 03dd F2030000 		.4byte	0x3f2
 2069 03e1 18       		.uleb128 0x18
 2070 03e2 AA080000 		.4byte	.LASF40
 2071 03e6 01       		.byte	0x1
 2072 03e7 E602     		.2byte	0x2e6
 2073 03e9 81000000 		.4byte	0x81
 2074 03ed 0F010000 		.4byte	.LLST8
 2075 03f1 00       		.byte	0
 2076 03f2 14       		.uleb128 0x14
 2077 03f3 02090000 		.4byte	.LASF49
 2078 03f7 01       		.byte	0x1
 2079 03f8 0103     		.2byte	0x301
 2080 03fa 00000000 		.4byte	.LFB46
 2081 03fe 0C000000 		.4byte	.LFE46-.LFB46
 2082 0402 01       		.uleb128 0x1
 2083 0403 9C       		.byte	0x9c
 2084 0404 27040000 		.4byte	0x427
 2085 0408 18       		.uleb128 0x18
 2086 0409 AA080000 		.4byte	.LASF40
 2087 040d 01       		.byte	0x1
 2088 040e 0103     		.2byte	0x301
 2089 0410 81000000 		.4byte	0x81
 2090 0414 30010000 		.4byte	.LLST9
 2091 0418 19       		.uleb128 0x19
 2092 0419 61030000 		.4byte	.LASF50
 2093 041d 01       		.byte	0x1
 2094 041e 0103     		.2byte	0x301
 2095 0420 6B000000 		.4byte	0x6b
 2096 0424 01       		.uleb128 0x1
 2097 0425 51       		.byte	0x51
 2098 0426 00       		.byte	0
 2099 0427 17       		.uleb128 0x17
 2100 0428 5C080000 		.4byte	.LASF51
 2101 042c 01       		.byte	0x1
 2102 042d 1C03     		.2byte	0x31c
 2103 042f 6B000000 		.4byte	0x6b
 2104 0433 00000000 		.4byte	.LFB47
 2105 0437 0C000000 		.4byte	.LFE47-.LFB47
 2106 043b 01       		.uleb128 0x1
 2107 043c 9C       		.byte	0x9c
 2108 043d 52040000 		.4byte	0x452
 2109 0441 18       		.uleb128 0x18
 2110 0442 40070000 		.4byte	.LASF42
 2111 0446 01       		.byte	0x1
 2112 0447 1C03     		.2byte	0x31c
 2113 0449 81000000 		.4byte	0x81
 2114 044d 51010000 		.4byte	.LLST10
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 89


 2115 0451 00       		.byte	0
 2116 0452 17       		.uleb128 0x17
 2117 0453 A0010000 		.4byte	.LASF52
 2118 0457 01       		.byte	0x1
 2119 0458 3703     		.2byte	0x337
 2120 045a 6B000000 		.4byte	0x6b
 2121 045e 00000000 		.4byte	.LFB48
 2122 0462 0C000000 		.4byte	.LFE48-.LFB48
 2123 0466 01       		.uleb128 0x1
 2124 0467 9C       		.byte	0x9c
 2125 0468 7D040000 		.4byte	0x47d
 2126 046c 18       		.uleb128 0x18
 2127 046d 40070000 		.4byte	.LASF42
 2128 0471 01       		.byte	0x1
 2129 0472 3703     		.2byte	0x337
 2130 0474 81000000 		.4byte	0x81
 2131 0478 72010000 		.4byte	.LLST11
 2132 047c 00       		.byte	0
 2133 047d 17       		.uleb128 0x17
 2134 047e 25080000 		.4byte	.LASF53
 2135 0482 01       		.byte	0x1
 2136 0483 5303     		.2byte	0x353
 2137 0485 6B000000 		.4byte	0x6b
 2138 0489 00000000 		.4byte	.LFB49
 2139 048d 0C000000 		.4byte	.LFE49-.LFB49
 2140 0491 01       		.uleb128 0x1
 2141 0492 9C       		.byte	0x9c
 2142 0493 A8040000 		.4byte	0x4a8
 2143 0497 18       		.uleb128 0x18
 2144 0498 40070000 		.4byte	.LASF42
 2145 049c 01       		.byte	0x1
 2146 049d 5303     		.2byte	0x353
 2147 049f 81000000 		.4byte	0x81
 2148 04a3 93010000 		.4byte	.LLST12
 2149 04a7 00       		.byte	0
 2150 04a8 17       		.uleb128 0x17
 2151 04a9 4E000000 		.4byte	.LASF54
 2152 04ad 01       		.byte	0x1
 2153 04ae 6F03     		.2byte	0x36f
 2154 04b0 6B000000 		.4byte	0x6b
 2155 04b4 00000000 		.4byte	.LFB50
 2156 04b8 0C000000 		.4byte	.LFE50-.LFB50
 2157 04bc 01       		.uleb128 0x1
 2158 04bd 9C       		.byte	0x9c
 2159 04be D3040000 		.4byte	0x4d3
 2160 04c2 18       		.uleb128 0x18
 2161 04c3 40070000 		.4byte	.LASF42
 2162 04c7 01       		.byte	0x1
 2163 04c8 6F03     		.2byte	0x36f
 2164 04ca 81000000 		.4byte	0x81
 2165 04ce B4010000 		.4byte	.LLST13
 2166 04d2 00       		.byte	0
 2167 04d3 14       		.uleb128 0x14
 2168 04d4 10030000 		.4byte	.LASF55
 2169 04d8 01       		.byte	0x1
 2170 04d9 9003     		.2byte	0x390
 2171 04db 00000000 		.4byte	.LFB51
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 90


 2172 04df 0C000000 		.4byte	.LFE51-.LFB51
 2173 04e3 01       		.uleb128 0x1
 2174 04e4 9C       		.byte	0x9c
 2175 04e5 06050000 		.4byte	0x506
 2176 04e9 19       		.uleb128 0x19
 2177 04ea 40070000 		.4byte	.LASF42
 2178 04ee 01       		.byte	0x1
 2179 04ef 9003     		.2byte	0x390
 2180 04f1 81000000 		.4byte	0x81
 2181 04f5 01       		.uleb128 0x1
 2182 04f6 50       		.byte	0x50
 2183 04f7 19       		.uleb128 0x19
 2184 04f8 61030000 		.4byte	.LASF50
 2185 04fc 01       		.byte	0x1
 2186 04fd 9003     		.2byte	0x390
 2187 04ff 6B000000 		.4byte	0x6b
 2188 0503 01       		.uleb128 0x1
 2189 0504 51       		.byte	0x51
 2190 0505 00       		.byte	0
 2191 0506 14       		.uleb128 0x14
 2192 0507 BF070000 		.4byte	.LASF56
 2193 050b 01       		.byte	0x1
 2194 050c AC03     		.2byte	0x3ac
 2195 050e 00000000 		.4byte	.LFB52
 2196 0512 0C000000 		.4byte	.LFE52-.LFB52
 2197 0516 01       		.uleb128 0x1
 2198 0517 9C       		.byte	0x9c
 2199 0518 39050000 		.4byte	0x539
 2200 051c 19       		.uleb128 0x19
 2201 051d 40070000 		.4byte	.LASF42
 2202 0521 01       		.byte	0x1
 2203 0522 AC03     		.2byte	0x3ac
 2204 0524 81000000 		.4byte	0x81
 2205 0528 01       		.uleb128 0x1
 2206 0529 50       		.byte	0x50
 2207 052a 19       		.uleb128 0x19
 2208 052b 61030000 		.4byte	.LASF50
 2209 052f 01       		.byte	0x1
 2210 0530 AC03     		.2byte	0x3ac
 2211 0532 6B000000 		.4byte	0x6b
 2212 0536 01       		.uleb128 0x1
 2213 0537 51       		.byte	0x51
 2214 0538 00       		.byte	0
 2215 0539 14       		.uleb128 0x14
 2216 053a C9050000 		.4byte	.LASF57
 2217 053e 01       		.byte	0x1
 2218 053f C803     		.2byte	0x3c8
 2219 0541 00000000 		.4byte	.LFB53
 2220 0545 0C000000 		.4byte	.LFE53-.LFB53
 2221 0549 01       		.uleb128 0x1
 2222 054a 9C       		.byte	0x9c
 2223 054b 6C050000 		.4byte	0x56c
 2224 054f 19       		.uleb128 0x19
 2225 0550 40070000 		.4byte	.LASF42
 2226 0554 01       		.byte	0x1
 2227 0555 C803     		.2byte	0x3c8
 2228 0557 81000000 		.4byte	0x81
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 91


 2229 055b 01       		.uleb128 0x1
 2230 055c 50       		.byte	0x50
 2231 055d 19       		.uleb128 0x19
 2232 055e 61030000 		.4byte	.LASF50
 2233 0562 01       		.byte	0x1
 2234 0563 C803     		.2byte	0x3c8
 2235 0565 6B000000 		.4byte	0x6b
 2236 0569 01       		.uleb128 0x1
 2237 056a 51       		.byte	0x51
 2238 056b 00       		.byte	0
 2239 056c 14       		.uleb128 0x14
 2240 056d 81000000 		.4byte	.LASF58
 2241 0571 01       		.byte	0x1
 2242 0572 E503     		.2byte	0x3e5
 2243 0574 00000000 		.4byte	.LFB54
 2244 0578 0C000000 		.4byte	.LFE54-.LFB54
 2245 057c 01       		.uleb128 0x1
 2246 057d 9C       		.byte	0x9c
 2247 057e 9F050000 		.4byte	0x59f
 2248 0582 19       		.uleb128 0x19
 2249 0583 40070000 		.4byte	.LASF42
 2250 0587 01       		.byte	0x1
 2251 0588 E503     		.2byte	0x3e5
 2252 058a 81000000 		.4byte	0x81
 2253 058e 01       		.uleb128 0x1
 2254 058f 50       		.byte	0x50
 2255 0590 19       		.uleb128 0x19
 2256 0591 61030000 		.4byte	.LASF50
 2257 0595 01       		.byte	0x1
 2258 0596 E503     		.2byte	0x3e5
 2259 0598 6B000000 		.4byte	0x6b
 2260 059c 01       		.uleb128 0x1
 2261 059d 51       		.byte	0x51
 2262 059e 00       		.byte	0
 2263 059f 14       		.uleb128 0x14
 2264 05a0 2C030000 		.4byte	.LASF59
 2265 05a4 01       		.byte	0x1
 2266 05a5 0104     		.2byte	0x401
 2267 05a7 00000000 		.4byte	.LFB55
 2268 05ab 0C000000 		.4byte	.LFE55-.LFB55
 2269 05af 01       		.uleb128 0x1
 2270 05b0 9C       		.byte	0x9c
 2271 05b1 D2050000 		.4byte	0x5d2
 2272 05b5 19       		.uleb128 0x19
 2273 05b6 40070000 		.4byte	.LASF42
 2274 05ba 01       		.byte	0x1
 2275 05bb 0104     		.2byte	0x401
 2276 05bd 81000000 		.4byte	0x81
 2277 05c1 01       		.uleb128 0x1
 2278 05c2 50       		.byte	0x50
 2279 05c3 19       		.uleb128 0x19
 2280 05c4 61030000 		.4byte	.LASF50
 2281 05c8 01       		.byte	0x1
 2282 05c9 0104     		.2byte	0x401
 2283 05cb 6B000000 		.4byte	0x6b
 2284 05cf 01       		.uleb128 0x1
 2285 05d0 51       		.byte	0x51
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 92


 2286 05d1 00       		.byte	0
 2287 05d2 14       		.uleb128 0x14
 2288 05d3 67030000 		.4byte	.LASF60
 2289 05d7 01       		.byte	0x1
 2290 05d8 1D04     		.2byte	0x41d
 2291 05da 00000000 		.4byte	.LFB56
 2292 05de 0C000000 		.4byte	.LFE56-.LFB56
 2293 05e2 01       		.uleb128 0x1
 2294 05e3 9C       		.byte	0x9c
 2295 05e4 07060000 		.4byte	0x607
 2296 05e8 18       		.uleb128 0x18
 2297 05e9 AA080000 		.4byte	.LASF40
 2298 05ed 01       		.byte	0x1
 2299 05ee 1D04     		.2byte	0x41d
 2300 05f0 81000000 		.4byte	0x81
 2301 05f4 D5010000 		.4byte	.LLST14
 2302 05f8 19       		.uleb128 0x19
 2303 05f9 61030000 		.4byte	.LASF50
 2304 05fd 01       		.byte	0x1
 2305 05fe 1D04     		.2byte	0x41d
 2306 0600 6B000000 		.4byte	0x6b
 2307 0604 01       		.uleb128 0x1
 2308 0605 51       		.byte	0x51
 2309 0606 00       		.byte	0
 2310 0607 17       		.uleb128 0x17
 2311 0608 E6050000 		.4byte	.LASF61
 2312 060c 01       		.byte	0x1
 2313 060d 4B04     		.2byte	0x44b
 2314 060f 81000000 		.4byte	0x81
 2315 0613 00000000 		.4byte	.LFB57
 2316 0617 AC000000 		.4byte	.LFE57-.LFB57
 2317 061b 01       		.uleb128 0x1
 2318 061c 9C       		.byte	0x9c
 2319 061d F1060000 		.4byte	0x6f1
 2320 0621 18       		.uleb128 0x18
 2321 0622 AA080000 		.4byte	.LASF40
 2322 0626 01       		.byte	0x1
 2323 0627 4B04     		.2byte	0x44b
 2324 0629 81000000 		.4byte	0x81
 2325 062d F6010000 		.4byte	.LLST15
 2326 0631 1A       		.uleb128 0x1a
 2327 0632 40070000 		.4byte	.LASF42
 2328 0636 01       		.byte	0x1
 2329 0637 4D04     		.2byte	0x44d
 2330 0639 6B000000 		.4byte	0x6b
 2331 063d 16       		.uleb128 0x16
 2332 063e 4E050000 		.4byte	.LASF62
 2333 0642 01       		.byte	0x1
 2334 0643 4E04     		.2byte	0x44e
 2335 0645 6B000000 		.4byte	0x6b
 2336 0649 22020000 		.4byte	.LLST16
 2337 064d 1A       		.uleb128 0x1a
 2338 064e 4E080000 		.4byte	.LASF63
 2339 0652 01       		.byte	0x1
 2340 0653 4F04     		.2byte	0x44f
 2341 0655 6B000000 		.4byte	0x6b
 2342 0659 16       		.uleb128 0x16
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 93


 2343 065a 71000000 		.4byte	.LASF64
 2344 065e 01       		.byte	0x1
 2345 065f 5104     		.2byte	0x451
 2346 0661 6B000000 		.4byte	0x6b
 2347 0665 47020000 		.4byte	.LLST17
 2348 0669 16       		.uleb128 0x16
 2349 066a 05030000 		.4byte	.LASF65
 2350 066e 01       		.byte	0x1
 2351 066f 5204     		.2byte	0x452
 2352 0671 6B000000 		.4byte	0x6b
 2353 0675 7B020000 		.4byte	.LLST18
 2354 0679 0F       		.uleb128 0xf
 2355 067a 24000000 		.4byte	.LVL53
 2356 067e 5B0D0000 		.4byte	0xd5b
 2357 0682 96060000 		.4byte	0x696
 2358 0686 10       		.uleb128 0x10
 2359 0687 01       		.uleb128 0x1
 2360 0688 51       		.byte	0x51
 2361 0689 02       		.uleb128 0x2
 2362 068a 74       		.byte	0x74
 2363 068b 00       		.sleb128 0
 2364 068c 10       		.uleb128 0x10
 2365 068d 01       		.uleb128 0x1
 2366 068e 50       		.byte	0x50
 2367 068f 05       		.uleb128 0x5
 2368 0690 03       		.byte	0x3
 2369 0691 10000000 		.4byte	.LANCHOR0+16
 2370 0695 00       		.byte	0
 2371 0696 0F       		.uleb128 0xf
 2372 0697 42000000 		.4byte	.LVL55
 2373 069b 750D0000 		.4byte	0xd75
 2374 069f B5060000 		.4byte	0x6b5
 2375 06a3 10       		.uleb128 0x10
 2376 06a4 01       		.uleb128 0x1
 2377 06a5 52       		.byte	0x52
 2378 06a6 01       		.uleb128 0x1
 2379 06a7 30       		.byte	0x30
 2380 06a8 10       		.uleb128 0x10
 2381 06a9 01       		.uleb128 0x1
 2382 06aa 51       		.byte	0x51
 2383 06ab 02       		.uleb128 0x2
 2384 06ac 74       		.byte	0x74
 2385 06ad 00       		.sleb128 0
 2386 06ae 10       		.uleb128 0x10
 2387 06af 01       		.uleb128 0x1
 2388 06b0 50       		.byte	0x50
 2389 06b1 02       		.uleb128 0x2
 2390 06b2 76       		.byte	0x76
 2391 06b3 10       		.sleb128 16
 2392 06b4 00       		.byte	0
 2393 06b5 0F       		.uleb128 0xf
 2394 06b6 72000000 		.4byte	.LVL58
 2395 06ba 750D0000 		.4byte	0xd75
 2396 06be D7060000 		.4byte	0x6d7
 2397 06c2 10       		.uleb128 0x10
 2398 06c3 01       		.uleb128 0x1
 2399 06c4 52       		.byte	0x52
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 94


 2400 06c5 01       		.uleb128 0x1
 2401 06c6 31       		.byte	0x31
 2402 06c7 10       		.uleb128 0x10
 2403 06c8 01       		.uleb128 0x1
 2404 06c9 51       		.byte	0x51
 2405 06ca 02       		.uleb128 0x2
 2406 06cb 74       		.byte	0x74
 2407 06cc 00       		.sleb128 0
 2408 06cd 10       		.uleb128 0x10
 2409 06ce 01       		.uleb128 0x1
 2410 06cf 50       		.byte	0x50
 2411 06d0 05       		.uleb128 0x5
 2412 06d1 03       		.byte	0x3
 2413 06d2 10000000 		.4byte	.LANCHOR0+16
 2414 06d6 00       		.byte	0
 2415 06d7 12       		.uleb128 0x12
 2416 06d8 86000000 		.4byte	.LVL59
 2417 06dc 5B0D0000 		.4byte	0xd5b
 2418 06e0 10       		.uleb128 0x10
 2419 06e1 01       		.uleb128 0x1
 2420 06e2 51       		.byte	0x51
 2421 06e3 02       		.uleb128 0x2
 2422 06e4 74       		.byte	0x74
 2423 06e5 00       		.sleb128 0
 2424 06e6 10       		.uleb128 0x10
 2425 06e7 01       		.uleb128 0x1
 2426 06e8 50       		.byte	0x50
 2427 06e9 05       		.uleb128 0x5
 2428 06ea 03       		.byte	0x3
 2429 06eb 10000000 		.4byte	.LANCHOR0+16
 2430 06ef 00       		.byte	0
 2431 06f0 00       		.byte	0
 2432 06f1 17       		.uleb128 0x17
 2433 06f2 B2060000 		.4byte	.LASF66
 2434 06f6 01       		.byte	0x1
 2435 06f7 9D04     		.2byte	0x49d
 2436 06f9 81000000 		.4byte	0x81
 2437 06fd 00000000 		.4byte	.LFB58
 2438 0701 2C000000 		.4byte	.LFE58-.LFB58
 2439 0705 01       		.uleb128 0x1
 2440 0706 9C       		.byte	0x9c
 2441 0707 5C070000 		.4byte	0x75c
 2442 070b 18       		.uleb128 0x18
 2443 070c 40070000 		.4byte	.LASF42
 2444 0710 01       		.byte	0x1
 2445 0711 9D04     		.2byte	0x49d
 2446 0713 81000000 		.4byte	0x81
 2447 0717 BA020000 		.4byte	.LLST19
 2448 071b 16       		.uleb128 0x16
 2449 071c 30020000 		.4byte	.LASF67
 2450 0720 01       		.byte	0x1
 2451 0721 9F04     		.2byte	0x49f
 2452 0723 81000000 		.4byte	0x81
 2453 0727 DB020000 		.4byte	.LLST20
 2454 072b 16       		.uleb128 0x16
 2455 072c D0080000 		.4byte	.LASF68
 2456 0730 01       		.byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 95


 2457 0731 A004     		.2byte	0x4a0
 2458 0733 81000000 		.4byte	0x81
 2459 0737 EE020000 		.4byte	.LLST21
 2460 073b 16       		.uleb128 0x16
 2461 073c 73020000 		.4byte	.LASF69
 2462 0740 01       		.byte	0x1
 2463 0741 A104     		.2byte	0x4a1
 2464 0743 81000000 		.4byte	0x81
 2465 0747 29030000 		.4byte	.LLST22
 2466 074b 12       		.uleb128 0x12
 2467 074c 16000000 		.4byte	.LVL68
 2468 0750 07060000 		.4byte	0x607
 2469 0754 10       		.uleb128 0x10
 2470 0755 01       		.uleb128 0x1
 2471 0756 50       		.byte	0x50
 2472 0757 02       		.uleb128 0x2
 2473 0758 74       		.byte	0x74
 2474 0759 00       		.sleb128 0
 2475 075a 00       		.byte	0
 2476 075b 00       		.byte	0
 2477 075c 17       		.uleb128 0x17
 2478 075d 82020000 		.4byte	.LASF70
 2479 0761 01       		.byte	0x1
 2480 0762 CB04     		.2byte	0x4cb
 2481 0764 81000000 		.4byte	0x81
 2482 0768 00000000 		.4byte	.LFB59
 2483 076c 20000000 		.4byte	.LFE59-.LFB59
 2484 0770 01       		.uleb128 0x1
 2485 0771 9C       		.byte	0x9c
 2486 0772 A5070000 		.4byte	0x7a5
 2487 0776 15       		.uleb128 0x15
 2488 0777 6900     		.ascii	"i\000"
 2489 0779 01       		.byte	0x1
 2490 077a CE04     		.2byte	0x4ce
 2491 077c 81000000 		.4byte	0x81
 2492 0780 53030000 		.4byte	.LLST23
 2493 0784 16       		.uleb128 0x16
 2494 0785 73020000 		.4byte	.LASF69
 2495 0789 01       		.byte	0x1
 2496 078a CF04     		.2byte	0x4cf
 2497 078c 81000000 		.4byte	0x81
 2498 0790 72030000 		.4byte	.LLST24
 2499 0794 12       		.uleb128 0x12
 2500 0795 10000000 		.4byte	.LVL76
 2501 0799 F1060000 		.4byte	0x6f1
 2502 079d 10       		.uleb128 0x10
 2503 079e 01       		.uleb128 0x1
 2504 079f 50       		.byte	0x50
 2505 07a0 02       		.uleb128 0x2
 2506 07a1 74       		.byte	0x74
 2507 07a2 00       		.sleb128 0
 2508 07a3 00       		.byte	0
 2509 07a4 00       		.byte	0
 2510 07a5 14       		.uleb128 0x14
 2511 07a6 6E050000 		.4byte	.LASF71
 2512 07aa 01       		.byte	0x1
 2513 07ab FA04     		.2byte	0x4fa
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 96


 2514 07ad 00000000 		.4byte	.LFB60
 2515 07b1 2C000000 		.4byte	.LFE60-.LFB60
 2516 07b5 01       		.uleb128 0x1
 2517 07b6 9C       		.byte	0x9c
 2518 07b7 07080000 		.4byte	0x807
 2519 07bb 18       		.uleb128 0x18
 2520 07bc 40070000 		.4byte	.LASF42
 2521 07c0 01       		.byte	0x1
 2522 07c1 FA04     		.2byte	0x4fa
 2523 07c3 81000000 		.4byte	0x81
 2524 07c7 9C030000 		.4byte	.LLST25
 2525 07cb 16       		.uleb128 0x16
 2526 07cc 30020000 		.4byte	.LASF67
 2527 07d0 01       		.byte	0x1
 2528 07d1 FD04     		.2byte	0x4fd
 2529 07d3 6B000000 		.4byte	0x6b
 2530 07d7 BD030000 		.4byte	.LLST26
 2531 07db 16       		.uleb128 0x16
 2532 07dc D0080000 		.4byte	.LASF68
 2533 07e0 01       		.byte	0x1
 2534 07e1 FE04     		.2byte	0x4fe
 2535 07e3 6B000000 		.4byte	0x6b
 2536 07e7 03040000 		.4byte	.LLST27
 2537 07eb 12       		.uleb128 0x12
 2538 07ec 1A000000 		.4byte	.LVL86
 2539 07f0 750D0000 		.4byte	0xd75
 2540 07f4 10       		.uleb128 0x10
 2541 07f5 01       		.uleb128 0x1
 2542 07f6 52       		.byte	0x52
 2543 07f7 01       		.uleb128 0x1
 2544 07f8 31       		.byte	0x31
 2545 07f9 10       		.uleb128 0x10
 2546 07fa 01       		.uleb128 0x1
 2547 07fb 51       		.byte	0x51
 2548 07fc 02       		.uleb128 0x2
 2549 07fd 74       		.byte	0x74
 2550 07fe 00       		.sleb128 0
 2551 07ff 10       		.uleb128 0x10
 2552 0800 01       		.uleb128 0x1
 2553 0801 50       		.byte	0x50
 2554 0802 02       		.uleb128 0x2
 2555 0803 75       		.byte	0x75
 2556 0804 00       		.sleb128 0
 2557 0805 00       		.byte	0
 2558 0806 00       		.byte	0
 2559 0807 14       		.uleb128 0x14
 2560 0808 19020000 		.4byte	.LASF72
 2561 080c 01       		.byte	0x1
 2562 080d 2505     		.2byte	0x525
 2563 080f 00000000 		.4byte	.LFB61
 2564 0813 2C000000 		.4byte	.LFE61-.LFB61
 2565 0817 01       		.uleb128 0x1
 2566 0818 9C       		.byte	0x9c
 2567 0819 69080000 		.4byte	0x869
 2568 081d 18       		.uleb128 0x18
 2569 081e 40070000 		.4byte	.LASF42
 2570 0822 01       		.byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 97


 2571 0823 2505     		.2byte	0x525
 2572 0825 81000000 		.4byte	0x81
 2573 0829 3E040000 		.4byte	.LLST28
 2574 082d 16       		.uleb128 0x16
 2575 082e 30020000 		.4byte	.LASF67
 2576 0832 01       		.byte	0x1
 2577 0833 2705     		.2byte	0x527
 2578 0835 6B000000 		.4byte	0x6b
 2579 0839 5F040000 		.4byte	.LLST29
 2580 083d 16       		.uleb128 0x16
 2581 083e D0080000 		.4byte	.LASF68
 2582 0842 01       		.byte	0x1
 2583 0843 2805     		.2byte	0x528
 2584 0845 6B000000 		.4byte	0x6b
 2585 0849 A5040000 		.4byte	.LLST30
 2586 084d 12       		.uleb128 0x12
 2587 084e 1A000000 		.4byte	.LVL96
 2588 0852 750D0000 		.4byte	0xd75
 2589 0856 10       		.uleb128 0x10
 2590 0857 01       		.uleb128 0x1
 2591 0858 52       		.byte	0x52
 2592 0859 01       		.uleb128 0x1
 2593 085a 30       		.byte	0x30
 2594 085b 10       		.uleb128 0x10
 2595 085c 01       		.uleb128 0x1
 2596 085d 51       		.byte	0x51
 2597 085e 02       		.uleb128 0x2
 2598 085f 74       		.byte	0x74
 2599 0860 00       		.sleb128 0
 2600 0861 10       		.uleb128 0x10
 2601 0862 01       		.uleb128 0x1
 2602 0863 50       		.byte	0x50
 2603 0864 02       		.uleb128 0x2
 2604 0865 75       		.byte	0x75
 2605 0866 00       		.sleb128 0
 2606 0867 00       		.byte	0
 2607 0868 00       		.byte	0
 2608 0869 17       		.uleb128 0x17
 2609 086a E1000000 		.4byte	.LASF73
 2610 086e 01       		.byte	0x1
 2611 086f 4109     		.2byte	0x941
 2612 0871 76000000 		.4byte	0x76
 2613 0875 00000000 		.4byte	.LFB62
 2614 0879 1C000000 		.4byte	.LFE62-.LFB62
 2615 087d 01       		.uleb128 0x1
 2616 087e 9C       		.byte	0x9c
 2617 087f BB080000 		.4byte	0x8bb
 2618 0883 1B       		.uleb128 0x1b
 2619 0884 783100   		.ascii	"x1\000"
 2620 0887 01       		.byte	0x1
 2621 0888 4109     		.2byte	0x941
 2622 088a 76000000 		.4byte	0x76
 2623 088e E0040000 		.4byte	.LLST31
 2624 0892 1B       		.uleb128 0x1b
 2625 0893 783200   		.ascii	"x2\000"
 2626 0896 01       		.byte	0x1
 2627 0897 4109     		.2byte	0x941
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 98


 2628 0899 76000000 		.4byte	0x76
 2629 089d 0C050000 		.4byte	.LLST32
 2630 08a1 1C       		.uleb128 0x1c
 2631 08a2 783300   		.ascii	"x3\000"
 2632 08a5 01       		.byte	0x1
 2633 08a6 4109     		.2byte	0x941
 2634 08a8 76000000 		.4byte	0x76
 2635 08ac 01       		.uleb128 0x1
 2636 08ad 52       		.byte	0x52
 2637 08ae 1D       		.uleb128 0x1d
 2638 08af 746D7000 		.ascii	"tmp\000"
 2639 08b3 01       		.byte	0x1
 2640 08b4 4309     		.2byte	0x943
 2641 08b6 76000000 		.4byte	0x76
 2642 08ba 00       		.byte	0
 2643 08bb 17       		.uleb128 0x17
 2644 08bc 84030000 		.4byte	.LASF74
 2645 08c0 01       		.byte	0x1
 2646 08c1 B909     		.2byte	0x9b9
 2647 08c3 76000000 		.4byte	0x76
 2648 08c7 00000000 		.4byte	.LFB63
 2649 08cb 0A000000 		.4byte	.LFE63-.LFB63
 2650 08cf 01       		.uleb128 0x1
 2651 08d0 9C       		.byte	0x9c
 2652 08d1 04090000 		.4byte	0x904
 2653 08d5 1B       		.uleb128 0x1b
 2654 08d6 783100   		.ascii	"x1\000"
 2655 08d9 01       		.byte	0x1
 2656 08da B909     		.2byte	0x9b9
 2657 08dc 76000000 		.4byte	0x76
 2658 08e0 2A050000 		.4byte	.LLST33
 2659 08e4 1B       		.uleb128 0x1b
 2660 08e5 783200   		.ascii	"x2\000"
 2661 08e8 01       		.byte	0x1
 2662 08e9 B909     		.2byte	0x9b9
 2663 08eb 76000000 		.4byte	0x76
 2664 08ef 4B050000 		.4byte	.LLST34
 2665 08f3 15       		.uleb128 0x15
 2666 08f4 746D7000 		.ascii	"tmp\000"
 2667 08f8 01       		.byte	0x1
 2668 08f9 BB09     		.2byte	0x9bb
 2669 08fb 81000000 		.4byte	0x81
 2670 08ff 6C050000 		.4byte	.LLST35
 2671 0903 00       		.byte	0
 2672 0904 14       		.uleb128 0x14
 2673 0905 84050000 		.4byte	.LASF75
 2674 0909 01       		.byte	0x1
 2675 090a 5D01     		.2byte	0x15d
 2676 090c 00000000 		.4byte	.LFB39
 2677 0910 14010000 		.4byte	.LFE39-.LFB39
 2678 0914 01       		.uleb128 0x1
 2679 0915 9C       		.byte	0x9c
 2680 0916 BF090000 		.4byte	0x9bf
 2681 091a 18       		.uleb128 0x18
 2682 091b AA080000 		.4byte	.LASF40
 2683 091f 01       		.byte	0x1
 2684 0920 5D01     		.2byte	0x15d
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 99


 2685 0922 81000000 		.4byte	0x81
 2686 0926 99050000 		.4byte	.LLST36
 2687 092a 16       		.uleb128 0x16
 2688 092b E0040000 		.4byte	.LASF76
 2689 092f 01       		.byte	0x1
 2690 0930 5F01     		.2byte	0x15f
 2691 0932 81000000 		.4byte	0x81
 2692 0936 F7050000 		.4byte	.LLST37
 2693 093a 16       		.uleb128 0x16
 2694 093b CB080000 		.4byte	.LASF77
 2695 093f 01       		.byte	0x1
 2696 0940 6001     		.2byte	0x160
 2697 0942 81000000 		.4byte	0x81
 2698 0946 20060000 		.4byte	.LLST38
 2699 094a 16       		.uleb128 0x16
 2700 094b B9090000 		.4byte	.LASF78
 2701 094f 01       		.byte	0x1
 2702 0950 6101     		.2byte	0x161
 2703 0952 76000000 		.4byte	0x76
 2704 0956 77060000 		.4byte	.LLST39
 2705 095a 16       		.uleb128 0x16
 2706 095b 07000000 		.4byte	.LASF79
 2707 095f 01       		.byte	0x1
 2708 0960 6201     		.2byte	0x162
 2709 0962 76000000 		.4byte	0x76
 2710 0966 95060000 		.4byte	.LLST40
 2711 096a 1A       		.uleb128 0x1a
 2712 096b 40070000 		.4byte	.LASF42
 2713 096f 01       		.byte	0x1
 2714 0970 6301     		.2byte	0x163
 2715 0972 6B000000 		.4byte	0x6b
 2716 0976 16       		.uleb128 0x16
 2717 0977 27070000 		.4byte	.LASF80
 2718 097b 01       		.byte	0x1
 2719 097c 6401     		.2byte	0x164
 2720 097e 6B000000 		.4byte	0x6b
 2721 0982 D9060000 		.4byte	.LLST41
 2722 0986 0F       		.uleb128 0xf
 2723 0987 2E000000 		.4byte	.LVL116
 2724 098b BB080000 		.4byte	0x8bb
 2725 098f 9A090000 		.4byte	0x99a
 2726 0993 10       		.uleb128 0x10
 2727 0994 01       		.uleb128 0x1
 2728 0995 50       		.byte	0x50
 2729 0996 02       		.uleb128 0x2
 2730 0997 75       		.byte	0x75
 2731 0998 00       		.sleb128 0
 2732 0999 00       		.byte	0
 2733 099a 0F       		.uleb128 0xf
 2734 099b 3E000000 		.4byte	.LVL119
 2735 099f 900D0000 		.4byte	0xd90
 2736 09a3 AE090000 		.4byte	0x9ae
 2737 09a7 10       		.uleb128 0x10
 2738 09a8 01       		.uleb128 0x1
 2739 09a9 51       		.byte	0x51
 2740 09aa 02       		.uleb128 0x2
 2741 09ab 74       		.byte	0x74
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 100


 2742 09ac 00       		.sleb128 0
 2743 09ad 00       		.byte	0
 2744 09ae 12       		.uleb128 0x12
 2745 09af 82000000 		.4byte	.LVL124
 2746 09b3 3D020000 		.4byte	0x23d
 2747 09b7 10       		.uleb128 0x10
 2748 09b8 01       		.uleb128 0x1
 2749 09b9 50       		.byte	0x50
 2750 09ba 02       		.uleb128 0x2
 2751 09bb 74       		.byte	0x74
 2752 09bc 00       		.sleb128 0
 2753 09bd 00       		.byte	0
 2754 09be 00       		.byte	0
 2755 09bf 14       		.uleb128 0x14
 2756 09c0 C2040000 		.4byte	.LASF81
 2757 09c4 01       		.byte	0x1
 2758 09c5 1C02     		.2byte	0x21c
 2759 09c7 00000000 		.4byte	.LFB40
 2760 09cb 10000000 		.4byte	.LFE40-.LFB40
 2761 09cf 01       		.uleb128 0x1
 2762 09d0 9C       		.byte	0x9c
 2763 09d1 0A0A0000 		.4byte	0xa0a
 2764 09d5 18       		.uleb128 0x18
 2765 09d6 AA080000 		.4byte	.LASF40
 2766 09da 01       		.byte	0x1
 2767 09db 1C02     		.2byte	0x21c
 2768 09dd 81000000 		.4byte	0x81
 2769 09e1 FE060000 		.4byte	.LLST42
 2770 09e5 0F       		.uleb128 0xf
 2771 09e6 08000000 		.4byte	.LVL142
 2772 09ea BC0D0000 		.4byte	0xdbc
 2773 09ee F9090000 		.4byte	0x9f9
 2774 09f2 10       		.uleb128 0x10
 2775 09f3 01       		.uleb128 0x1
 2776 09f4 50       		.byte	0x50
 2777 09f5 02       		.uleb128 0x2
 2778 09f6 74       		.byte	0x74
 2779 09f7 00       		.sleb128 0
 2780 09f8 00       		.byte	0
 2781 09f9 12       		.uleb128 0x12
 2782 09fa 0E000000 		.4byte	.LVL143
 2783 09fe 04090000 		.4byte	0x904
 2784 0a02 10       		.uleb128 0x10
 2785 0a03 01       		.uleb128 0x1
 2786 0a04 50       		.byte	0x50
 2787 0a05 02       		.uleb128 0x2
 2788 0a06 74       		.byte	0x74
 2789 0a07 00       		.sleb128 0
 2790 0a08 00       		.byte	0
 2791 0a09 00       		.byte	0
 2792 0a0a 14       		.uleb128 0x14
 2793 0a0b DF010000 		.4byte	.LASF82
 2794 0a0f 01       		.byte	0x1
 2795 0a10 5202     		.2byte	0x252
 2796 0a12 00000000 		.4byte	.LFB41
 2797 0a16 28000000 		.4byte	.LFE41-.LFB41
 2798 0a1a 01       		.uleb128 0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 101


 2799 0a1b 9C       		.byte	0x9c
 2800 0a1c 690A0000 		.4byte	0xa69
 2801 0a20 15       		.uleb128 0x15
 2802 0a21 6900     		.ascii	"i\000"
 2803 0a23 01       		.byte	0x1
 2804 0a24 5402     		.2byte	0x254
 2805 0a26 81000000 		.4byte	0x81
 2806 0a2a 2A070000 		.4byte	.LLST43
 2807 0a2e 16       		.uleb128 0x16
 2808 0a2f 51070000 		.4byte	.LASF44
 2809 0a33 01       		.byte	0x1
 2810 0a34 5502     		.2byte	0x255
 2811 0a36 81000000 		.4byte	0x81
 2812 0a3a 49070000 		.4byte	.LLST44
 2813 0a3e 0F       		.uleb128 0xf
 2814 0a3f 10000000 		.4byte	.LVL147
 2815 0a43 5B0D0000 		.4byte	0xd5b
 2816 0a47 580A0000 		.4byte	0xa58
 2817 0a4b 10       		.uleb128 0x10
 2818 0a4c 01       		.uleb128 0x1
 2819 0a4d 51       		.byte	0x51
 2820 0a4e 02       		.uleb128 0x2
 2821 0a4f 74       		.byte	0x74
 2822 0a50 00       		.sleb128 0
 2823 0a51 10       		.uleb128 0x10
 2824 0a52 01       		.uleb128 0x1
 2825 0a53 50       		.byte	0x50
 2826 0a54 02       		.uleb128 0x2
 2827 0a55 75       		.byte	0x75
 2828 0a56 00       		.sleb128 0
 2829 0a57 00       		.byte	0
 2830 0a58 12       		.uleb128 0x12
 2831 0a59 1A000000 		.4byte	.LVL149
 2832 0a5d BF090000 		.4byte	0x9bf
 2833 0a61 10       		.uleb128 0x10
 2834 0a62 01       		.uleb128 0x1
 2835 0a63 50       		.byte	0x50
 2836 0a64 02       		.uleb128 0x2
 2837 0a65 74       		.byte	0x74
 2838 0a66 00       		.sleb128 0
 2839 0a67 00       		.byte	0
 2840 0a68 00       		.byte	0
 2841 0a69 14       		.uleb128 0x14
 2842 0a6a A4000000 		.4byte	.LASF83
 2843 0a6e 01       		.byte	0x1
 2844 0a6f 7F02     		.2byte	0x27f
 2845 0a71 00000000 		.4byte	.LFB42
 2846 0a75 34000000 		.4byte	.LFE42-.LFB42
 2847 0a79 01       		.uleb128 0x1
 2848 0a7a 9C       		.byte	0x9c
 2849 0a7b 080B0000 		.4byte	0xb08
 2850 0a7f 18       		.uleb128 0x18
 2851 0a80 40070000 		.4byte	.LASF42
 2852 0a84 01       		.byte	0x1
 2853 0a85 7F02     		.2byte	0x27f
 2854 0a87 81000000 		.4byte	0x81
 2855 0a8b 5C070000 		.4byte	.LLST45
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 102


 2856 0a8f 16       		.uleb128 0x16
 2857 0a90 91070000 		.4byte	.LASF84
 2858 0a94 01       		.byte	0x1
 2859 0a95 8102     		.2byte	0x281
 2860 0a97 81000000 		.4byte	0x81
 2861 0a9b 7D070000 		.4byte	.LLST46
 2862 0a9f 16       		.uleb128 0x16
 2863 0aa0 42080000 		.4byte	.LASF85
 2864 0aa4 01       		.byte	0x1
 2865 0aa5 8202     		.2byte	0x282
 2866 0aa7 81000000 		.4byte	0x81
 2867 0aab BB070000 		.4byte	.LLST47
 2868 0aaf 16       		.uleb128 0x16
 2869 0ab0 17000000 		.4byte	.LASF86
 2870 0ab4 01       		.byte	0x1
 2871 0ab5 8302     		.2byte	0x283
 2872 0ab7 81000000 		.4byte	0x81
 2873 0abb E7070000 		.4byte	.LLST48
 2874 0abf 15       		.uleb128 0x15
 2875 0ac0 6900     		.ascii	"i\000"
 2876 0ac2 01       		.byte	0x1
 2877 0ac3 8402     		.2byte	0x284
 2878 0ac5 81000000 		.4byte	0x81
 2879 0ac9 22080000 		.4byte	.LLST49
 2880 0acd 16       		.uleb128 0x16
 2881 0ace 51070000 		.4byte	.LASF44
 2882 0ad2 01       		.byte	0x1
 2883 0ad3 8502     		.2byte	0x285
 2884 0ad5 81000000 		.4byte	0x81
 2885 0ad9 35080000 		.4byte	.LLST50
 2886 0add 0F       		.uleb128 0xf
 2887 0ade 18000000 		.4byte	.LVL157
 2888 0ae2 5B0D0000 		.4byte	0xd5b
 2889 0ae6 F70A0000 		.4byte	0xaf7
 2890 0aea 10       		.uleb128 0x10
 2891 0aeb 01       		.uleb128 0x1
 2892 0aec 51       		.byte	0x51
 2893 0aed 02       		.uleb128 0x2
 2894 0aee 74       		.byte	0x74
 2895 0aef 00       		.sleb128 0
 2896 0af0 10       		.uleb128 0x10
 2897 0af1 01       		.uleb128 0x1
 2898 0af2 50       		.byte	0x50
 2899 0af3 02       		.uleb128 0x2
 2900 0af4 76       		.byte	0x76
 2901 0af5 00       		.sleb128 0
 2902 0af6 00       		.byte	0
 2903 0af7 12       		.uleb128 0x12
 2904 0af8 22000000 		.4byte	.LVL159
 2905 0afc BF090000 		.4byte	0x9bf
 2906 0b00 10       		.uleb128 0x10
 2907 0b01 01       		.uleb128 0x1
 2908 0b02 50       		.byte	0x50
 2909 0b03 02       		.uleb128 0x2
 2910 0b04 74       		.byte	0x74
 2911 0b05 00       		.sleb128 0
 2912 0b06 00       		.byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 103


 2913 0b07 00       		.byte	0
 2914 0b08 17       		.uleb128 0x17
 2915 0b09 40090000 		.4byte	.LASF87
 2916 0b0d 01       		.byte	0x1
 2917 0b0e A20A     		.2byte	0xaa2
 2918 0b10 81000000 		.4byte	0x81
 2919 0b14 00000000 		.4byte	.LFB64
 2920 0b18 0C000000 		.4byte	.LFE64-.LFB64
 2921 0b1c 01       		.uleb128 0x1
 2922 0b1d 9C       		.byte	0x9c
 2923 0b1e 330B0000 		.4byte	0xb33
 2924 0b22 18       		.uleb128 0x18
 2925 0b23 AA080000 		.4byte	.LASF40
 2926 0b27 01       		.byte	0x1
 2927 0b28 A20A     		.2byte	0xaa2
 2928 0b2a 81000000 		.4byte	0x81
 2929 0b2e 48080000 		.4byte	.LLST51
 2930 0b32 00       		.byte	0
 2931 0b33 17       		.uleb128 0x17
 2932 0b34 95060000 		.4byte	.LASF88
 2933 0b38 01       		.byte	0x1
 2934 0b39 BC0A     		.2byte	0xabc
 2935 0b3b 6B000000 		.4byte	0x6b
 2936 0b3f 00000000 		.4byte	.LFB65
 2937 0b43 0C000000 		.4byte	.LFE65-.LFB65
 2938 0b47 01       		.uleb128 0x1
 2939 0b48 9C       		.byte	0x9c
 2940 0b49 5E0B0000 		.4byte	0xb5e
 2941 0b4d 18       		.uleb128 0x18
 2942 0b4e AA080000 		.4byte	.LASF40
 2943 0b52 01       		.byte	0x1
 2944 0b53 BC0A     		.2byte	0xabc
 2945 0b55 81000000 		.4byte	0x81
 2946 0b59 69080000 		.4byte	.LLST52
 2947 0b5d 00       		.byte	0
 2948 0b5e 17       		.uleb128 0x17
 2949 0b5f CC000000 		.4byte	.LASF89
 2950 0b63 01       		.byte	0x1
 2951 0b64 D60A     		.2byte	0xad6
 2952 0b66 6B000000 		.4byte	0x6b
 2953 0b6a 00000000 		.4byte	.LFB66
 2954 0b6e 0C000000 		.4byte	.LFE66-.LFB66
 2955 0b72 01       		.uleb128 0x1
 2956 0b73 9C       		.byte	0x9c
 2957 0b74 890B0000 		.4byte	0xb89
 2958 0b78 18       		.uleb128 0x18
 2959 0b79 40070000 		.4byte	.LASF42
 2960 0b7d 01       		.byte	0x1
 2961 0b7e D60A     		.2byte	0xad6
 2962 0b80 81000000 		.4byte	0x81
 2963 0b84 8A080000 		.4byte	.LLST53
 2964 0b88 00       		.byte	0
 2965 0b89 1E       		.uleb128 0x1e
 2966 0b8a 75090000 		.4byte	.LASF90
 2967 0b8e 01       		.byte	0x1
 2968 0b8f F00A     		.2byte	0xaf0
 2969 0b91 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 104


 2970 0b95 0C000000 		.4byte	.LFE67-.LFB67
 2971 0b99 01       		.uleb128 0x1
 2972 0b9a 9C       		.byte	0x9c
 2973 0b9b 1E       		.uleb128 0x1e
 2974 0b9c C2020000 		.4byte	.LASF91
 2975 0ba0 01       		.byte	0x1
 2976 0ba1 090B     		.2byte	0xb09
 2977 0ba3 00000000 		.4byte	.LFB68
 2978 0ba7 0C000000 		.4byte	.LFE68-.LFB68
 2979 0bab 01       		.uleb128 0x1
 2980 0bac 9C       		.byte	0x9c
 2981 0bad 1F       		.uleb128 0x1f
 2982 0bae 6B000000 		.4byte	0x6b
 2983 0bb2 BD0B0000 		.4byte	0xbbd
 2984 0bb6 20       		.uleb128 0x20
 2985 0bb7 A1000000 		.4byte	0xa1
 2986 0bbb 02       		.byte	0x2
 2987 0bbc 00       		.byte	0
 2988 0bbd 21       		.uleb128 0x21
 2989 0bbe 93090000 		.4byte	.LASF92
 2990 0bc2 01       		.byte	0x1
 2991 0bc3 55       		.byte	0x55
 2992 0bc4 AD0B0000 		.4byte	0xbad
 2993 0bc8 05       		.uleb128 0x5
 2994 0bc9 03       		.byte	0x3
 2995 0bca 0C000000 		.4byte	CapSense_debounceCounter
 2996 0bce 1F       		.uleb128 0x1f
 2997 0bcf 76000000 		.4byte	0x76
 2998 0bd3 DE0B0000 		.4byte	0xbde
 2999 0bd7 20       		.uleb128 0x20
 3000 0bd8 A1000000 		.4byte	0xa1
 3001 0bdc 01       		.byte	0x1
 3002 0bdd 00       		.byte	0
 3003 0bde 22       		.uleb128 0x22
 3004 0bdf EF080000 		.4byte	.LASF93
 3005 0be3 01       		.byte	0x1
 3006 0be4 2C       		.byte	0x2c
 3007 0be5 CE0B0000 		.4byte	0xbce
 3008 0be9 1F       		.uleb128 0x1f
 3009 0bea 6B000000 		.4byte	0x6b
 3010 0bee F90B0000 		.4byte	0xbf9
 3011 0bf2 20       		.uleb128 0x20
 3012 0bf3 A1000000 		.4byte	0xa1
 3013 0bf7 00       		.byte	0
 3014 0bf8 00       		.byte	0
 3015 0bf9 22       		.uleb128 0x22
 3016 0bfa 8F040000 		.4byte	.LASF94
 3017 0bfe 01       		.byte	0x1
 3018 0bff 2D       		.byte	0x2d
 3019 0c00 E90B0000 		.4byte	0xbe9
 3020 0c04 1F       		.uleb128 0x1f
 3021 0c05 6B000000 		.4byte	0x6b
 3022 0c09 140C0000 		.4byte	0xc14
 3023 0c0d 20       		.uleb128 0x20
 3024 0c0e A1000000 		.4byte	0xa1
 3025 0c12 01       		.byte	0x1
 3026 0c13 00       		.byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 105


 3027 0c14 22       		.uleb128 0x22
 3028 0c15 E8020000 		.4byte	.LASF95
 3029 0c19 01       		.byte	0x1
 3030 0c1a 2E       		.byte	0x2e
 3031 0c1b 1F0C0000 		.4byte	0xc1f
 3032 0c1f 08       		.uleb128 0x8
 3033 0c20 040C0000 		.4byte	0xc04
 3034 0c24 23       		.uleb128 0x23
 3035 0c25 DA070000 		.4byte	.LASF96
 3036 0c29 01       		.byte	0x1
 3037 0c2a 34       		.byte	0x34
 3038 0c2b CE0B0000 		.4byte	0xbce
 3039 0c2f 05       		.uleb128 0x5
 3040 0c30 03       		.byte	0x3
 3041 0c31 00000000 		.4byte	CapSense_sensorBaseline
 3042 0c35 23       		.uleb128 0x23
 3043 0c36 CB030000 		.4byte	.LASF97
 3044 0c3a 01       		.byte	0x1
 3045 0c3b 35       		.byte	0x35
 3046 0c3c 040C0000 		.4byte	0xc04
 3047 0c40 05       		.uleb128 0x5
 3048 0c41 03       		.byte	0x3
 3049 0c42 00000000 		.4byte	CapSense_sensorBaselineLow
 3050 0c46 23       		.uleb128 0x23
 3051 0c47 8A010000 		.4byte	.LASF98
 3052 0c4b 01       		.byte	0x1
 3053 0c4c 36       		.byte	0x36
 3054 0c4d 040C0000 		.4byte	0xc04
 3055 0c51 05       		.uleb128 0x5
 3056 0c52 03       		.byte	0x3
 3057 0c53 00000000 		.4byte	CapSense_sensorSignal
 3058 0c57 23       		.uleb128 0x23
 3059 0c58 38000000 		.4byte	.LASF99
 3060 0c5c 01       		.byte	0x1
 3061 0c5d 37       		.byte	0x37
 3062 0c5e E90B0000 		.4byte	0xbe9
 3063 0c62 05       		.uleb128 0x5
 3064 0c63 03       		.byte	0x3
 3065 0c64 00000000 		.4byte	CapSense_sensorOnMask
 3066 0c68 23       		.uleb128 0x23
 3067 0c69 A2070000 		.4byte	.LASF100
 3068 0c6d 01       		.byte	0x1
 3069 0c6e 39       		.byte	0x39
 3070 0c6f 040C0000 		.4byte	0xc04
 3071 0c73 05       		.uleb128 0x5
 3072 0c74 03       		.byte	0x3
 3073 0c75 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3074 0c79 23       		.uleb128 0x23
 3075 0c7a A8020000 		.4byte	.LASF101
 3076 0c7e 01       		.byte	0x1
 3077 0c7f 3A       		.byte	0x3a
 3078 0c80 040C0000 		.4byte	0xc04
 3079 0c84 05       		.uleb128 0x5
 3080 0c85 03       		.byte	0x3
 3081 0c86 00000000 		.4byte	CapSense_lowBaselineReset
 3082 0c8a 23       		.uleb128 0x23
 3083 0c8b 39060000 		.4byte	.LASF102
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 106


 3084 0c8f 01       		.byte	0x1
 3085 0c90 49       		.byte	0x49
 3086 0c91 040C0000 		.4byte	0xc04
 3087 0c95 05       		.uleb128 0x5
 3088 0c96 03       		.byte	0x3
 3089 0c97 00000000 		.4byte	CapSense_fingerThreshold
 3090 0c9b 23       		.uleb128 0x23
 3091 0c9c 21060000 		.4byte	.LASF103
 3092 0ca0 01       		.byte	0x1
 3093 0ca1 4B       		.byte	0x4b
 3094 0ca2 040C0000 		.4byte	0xc04
 3095 0ca6 05       		.uleb128 0x5
 3096 0ca7 03       		.byte	0x3
 3097 0ca8 00000000 		.4byte	CapSense_noiseThreshold
 3098 0cac 23       		.uleb128 0x23
 3099 0cad EF090000 		.4byte	.LASF104
 3100 0cb1 01       		.byte	0x1
 3101 0cb2 4D       		.byte	0x4d
 3102 0cb3 040C0000 		.4byte	0xc04
 3103 0cb7 05       		.uleb128 0x5
 3104 0cb8 03       		.byte	0x3
 3105 0cb9 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3106 0cbd 23       		.uleb128 0x23
 3107 0cbe F2070000 		.4byte	.LASF105
 3108 0cc2 01       		.byte	0x1
 3109 0cc3 4F       		.byte	0x4f
 3110 0cc4 040C0000 		.4byte	0xc04
 3111 0cc8 05       		.uleb128 0x5
 3112 0cc9 03       		.byte	0x3
 3113 0cca 00000000 		.4byte	CapSense_hysteresis
 3114 0cce 23       		.uleb128 0x23
 3115 0ccf 04040000 		.4byte	.LASF106
 3116 0cd3 01       		.byte	0x1
 3117 0cd4 51       		.byte	0x51
 3118 0cd5 040C0000 		.4byte	0xc04
 3119 0cd9 05       		.uleb128 0x5
 3120 0cda 03       		.byte	0x3
 3121 0cdb 00000000 		.4byte	CapSense_debounce
 3122 0cdf 23       		.uleb128 0x23
 3123 0ce0 22000000 		.4byte	.LASF107
 3124 0ce4 01       		.byte	0x1
 3125 0ce5 59       		.byte	0x59
 3126 0ce6 F00C0000 		.4byte	0xcf0
 3127 0cea 05       		.uleb128 0x5
 3128 0ceb 03       		.byte	0x3
 3129 0cec 00000000 		.4byte	CapSense_rawDataIndex
 3130 0cf0 08       		.uleb128 0x8
 3131 0cf1 040C0000 		.4byte	0xc04
 3132 0cf5 23       		.uleb128 0x23
 3133 0cf6 A9040000 		.4byte	.LASF108
 3134 0cfa 01       		.byte	0x1
 3135 0cfb 5E       		.byte	0x5e
 3136 0cfc 060D0000 		.4byte	0xd06
 3137 0d00 05       		.uleb128 0x5
 3138 0d01 03       		.byte	0x3
 3139 0d02 00000000 		.4byte	CapSense_numberOfSensors
 3140 0d06 08       		.uleb128 0x8
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 107


 3141 0d07 040C0000 		.4byte	0xc04
 3142 0d0b 23       		.uleb128 0x23
 3143 0d0c 67060000 		.4byte	.LASF109
 3144 0d10 01       		.byte	0x1
 3145 0d11 27       		.byte	0x27
 3146 0d12 CE0B0000 		.4byte	0xbce
 3147 0d16 05       		.uleb128 0x5
 3148 0d17 03       		.byte	0x3
 3149 0d18 00000000 		.4byte	CapSense_rawFilterData1
 3150 0d1c 22       		.uleb128 0x22
 3151 0d1d 7F060000 		.4byte	.LASF110
 3152 0d21 01       		.byte	0x1
 3153 0d22 41       		.byte	0x41
 3154 0d23 32020000 		.4byte	0x232
 3155 0d27 23       		.uleb128 0x23
 3156 0d28 0B080000 		.4byte	.LASF111
 3157 0d2c 01       		.byte	0x1
 3158 0d2d 45       		.byte	0x45
 3159 0d2e 6B000000 		.4byte	0x6b
 3160 0d32 05       		.uleb128 0x5
 3161 0d33 03       		.byte	0x3
 3162 0d34 00000000 		.4byte	CapSense_enableRawFilters
 3163 0d38 24       		.uleb128 0x24
 3164 0d39 98030000 		.4byte	.LASF112
 3165 0d3d 04       		.byte	0x4
 3166 0d3e 9D       		.byte	0x9d
 3167 0d3f 490D0000 		.4byte	0xd49
 3168 0d43 0A       		.uleb128 0xa
 3169 0d44 81000000 		.4byte	0x81
 3170 0d48 00       		.byte	0
 3171 0d49 25       		.uleb128 0x25
 3172 0d4a F2040000 		.4byte	.LASF118
 3173 0d4e 04       		.byte	0x4
 3174 0d4f 9C       		.byte	0x9c
 3175 0d50 81000000 		.4byte	0x81
 3176 0d54 26       		.uleb128 0x26
 3177 0d55 59090000 		.4byte	.LASF119
 3178 0d59 04       		.byte	0x4
 3179 0d5a 9F       		.byte	0x9f
 3180 0d5b 27       		.uleb128 0x27
 3181 0d5c 2B090000 		.4byte	.LASF120
 3182 0d60 03       		.byte	0x3
 3183 0d61 61       		.byte	0x61
 3184 0d62 81000000 		.4byte	0x81
 3185 0d66 750D0000 		.4byte	0xd75
 3186 0d6a 0A       		.uleb128 0xa
 3187 0d6b 5F010000 		.4byte	0x15f
 3188 0d6f 0A       		.uleb128 0xa
 3189 0d70 81000000 		.4byte	0x81
 3190 0d74 00       		.byte	0
 3191 0d75 24       		.uleb128 0x24
 3192 0d76 52060000 		.4byte	.LASF113
 3193 0d7a 03       		.byte	0x3
 3194 0d7b 62       		.byte	0x62
 3195 0d7c 900D0000 		.4byte	0xd90
 3196 0d80 0A       		.uleb128 0xa
 3197 0d81 59010000 		.4byte	0x159
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 108


 3198 0d85 0A       		.uleb128 0xa
 3199 0d86 81000000 		.4byte	0x81
 3200 0d8a 0A       		.uleb128 0xa
 3201 0d8b 81000000 		.4byte	0x81
 3202 0d8f 00       		.byte	0
 3203 0d90 24       		.uleb128 0x24
 3204 0d91 C1090000 		.4byte	.LASF114
 3205 0d95 03       		.byte	0x3
 3206 0d96 78       		.byte	0x78
 3207 0d97 AB0D0000 		.4byte	0xdab
 3208 0d9b 0A       		.uleb128 0xa
 3209 0d9c AB0D0000 		.4byte	0xdab
 3210 0da0 0A       		.uleb128 0xa
 3211 0da1 65010000 		.4byte	0x165
 3212 0da5 0A       		.uleb128 0xa
 3213 0da6 B10D0000 		.4byte	0xdb1
 3214 0daa 00       		.byte	0
 3215 0dab 07       		.uleb128 0x7
 3216 0dac 04       		.byte	0x4
 3217 0dad 32020000 		.4byte	0x232
 3218 0db1 07       		.uleb128 0x7
 3219 0db2 04       		.byte	0x4
 3220 0db3 B70D0000 		.4byte	0xdb7
 3221 0db7 08       		.uleb128 0x8
 3222 0db8 76000000 		.4byte	0x76
 3223 0dbc 28       		.uleb128 0x28
 3224 0dbd B1080000 		.4byte	.LASF121
 3225 0dc1 01       		.byte	0x1
 3226 0dc2 17       		.byte	0x17
 3227 0dc3 0A       		.uleb128 0xa
 3228 0dc4 81000000 		.4byte	0x81
 3229 0dc8 00       		.byte	0
 3230 0dc9 00       		.byte	0
 3231              		.section	.debug_abbrev,"",%progbits
 3232              	.Ldebug_abbrev0:
 3233 0000 01       		.uleb128 0x1
 3234 0001 11       		.uleb128 0x11
 3235 0002 01       		.byte	0x1
 3236 0003 25       		.uleb128 0x25
 3237 0004 0E       		.uleb128 0xe
 3238 0005 13       		.uleb128 0x13
 3239 0006 0B       		.uleb128 0xb
 3240 0007 03       		.uleb128 0x3
 3241 0008 0E       		.uleb128 0xe
 3242 0009 1B       		.uleb128 0x1b
 3243 000a 0E       		.uleb128 0xe
 3244 000b 55       		.uleb128 0x55
 3245 000c 17       		.uleb128 0x17
 3246 000d 11       		.uleb128 0x11
 3247 000e 01       		.uleb128 0x1
 3248 000f 10       		.uleb128 0x10
 3249 0010 17       		.uleb128 0x17
 3250 0011 00       		.byte	0
 3251 0012 00       		.byte	0
 3252 0013 02       		.uleb128 0x2
 3253 0014 24       		.uleb128 0x24
 3254 0015 00       		.byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 109


 3255 0016 0B       		.uleb128 0xb
 3256 0017 0B       		.uleb128 0xb
 3257 0018 3E       		.uleb128 0x3e
 3258 0019 0B       		.uleb128 0xb
 3259 001a 03       		.uleb128 0x3
 3260 001b 0E       		.uleb128 0xe
 3261 001c 00       		.byte	0
 3262 001d 00       		.byte	0
 3263 001e 03       		.uleb128 0x3
 3264 001f 24       		.uleb128 0x24
 3265 0020 00       		.byte	0
 3266 0021 0B       		.uleb128 0xb
 3267 0022 0B       		.uleb128 0xb
 3268 0023 3E       		.uleb128 0x3e
 3269 0024 0B       		.uleb128 0xb
 3270 0025 03       		.uleb128 0x3
 3271 0026 08       		.uleb128 0x8
 3272 0027 00       		.byte	0
 3273 0028 00       		.byte	0
 3274 0029 04       		.uleb128 0x4
 3275 002a 16       		.uleb128 0x16
 3276 002b 00       		.byte	0
 3277 002c 03       		.uleb128 0x3
 3278 002d 0E       		.uleb128 0xe
 3279 002e 3A       		.uleb128 0x3a
 3280 002f 0B       		.uleb128 0xb
 3281 0030 3B       		.uleb128 0x3b
 3282 0031 0B       		.uleb128 0xb
 3283 0032 49       		.uleb128 0x49
 3284 0033 13       		.uleb128 0x13
 3285 0034 00       		.byte	0
 3286 0035 00       		.byte	0
 3287 0036 05       		.uleb128 0x5
 3288 0037 13       		.uleb128 0x13
 3289 0038 01       		.byte	0x1
 3290 0039 0B       		.uleb128 0xb
 3291 003a 0B       		.uleb128 0xb
 3292 003b 3A       		.uleb128 0x3a
 3293 003c 0B       		.uleb128 0xb
 3294 003d 3B       		.uleb128 0x3b
 3295 003e 0B       		.uleb128 0xb
 3296 003f 01       		.uleb128 0x1
 3297 0040 13       		.uleb128 0x13
 3298 0041 00       		.byte	0
 3299 0042 00       		.byte	0
 3300 0043 06       		.uleb128 0x6
 3301 0044 0D       		.uleb128 0xd
 3302 0045 00       		.byte	0
 3303 0046 03       		.uleb128 0x3
 3304 0047 0E       		.uleb128 0xe
 3305 0048 3A       		.uleb128 0x3a
 3306 0049 0B       		.uleb128 0xb
 3307 004a 3B       		.uleb128 0x3b
 3308 004b 0B       		.uleb128 0xb
 3309 004c 49       		.uleb128 0x49
 3310 004d 13       		.uleb128 0x13
 3311 004e 38       		.uleb128 0x38
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 110


 3312 004f 0B       		.uleb128 0xb
 3313 0050 00       		.byte	0
 3314 0051 00       		.byte	0
 3315 0052 07       		.uleb128 0x7
 3316 0053 0F       		.uleb128 0xf
 3317 0054 00       		.byte	0
 3318 0055 0B       		.uleb128 0xb
 3319 0056 0B       		.uleb128 0xb
 3320 0057 49       		.uleb128 0x49
 3321 0058 13       		.uleb128 0x13
 3322 0059 00       		.byte	0
 3323 005a 00       		.byte	0
 3324 005b 08       		.uleb128 0x8
 3325 005c 26       		.uleb128 0x26
 3326 005d 00       		.byte	0
 3327 005e 49       		.uleb128 0x49
 3328 005f 13       		.uleb128 0x13
 3329 0060 00       		.byte	0
 3330 0061 00       		.byte	0
 3331 0062 09       		.uleb128 0x9
 3332 0063 15       		.uleb128 0x15
 3333 0064 01       		.byte	0x1
 3334 0065 27       		.uleb128 0x27
 3335 0066 19       		.uleb128 0x19
 3336 0067 49       		.uleb128 0x49
 3337 0068 13       		.uleb128 0x13
 3338 0069 01       		.uleb128 0x1
 3339 006a 13       		.uleb128 0x13
 3340 006b 00       		.byte	0
 3341 006c 00       		.byte	0
 3342 006d 0A       		.uleb128 0xa
 3343 006e 05       		.uleb128 0x5
 3344 006f 00       		.byte	0
 3345 0070 49       		.uleb128 0x49
 3346 0071 13       		.uleb128 0x13
 3347 0072 00       		.byte	0
 3348 0073 00       		.byte	0
 3349 0074 0B       		.uleb128 0xb
 3350 0075 15       		.uleb128 0x15
 3351 0076 01       		.byte	0x1
 3352 0077 27       		.uleb128 0x27
 3353 0078 19       		.uleb128 0x19
 3354 0079 01       		.uleb128 0x1
 3355 007a 13       		.uleb128 0x13
 3356 007b 00       		.byte	0
 3357 007c 00       		.byte	0
 3358 007d 0C       		.uleb128 0xc
 3359 007e 2E       		.uleb128 0x2e
 3360 007f 01       		.byte	0x1
 3361 0080 3F       		.uleb128 0x3f
 3362 0081 19       		.uleb128 0x19
 3363 0082 03       		.uleb128 0x3
 3364 0083 0E       		.uleb128 0xe
 3365 0084 3A       		.uleb128 0x3a
 3366 0085 0B       		.uleb128 0xb
 3367 0086 3B       		.uleb128 0x3b
 3368 0087 0B       		.uleb128 0xb
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 111


 3369 0088 27       		.uleb128 0x27
 3370 0089 19       		.uleb128 0x19
 3371 008a 11       		.uleb128 0x11
 3372 008b 01       		.uleb128 0x1
 3373 008c 12       		.uleb128 0x12
 3374 008d 06       		.uleb128 0x6
 3375 008e 40       		.uleb128 0x40
 3376 008f 18       		.uleb128 0x18
 3377 0090 9742     		.uleb128 0x2117
 3378 0092 19       		.uleb128 0x19
 3379 0093 01       		.uleb128 0x1
 3380 0094 13       		.uleb128 0x13
 3381 0095 00       		.byte	0
 3382 0096 00       		.byte	0
 3383 0097 0D       		.uleb128 0xd
 3384 0098 05       		.uleb128 0x5
 3385 0099 00       		.byte	0
 3386 009a 03       		.uleb128 0x3
 3387 009b 0E       		.uleb128 0xe
 3388 009c 3A       		.uleb128 0x3a
 3389 009d 0B       		.uleb128 0xb
 3390 009e 3B       		.uleb128 0x3b
 3391 009f 0B       		.uleb128 0xb
 3392 00a0 49       		.uleb128 0x49
 3393 00a1 13       		.uleb128 0x13
 3394 00a2 02       		.uleb128 0x2
 3395 00a3 17       		.uleb128 0x17
 3396 00a4 00       		.byte	0
 3397 00a5 00       		.byte	0
 3398 00a6 0E       		.uleb128 0xe
 3399 00a7 34       		.uleb128 0x34
 3400 00a8 00       		.byte	0
 3401 00a9 03       		.uleb128 0x3
 3402 00aa 0E       		.uleb128 0xe
 3403 00ab 3A       		.uleb128 0x3a
 3404 00ac 0B       		.uleb128 0xb
 3405 00ad 3B       		.uleb128 0x3b
 3406 00ae 0B       		.uleb128 0xb
 3407 00af 49       		.uleb128 0x49
 3408 00b0 13       		.uleb128 0x13
 3409 00b1 02       		.uleb128 0x2
 3410 00b2 17       		.uleb128 0x17
 3411 00b3 00       		.byte	0
 3412 00b4 00       		.byte	0
 3413 00b5 0F       		.uleb128 0xf
 3414 00b6 898201   		.uleb128 0x4109
 3415 00b9 01       		.byte	0x1
 3416 00ba 11       		.uleb128 0x11
 3417 00bb 01       		.uleb128 0x1
 3418 00bc 31       		.uleb128 0x31
 3419 00bd 13       		.uleb128 0x13
 3420 00be 01       		.uleb128 0x1
 3421 00bf 13       		.uleb128 0x13
 3422 00c0 00       		.byte	0
 3423 00c1 00       		.byte	0
 3424 00c2 10       		.uleb128 0x10
 3425 00c3 8A8201   		.uleb128 0x410a
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 112


 3426 00c6 00       		.byte	0
 3427 00c7 02       		.uleb128 0x2
 3428 00c8 18       		.uleb128 0x18
 3429 00c9 9142     		.uleb128 0x2111
 3430 00cb 18       		.uleb128 0x18
 3431 00cc 00       		.byte	0
 3432 00cd 00       		.byte	0
 3433 00ce 11       		.uleb128 0x11
 3434 00cf 898201   		.uleb128 0x4109
 3435 00d2 00       		.byte	0
 3436 00d3 11       		.uleb128 0x11
 3437 00d4 01       		.uleb128 0x1
 3438 00d5 31       		.uleb128 0x31
 3439 00d6 13       		.uleb128 0x13
 3440 00d7 00       		.byte	0
 3441 00d8 00       		.byte	0
 3442 00d9 12       		.uleb128 0x12
 3443 00da 898201   		.uleb128 0x4109
 3444 00dd 01       		.byte	0x1
 3445 00de 11       		.uleb128 0x11
 3446 00df 01       		.uleb128 0x1
 3447 00e0 31       		.uleb128 0x31
 3448 00e1 13       		.uleb128 0x13
 3449 00e2 00       		.byte	0
 3450 00e3 00       		.byte	0
 3451 00e4 13       		.uleb128 0x13
 3452 00e5 34       		.uleb128 0x34
 3453 00e6 00       		.byte	0
 3454 00e7 03       		.uleb128 0x3
 3455 00e8 08       		.uleb128 0x8
 3456 00e9 3A       		.uleb128 0x3a
 3457 00ea 0B       		.uleb128 0xb
 3458 00eb 3B       		.uleb128 0x3b
 3459 00ec 0B       		.uleb128 0xb
 3460 00ed 49       		.uleb128 0x49
 3461 00ee 13       		.uleb128 0x13
 3462 00ef 02       		.uleb128 0x2
 3463 00f0 17       		.uleb128 0x17
 3464 00f1 00       		.byte	0
 3465 00f2 00       		.byte	0
 3466 00f3 14       		.uleb128 0x14
 3467 00f4 2E       		.uleb128 0x2e
 3468 00f5 01       		.byte	0x1
 3469 00f6 3F       		.uleb128 0x3f
 3470 00f7 19       		.uleb128 0x19
 3471 00f8 03       		.uleb128 0x3
 3472 00f9 0E       		.uleb128 0xe
 3473 00fa 3A       		.uleb128 0x3a
 3474 00fb 0B       		.uleb128 0xb
 3475 00fc 3B       		.uleb128 0x3b
 3476 00fd 05       		.uleb128 0x5
 3477 00fe 27       		.uleb128 0x27
 3478 00ff 19       		.uleb128 0x19
 3479 0100 11       		.uleb128 0x11
 3480 0101 01       		.uleb128 0x1
 3481 0102 12       		.uleb128 0x12
 3482 0103 06       		.uleb128 0x6
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 113


 3483 0104 40       		.uleb128 0x40
 3484 0105 18       		.uleb128 0x18
 3485 0106 9742     		.uleb128 0x2117
 3486 0108 19       		.uleb128 0x19
 3487 0109 01       		.uleb128 0x1
 3488 010a 13       		.uleb128 0x13
 3489 010b 00       		.byte	0
 3490 010c 00       		.byte	0
 3491 010d 15       		.uleb128 0x15
 3492 010e 34       		.uleb128 0x34
 3493 010f 00       		.byte	0
 3494 0110 03       		.uleb128 0x3
 3495 0111 08       		.uleb128 0x8
 3496 0112 3A       		.uleb128 0x3a
 3497 0113 0B       		.uleb128 0xb
 3498 0114 3B       		.uleb128 0x3b
 3499 0115 05       		.uleb128 0x5
 3500 0116 49       		.uleb128 0x49
 3501 0117 13       		.uleb128 0x13
 3502 0118 02       		.uleb128 0x2
 3503 0119 17       		.uleb128 0x17
 3504 011a 00       		.byte	0
 3505 011b 00       		.byte	0
 3506 011c 16       		.uleb128 0x16
 3507 011d 34       		.uleb128 0x34
 3508 011e 00       		.byte	0
 3509 011f 03       		.uleb128 0x3
 3510 0120 0E       		.uleb128 0xe
 3511 0121 3A       		.uleb128 0x3a
 3512 0122 0B       		.uleb128 0xb
 3513 0123 3B       		.uleb128 0x3b
 3514 0124 05       		.uleb128 0x5
 3515 0125 49       		.uleb128 0x49
 3516 0126 13       		.uleb128 0x13
 3517 0127 02       		.uleb128 0x2
 3518 0128 17       		.uleb128 0x17
 3519 0129 00       		.byte	0
 3520 012a 00       		.byte	0
 3521 012b 17       		.uleb128 0x17
 3522 012c 2E       		.uleb128 0x2e
 3523 012d 01       		.byte	0x1
 3524 012e 3F       		.uleb128 0x3f
 3525 012f 19       		.uleb128 0x19
 3526 0130 03       		.uleb128 0x3
 3527 0131 0E       		.uleb128 0xe
 3528 0132 3A       		.uleb128 0x3a
 3529 0133 0B       		.uleb128 0xb
 3530 0134 3B       		.uleb128 0x3b
 3531 0135 05       		.uleb128 0x5
 3532 0136 27       		.uleb128 0x27
 3533 0137 19       		.uleb128 0x19
 3534 0138 49       		.uleb128 0x49
 3535 0139 13       		.uleb128 0x13
 3536 013a 11       		.uleb128 0x11
 3537 013b 01       		.uleb128 0x1
 3538 013c 12       		.uleb128 0x12
 3539 013d 06       		.uleb128 0x6
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 114


 3540 013e 40       		.uleb128 0x40
 3541 013f 18       		.uleb128 0x18
 3542 0140 9742     		.uleb128 0x2117
 3543 0142 19       		.uleb128 0x19
 3544 0143 01       		.uleb128 0x1
 3545 0144 13       		.uleb128 0x13
 3546 0145 00       		.byte	0
 3547 0146 00       		.byte	0
 3548 0147 18       		.uleb128 0x18
 3549 0148 05       		.uleb128 0x5
 3550 0149 00       		.byte	0
 3551 014a 03       		.uleb128 0x3
 3552 014b 0E       		.uleb128 0xe
 3553 014c 3A       		.uleb128 0x3a
 3554 014d 0B       		.uleb128 0xb
 3555 014e 3B       		.uleb128 0x3b
 3556 014f 05       		.uleb128 0x5
 3557 0150 49       		.uleb128 0x49
 3558 0151 13       		.uleb128 0x13
 3559 0152 02       		.uleb128 0x2
 3560 0153 17       		.uleb128 0x17
 3561 0154 00       		.byte	0
 3562 0155 00       		.byte	0
 3563 0156 19       		.uleb128 0x19
 3564 0157 05       		.uleb128 0x5
 3565 0158 00       		.byte	0
 3566 0159 03       		.uleb128 0x3
 3567 015a 0E       		.uleb128 0xe
 3568 015b 3A       		.uleb128 0x3a
 3569 015c 0B       		.uleb128 0xb
 3570 015d 3B       		.uleb128 0x3b
 3571 015e 05       		.uleb128 0x5
 3572 015f 49       		.uleb128 0x49
 3573 0160 13       		.uleb128 0x13
 3574 0161 02       		.uleb128 0x2
 3575 0162 18       		.uleb128 0x18
 3576 0163 00       		.byte	0
 3577 0164 00       		.byte	0
 3578 0165 1A       		.uleb128 0x1a
 3579 0166 34       		.uleb128 0x34
 3580 0167 00       		.byte	0
 3581 0168 03       		.uleb128 0x3
 3582 0169 0E       		.uleb128 0xe
 3583 016a 3A       		.uleb128 0x3a
 3584 016b 0B       		.uleb128 0xb
 3585 016c 3B       		.uleb128 0x3b
 3586 016d 05       		.uleb128 0x5
 3587 016e 49       		.uleb128 0x49
 3588 016f 13       		.uleb128 0x13
 3589 0170 00       		.byte	0
 3590 0171 00       		.byte	0
 3591 0172 1B       		.uleb128 0x1b
 3592 0173 05       		.uleb128 0x5
 3593 0174 00       		.byte	0
 3594 0175 03       		.uleb128 0x3
 3595 0176 08       		.uleb128 0x8
 3596 0177 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 115


 3597 0178 0B       		.uleb128 0xb
 3598 0179 3B       		.uleb128 0x3b
 3599 017a 05       		.uleb128 0x5
 3600 017b 49       		.uleb128 0x49
 3601 017c 13       		.uleb128 0x13
 3602 017d 02       		.uleb128 0x2
 3603 017e 17       		.uleb128 0x17
 3604 017f 00       		.byte	0
 3605 0180 00       		.byte	0
 3606 0181 1C       		.uleb128 0x1c
 3607 0182 05       		.uleb128 0x5
 3608 0183 00       		.byte	0
 3609 0184 03       		.uleb128 0x3
 3610 0185 08       		.uleb128 0x8
 3611 0186 3A       		.uleb128 0x3a
 3612 0187 0B       		.uleb128 0xb
 3613 0188 3B       		.uleb128 0x3b
 3614 0189 05       		.uleb128 0x5
 3615 018a 49       		.uleb128 0x49
 3616 018b 13       		.uleb128 0x13
 3617 018c 02       		.uleb128 0x2
 3618 018d 18       		.uleb128 0x18
 3619 018e 00       		.byte	0
 3620 018f 00       		.byte	0
 3621 0190 1D       		.uleb128 0x1d
 3622 0191 34       		.uleb128 0x34
 3623 0192 00       		.byte	0
 3624 0193 03       		.uleb128 0x3
 3625 0194 08       		.uleb128 0x8
 3626 0195 3A       		.uleb128 0x3a
 3627 0196 0B       		.uleb128 0xb
 3628 0197 3B       		.uleb128 0x3b
 3629 0198 05       		.uleb128 0x5
 3630 0199 49       		.uleb128 0x49
 3631 019a 13       		.uleb128 0x13
 3632 019b 00       		.byte	0
 3633 019c 00       		.byte	0
 3634 019d 1E       		.uleb128 0x1e
 3635 019e 2E       		.uleb128 0x2e
 3636 019f 00       		.byte	0
 3637 01a0 3F       		.uleb128 0x3f
 3638 01a1 19       		.uleb128 0x19
 3639 01a2 03       		.uleb128 0x3
 3640 01a3 0E       		.uleb128 0xe
 3641 01a4 3A       		.uleb128 0x3a
 3642 01a5 0B       		.uleb128 0xb
 3643 01a6 3B       		.uleb128 0x3b
 3644 01a7 05       		.uleb128 0x5
 3645 01a8 27       		.uleb128 0x27
 3646 01a9 19       		.uleb128 0x19
 3647 01aa 11       		.uleb128 0x11
 3648 01ab 01       		.uleb128 0x1
 3649 01ac 12       		.uleb128 0x12
 3650 01ad 06       		.uleb128 0x6
 3651 01ae 40       		.uleb128 0x40
 3652 01af 18       		.uleb128 0x18
 3653 01b0 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 116


 3654 01b2 19       		.uleb128 0x19
 3655 01b3 00       		.byte	0
 3656 01b4 00       		.byte	0
 3657 01b5 1F       		.uleb128 0x1f
 3658 01b6 01       		.uleb128 0x1
 3659 01b7 01       		.byte	0x1
 3660 01b8 49       		.uleb128 0x49
 3661 01b9 13       		.uleb128 0x13
 3662 01ba 01       		.uleb128 0x1
 3663 01bb 13       		.uleb128 0x13
 3664 01bc 00       		.byte	0
 3665 01bd 00       		.byte	0
 3666 01be 20       		.uleb128 0x20
 3667 01bf 21       		.uleb128 0x21
 3668 01c0 00       		.byte	0
 3669 01c1 49       		.uleb128 0x49
 3670 01c2 13       		.uleb128 0x13
 3671 01c3 2F       		.uleb128 0x2f
 3672 01c4 0B       		.uleb128 0xb
 3673 01c5 00       		.byte	0
 3674 01c6 00       		.byte	0
 3675 01c7 21       		.uleb128 0x21
 3676 01c8 34       		.uleb128 0x34
 3677 01c9 00       		.byte	0
 3678 01ca 03       		.uleb128 0x3
 3679 01cb 0E       		.uleb128 0xe
 3680 01cc 3A       		.uleb128 0x3a
 3681 01cd 0B       		.uleb128 0xb
 3682 01ce 3B       		.uleb128 0x3b
 3683 01cf 0B       		.uleb128 0xb
 3684 01d0 49       		.uleb128 0x49
 3685 01d1 13       		.uleb128 0x13
 3686 01d2 02       		.uleb128 0x2
 3687 01d3 18       		.uleb128 0x18
 3688 01d4 00       		.byte	0
 3689 01d5 00       		.byte	0
 3690 01d6 22       		.uleb128 0x22
 3691 01d7 34       		.uleb128 0x34
 3692 01d8 00       		.byte	0
 3693 01d9 03       		.uleb128 0x3
 3694 01da 0E       		.uleb128 0xe
 3695 01db 3A       		.uleb128 0x3a
 3696 01dc 0B       		.uleb128 0xb
 3697 01dd 3B       		.uleb128 0x3b
 3698 01de 0B       		.uleb128 0xb
 3699 01df 49       		.uleb128 0x49
 3700 01e0 13       		.uleb128 0x13
 3701 01e1 3F       		.uleb128 0x3f
 3702 01e2 19       		.uleb128 0x19
 3703 01e3 3C       		.uleb128 0x3c
 3704 01e4 19       		.uleb128 0x19
 3705 01e5 00       		.byte	0
 3706 01e6 00       		.byte	0
 3707 01e7 23       		.uleb128 0x23
 3708 01e8 34       		.uleb128 0x34
 3709 01e9 00       		.byte	0
 3710 01ea 03       		.uleb128 0x3
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 117


 3711 01eb 0E       		.uleb128 0xe
 3712 01ec 3A       		.uleb128 0x3a
 3713 01ed 0B       		.uleb128 0xb
 3714 01ee 3B       		.uleb128 0x3b
 3715 01ef 0B       		.uleb128 0xb
 3716 01f0 49       		.uleb128 0x49
 3717 01f1 13       		.uleb128 0x13
 3718 01f2 3F       		.uleb128 0x3f
 3719 01f3 19       		.uleb128 0x19
 3720 01f4 02       		.uleb128 0x2
 3721 01f5 18       		.uleb128 0x18
 3722 01f6 00       		.byte	0
 3723 01f7 00       		.byte	0
 3724 01f8 24       		.uleb128 0x24
 3725 01f9 2E       		.uleb128 0x2e
 3726 01fa 01       		.byte	0x1
 3727 01fb 3F       		.uleb128 0x3f
 3728 01fc 19       		.uleb128 0x19
 3729 01fd 03       		.uleb128 0x3
 3730 01fe 0E       		.uleb128 0xe
 3731 01ff 3A       		.uleb128 0x3a
 3732 0200 0B       		.uleb128 0xb
 3733 0201 3B       		.uleb128 0x3b
 3734 0202 0B       		.uleb128 0xb
 3735 0203 27       		.uleb128 0x27
 3736 0204 19       		.uleb128 0x19
 3737 0205 3C       		.uleb128 0x3c
 3738 0206 19       		.uleb128 0x19
 3739 0207 01       		.uleb128 0x1
 3740 0208 13       		.uleb128 0x13
 3741 0209 00       		.byte	0
 3742 020a 00       		.byte	0
 3743 020b 25       		.uleb128 0x25
 3744 020c 2E       		.uleb128 0x2e
 3745 020d 00       		.byte	0
 3746 020e 3F       		.uleb128 0x3f
 3747 020f 19       		.uleb128 0x19
 3748 0210 03       		.uleb128 0x3
 3749 0211 0E       		.uleb128 0xe
 3750 0212 3A       		.uleb128 0x3a
 3751 0213 0B       		.uleb128 0xb
 3752 0214 3B       		.uleb128 0x3b
 3753 0215 0B       		.uleb128 0xb
 3754 0216 27       		.uleb128 0x27
 3755 0217 19       		.uleb128 0x19
 3756 0218 49       		.uleb128 0x49
 3757 0219 13       		.uleb128 0x13
 3758 021a 3C       		.uleb128 0x3c
 3759 021b 19       		.uleb128 0x19
 3760 021c 00       		.byte	0
 3761 021d 00       		.byte	0
 3762 021e 26       		.uleb128 0x26
 3763 021f 2E       		.uleb128 0x2e
 3764 0220 00       		.byte	0
 3765 0221 3F       		.uleb128 0x3f
 3766 0222 19       		.uleb128 0x19
 3767 0223 03       		.uleb128 0x3
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 118


 3768 0224 0E       		.uleb128 0xe
 3769 0225 3A       		.uleb128 0x3a
 3770 0226 0B       		.uleb128 0xb
 3771 0227 3B       		.uleb128 0x3b
 3772 0228 0B       		.uleb128 0xb
 3773 0229 27       		.uleb128 0x27
 3774 022a 19       		.uleb128 0x19
 3775 022b 3C       		.uleb128 0x3c
 3776 022c 19       		.uleb128 0x19
 3777 022d 00       		.byte	0
 3778 022e 00       		.byte	0
 3779 022f 27       		.uleb128 0x27
 3780 0230 2E       		.uleb128 0x2e
 3781 0231 01       		.byte	0x1
 3782 0232 3F       		.uleb128 0x3f
 3783 0233 19       		.uleb128 0x19
 3784 0234 03       		.uleb128 0x3
 3785 0235 0E       		.uleb128 0xe
 3786 0236 3A       		.uleb128 0x3a
 3787 0237 0B       		.uleb128 0xb
 3788 0238 3B       		.uleb128 0x3b
 3789 0239 0B       		.uleb128 0xb
 3790 023a 27       		.uleb128 0x27
 3791 023b 19       		.uleb128 0x19
 3792 023c 49       		.uleb128 0x49
 3793 023d 13       		.uleb128 0x13
 3794 023e 3C       		.uleb128 0x3c
 3795 023f 19       		.uleb128 0x19
 3796 0240 01       		.uleb128 0x1
 3797 0241 13       		.uleb128 0x13
 3798 0242 00       		.byte	0
 3799 0243 00       		.byte	0
 3800 0244 28       		.uleb128 0x28
 3801 0245 2E       		.uleb128 0x2e
 3802 0246 01       		.byte	0x1
 3803 0247 3F       		.uleb128 0x3f
 3804 0248 19       		.uleb128 0x19
 3805 0249 03       		.uleb128 0x3
 3806 024a 0E       		.uleb128 0xe
 3807 024b 3A       		.uleb128 0x3a
 3808 024c 0B       		.uleb128 0xb
 3809 024d 3B       		.uleb128 0x3b
 3810 024e 0B       		.uleb128 0xb
 3811 024f 27       		.uleb128 0x27
 3812 0250 19       		.uleb128 0x19
 3813 0251 3C       		.uleb128 0x3c
 3814 0252 19       		.uleb128 0x19
 3815 0253 00       		.byte	0
 3816 0254 00       		.byte	0
 3817 0255 00       		.byte	0
 3818              		.section	.debug_loc,"",%progbits
 3819              	.Ldebug_loc0:
 3820              	.LLST0:
 3821 0000 00000000 		.4byte	.LVL0
 3822 0004 12000000 		.4byte	.LVL3
 3823 0008 0100     		.2byte	0x1
 3824 000a 50       		.byte	0x50
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 119


 3825 000b 12000000 		.4byte	.LVL3
 3826 000f 3C000000 		.4byte	.LFE35
 3827 0013 0400     		.2byte	0x4
 3828 0015 F3       		.byte	0xf3
 3829 0016 01       		.uleb128 0x1
 3830 0017 50       		.byte	0x50
 3831 0018 9F       		.byte	0x9f
 3832 0019 00000000 		.4byte	0
 3833 001d 00000000 		.4byte	0
 3834              	.LLST1:
 3835 0021 06000000 		.4byte	.LVL1
 3836 0025 08000000 		.4byte	.LVL2
 3837 0029 0500     		.2byte	0x5
 3838 002b 73       		.byte	0x73
 3839 002c 00       		.sleb128 0
 3840 002d 70       		.byte	0x70
 3841 002e 00       		.sleb128 0
 3842 002f 22       		.byte	0x22
 3843 0030 08000000 		.4byte	.LVL2
 3844 0034 12000000 		.4byte	.LVL3
 3845 0038 0200     		.2byte	0x2
 3846 003a 70       		.byte	0x70
 3847 003b 00       		.sleb128 0
 3848 003c 12000000 		.4byte	.LVL3
 3849 0040 24000000 		.4byte	.LVL4
 3850 0044 0100     		.2byte	0x1
 3851 0046 54       		.byte	0x54
 3852 0047 24000000 		.4byte	.LVL4
 3853 004b 3C000000 		.4byte	.LFE35
 3854 004f 0300     		.2byte	0x3
 3855 0051 F3       		.byte	0xf3
 3856 0052 01       		.uleb128 0x1
 3857 0053 50       		.byte	0x50
 3858 0054 00000000 		.4byte	0
 3859 0058 00000000 		.4byte	0
 3860              	.LLST2:
 3861 005c 00000000 		.4byte	.LVL5
 3862 0060 07000000 		.4byte	.LVL6-1
 3863 0064 0100     		.2byte	0x1
 3864 0066 50       		.byte	0x50
 3865 0067 07000000 		.4byte	.LVL6-1
 3866 006b 16000000 		.4byte	.LVL9
 3867 006f 0100     		.2byte	0x1
 3868 0071 54       		.byte	0x54
 3869 0072 16000000 		.4byte	.LVL9
 3870 0076 18000000 		.4byte	.LFE36
 3871 007a 0400     		.2byte	0x4
 3872 007c F3       		.byte	0xf3
 3873 007d 01       		.uleb128 0x1
 3874 007e 50       		.byte	0x50
 3875 007f 9F       		.byte	0x9f
 3876 0080 00000000 		.4byte	0
 3877 0084 00000000 		.4byte	0
 3878              	.LLST3:
 3879 0088 02000000 		.4byte	.LVL10
 3880 008c 06000000 		.4byte	.LVL11
 3881 0090 0200     		.2byte	0x2
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 120


 3882 0092 30       		.byte	0x30
 3883 0093 9F       		.byte	0x9f
 3884 0094 06000000 		.4byte	.LVL11
 3885 0098 12000000 		.4byte	.LVL14
 3886 009c 0100     		.2byte	0x1
 3887 009e 54       		.byte	0x54
 3888 009f 00000000 		.4byte	0
 3889 00a3 00000000 		.4byte	0
 3890              	.LLST4:
 3891 00a7 14000000 		.4byte	.LVL17
 3892 00ab 2C000000 		.4byte	.LVL22
 3893 00af 0100     		.2byte	0x1
 3894 00b1 54       		.byte	0x54
 3895 00b2 00000000 		.4byte	0
 3896 00b6 00000000 		.4byte	0
 3897              	.LLST5:
 3898 00ba 1C000000 		.4byte	.LVL18
 3899 00be 22000000 		.4byte	.LVL19
 3900 00c2 0100     		.2byte	0x1
 3901 00c4 50       		.byte	0x50
 3902 00c5 00000000 		.4byte	0
 3903 00c9 00000000 		.4byte	0
 3904              	.LLST6:
 3905 00cd 00000000 		.4byte	.LVL23
 3906 00d1 02000000 		.4byte	.LVL24
 3907 00d5 0100     		.2byte	0x1
 3908 00d7 50       		.byte	0x50
 3909 00d8 02000000 		.4byte	.LVL24
 3910 00dc 0C000000 		.4byte	.LFE43
 3911 00e0 0400     		.2byte	0x4
 3912 00e2 F3       		.byte	0xf3
 3913 00e3 01       		.uleb128 0x1
 3914 00e4 50       		.byte	0x50
 3915 00e5 9F       		.byte	0x9f
 3916 00e6 00000000 		.4byte	0
 3917 00ea 00000000 		.4byte	0
 3918              	.LLST7:
 3919 00ee 00000000 		.4byte	.LVL25
 3920 00f2 02000000 		.4byte	.LVL26
 3921 00f6 0100     		.2byte	0x1
 3922 00f8 50       		.byte	0x50
 3923 00f9 02000000 		.4byte	.LVL26
 3924 00fd 0C000000 		.4byte	.LFE44
 3925 0101 0400     		.2byte	0x4
 3926 0103 F3       		.byte	0xf3
 3927 0104 01       		.uleb128 0x1
 3928 0105 50       		.byte	0x50
 3929 0106 9F       		.byte	0x9f
 3930 0107 00000000 		.4byte	0
 3931 010b 00000000 		.4byte	0
 3932              	.LLST8:
 3933 010f 00000000 		.4byte	.LVL27
 3934 0113 04000000 		.4byte	.LVL28
 3935 0117 0100     		.2byte	0x1
 3936 0119 50       		.byte	0x50
 3937 011a 04000000 		.4byte	.LVL28
 3938 011e 0C000000 		.4byte	.LFE45
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 121


 3939 0122 0400     		.2byte	0x4
 3940 0124 F3       		.byte	0xf3
 3941 0125 01       		.uleb128 0x1
 3942 0126 50       		.byte	0x50
 3943 0127 9F       		.byte	0x9f
 3944 0128 00000000 		.4byte	0
 3945 012c 00000000 		.4byte	0
 3946              	.LLST9:
 3947 0130 00000000 		.4byte	.LVL29
 3948 0134 04000000 		.4byte	.LVL30
 3949 0138 0100     		.2byte	0x1
 3950 013a 50       		.byte	0x50
 3951 013b 04000000 		.4byte	.LVL30
 3952 013f 0C000000 		.4byte	.LFE46
 3953 0143 0400     		.2byte	0x4
 3954 0145 F3       		.byte	0xf3
 3955 0146 01       		.uleb128 0x1
 3956 0147 50       		.byte	0x50
 3957 0148 9F       		.byte	0x9f
 3958 0149 00000000 		.4byte	0
 3959 014d 00000000 		.4byte	0
 3960              	.LLST10:
 3961 0151 00000000 		.4byte	.LVL31
 3962 0155 04000000 		.4byte	.LVL32
 3963 0159 0100     		.2byte	0x1
 3964 015b 50       		.byte	0x50
 3965 015c 04000000 		.4byte	.LVL32
 3966 0160 0C000000 		.4byte	.LFE47
 3967 0164 0400     		.2byte	0x4
 3968 0166 F3       		.byte	0xf3
 3969 0167 01       		.uleb128 0x1
 3970 0168 50       		.byte	0x50
 3971 0169 9F       		.byte	0x9f
 3972 016a 00000000 		.4byte	0
 3973 016e 00000000 		.4byte	0
 3974              	.LLST11:
 3975 0172 00000000 		.4byte	.LVL33
 3976 0176 04000000 		.4byte	.LVL34
 3977 017a 0100     		.2byte	0x1
 3978 017c 50       		.byte	0x50
 3979 017d 04000000 		.4byte	.LVL34
 3980 0181 0C000000 		.4byte	.LFE48
 3981 0185 0400     		.2byte	0x4
 3982 0187 F3       		.byte	0xf3
 3983 0188 01       		.uleb128 0x1
 3984 0189 50       		.byte	0x50
 3985 018a 9F       		.byte	0x9f
 3986 018b 00000000 		.4byte	0
 3987 018f 00000000 		.4byte	0
 3988              	.LLST12:
 3989 0193 00000000 		.4byte	.LVL35
 3990 0197 04000000 		.4byte	.LVL36
 3991 019b 0100     		.2byte	0x1
 3992 019d 50       		.byte	0x50
 3993 019e 04000000 		.4byte	.LVL36
 3994 01a2 0C000000 		.4byte	.LFE49
 3995 01a6 0400     		.2byte	0x4
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 122


 3996 01a8 F3       		.byte	0xf3
 3997 01a9 01       		.uleb128 0x1
 3998 01aa 50       		.byte	0x50
 3999 01ab 9F       		.byte	0x9f
 4000 01ac 00000000 		.4byte	0
 4001 01b0 00000000 		.4byte	0
 4002              	.LLST13:
 4003 01b4 00000000 		.4byte	.LVL37
 4004 01b8 04000000 		.4byte	.LVL38
 4005 01bc 0100     		.2byte	0x1
 4006 01be 50       		.byte	0x50
 4007 01bf 04000000 		.4byte	.LVL38
 4008 01c3 0C000000 		.4byte	.LFE50
 4009 01c7 0400     		.2byte	0x4
 4010 01c9 F3       		.byte	0xf3
 4011 01ca 01       		.uleb128 0x1
 4012 01cb 50       		.byte	0x50
 4013 01cc 9F       		.byte	0x9f
 4014 01cd 00000000 		.4byte	0
 4015 01d1 00000000 		.4byte	0
 4016              	.LLST14:
 4017 01d5 00000000 		.4byte	.LVL44
 4018 01d9 04000000 		.4byte	.LVL45
 4019 01dd 0100     		.2byte	0x1
 4020 01df 50       		.byte	0x50
 4021 01e0 04000000 		.4byte	.LVL45
 4022 01e4 0C000000 		.4byte	.LFE56
 4023 01e8 0400     		.2byte	0x4
 4024 01ea F3       		.byte	0xf3
 4025 01eb 01       		.uleb128 0x1
 4026 01ec 50       		.byte	0x50
 4027 01ed 9F       		.byte	0x9f
 4028 01ee 00000000 		.4byte	0
 4029 01f2 00000000 		.4byte	0
 4030              	.LLST15:
 4031 01f6 00000000 		.4byte	.LVL46
 4032 01fa 1C000000 		.4byte	.LVL52
 4033 01fe 0100     		.2byte	0x1
 4034 0200 50       		.byte	0x50
 4035 0201 1C000000 		.4byte	.LVL52
 4036 0205 90000000 		.4byte	.LVL60
 4037 0209 0100     		.2byte	0x1
 4038 020b 54       		.byte	0x54
 4039 020c 90000000 		.4byte	.LVL60
 4040 0210 AC000000 		.4byte	.LFE57
 4041 0214 0400     		.2byte	0x4
 4042 0216 F3       		.byte	0xf3
 4043 0217 01       		.uleb128 0x1
 4044 0218 50       		.byte	0x50
 4045 0219 9F       		.byte	0x9f
 4046 021a 00000000 		.4byte	0
 4047 021e 00000000 		.4byte	0
 4048              	.LLST16:
 4049 0222 1A000000 		.4byte	.LVL51
 4050 0226 23000000 		.4byte	.LVL53-1
 4051 022a 0800     		.2byte	0x8
 4052 022c 75       		.byte	0x75
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 123


 4053 022d 00       		.sleb128 0
 4054 022e 03       		.byte	0x3
 4055 022f 00000000 		.4byte	.LANCHOR1
 4056 0233 22       		.byte	0x22
 4057 0234 23000000 		.4byte	.LVL53-1
 4058 0238 90000000 		.4byte	.LVL62
 4059 023c 0100     		.2byte	0x1
 4060 023e 58       		.byte	0x58
 4061 023f 00000000 		.4byte	0
 4062 0243 00000000 		.4byte	0
 4063              	.LLST17:
 4064 0247 10000000 		.4byte	.LVL47
 4065 024b 12000000 		.4byte	.LVL48
 4066 024f 0500     		.2byte	0x5
 4067 0251 73       		.byte	0x73
 4068 0252 00       		.sleb128 0
 4069 0253 75       		.byte	0x75
 4070 0254 00       		.sleb128 0
 4071 0255 22       		.byte	0x22
 4072 0256 12000000 		.4byte	.LVL48
 4073 025a 23000000 		.4byte	.LVL53-1
 4074 025e 0800     		.2byte	0x8
 4075 0260 75       		.byte	0x75
 4076 0261 00       		.sleb128 0
 4077 0262 03       		.byte	0x3
 4078 0263 00000000 		.4byte	CapSense_fingerThreshold
 4079 0267 22       		.byte	0x22
 4080 0268 23000000 		.4byte	.LVL53-1
 4081 026c 90000000 		.4byte	.LVL61
 4082 0270 0100     		.2byte	0x1
 4083 0272 57       		.byte	0x57
 4084 0273 00000000 		.4byte	0
 4085 0277 00000000 		.4byte	0
 4086              	.LLST18:
 4087 027b 14000000 		.4byte	.LVL49
 4088 027f 16000000 		.4byte	.LVL50
 4089 0283 0500     		.2byte	0x5
 4090 0285 73       		.byte	0x73
 4091 0286 00       		.sleb128 0
 4092 0287 75       		.byte	0x75
 4093 0288 00       		.sleb128 0
 4094 0289 22       		.byte	0x22
 4095 028a 16000000 		.4byte	.LVL50
 4096 028e 23000000 		.4byte	.LVL53-1
 4097 0292 0800     		.2byte	0x8
 4098 0294 75       		.byte	0x75
 4099 0295 00       		.sleb128 0
 4100 0296 03       		.byte	0x3
 4101 0297 00000000 		.4byte	CapSense_hysteresis
 4102 029b 22       		.byte	0x22
 4103 029c 23000000 		.4byte	.LVL53-1
 4104 02a0 30000000 		.4byte	.LVL54
 4105 02a4 0100     		.2byte	0x1
 4106 02a6 56       		.byte	0x56
 4107 02a7 4A000000 		.4byte	.LVL56
 4108 02ab 52000000 		.4byte	.LVL57
 4109 02af 0100     		.2byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 124


 4110 02b1 56       		.byte	0x56
 4111 02b2 00000000 		.4byte	0
 4112 02b6 00000000 		.4byte	0
 4113              	.LLST19:
 4114 02ba 00000000 		.4byte	.LVL63
 4115 02be 08000000 		.4byte	.LVL65
 4116 02c2 0100     		.2byte	0x1
 4117 02c4 50       		.byte	0x50
 4118 02c5 08000000 		.4byte	.LVL65
 4119 02c9 2C000000 		.4byte	.LFE58
 4120 02cd 0400     		.2byte	0x4
 4121 02cf F3       		.byte	0xf3
 4122 02d0 01       		.uleb128 0x1
 4123 02d1 50       		.byte	0x50
 4124 02d2 9F       		.byte	0x9f
 4125 02d3 00000000 		.4byte	0
 4126 02d7 00000000 		.4byte	0
 4127              	.LLST20:
 4128 02db 06000000 		.4byte	.LVL64
 4129 02df 24000000 		.4byte	.LVL71
 4130 02e3 0100     		.2byte	0x1
 4131 02e5 54       		.byte	0x54
 4132 02e6 00000000 		.4byte	0
 4133 02ea 00000000 		.4byte	0
 4134              	.LLST21:
 4135 02ee 0C000000 		.4byte	.LVL66
 4136 02f2 24000000 		.4byte	.LVL72
 4137 02f6 0100     		.2byte	0x1
 4138 02f8 55       		.byte	0x55
 4139 02f9 24000000 		.4byte	.LVL72
 4140 02fd 2C000000 		.4byte	.LFE58
 4141 0301 1E00     		.2byte	0x1e
 4142 0303 F3       		.byte	0xf3
 4143 0304 01       		.uleb128 0x1
 4144 0305 50       		.byte	0x50
 4145 0306 03       		.byte	0x3
 4146 0307 04000000 		.4byte	.LANCHOR2+4
 4147 030b 22       		.byte	0x22
 4148 030c 94       		.byte	0x94
 4149 030d 01       		.byte	0x1
 4150 030e 08       		.byte	0x8
 4151 030f FF       		.byte	0xff
 4152 0310 1A       		.byte	0x1a
 4153 0311 F3       		.byte	0xf3
 4154 0312 01       		.uleb128 0x1
 4155 0313 50       		.byte	0x50
 4156 0314 03       		.byte	0x3
 4157 0315 00000000 		.4byte	.LANCHOR2
 4158 0319 22       		.byte	0x22
 4159 031a 94       		.byte	0x94
 4160 031b 01       		.byte	0x1
 4161 031c 08       		.byte	0x8
 4162 031d FF       		.byte	0xff
 4163 031e 1A       		.byte	0x1a
 4164 031f 22       		.byte	0x22
 4165 0320 9F       		.byte	0x9f
 4166 0321 00000000 		.4byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 125


 4167 0325 00000000 		.4byte	0
 4168              	.LLST22:
 4169 0329 0C000000 		.4byte	.LVL66
 4170 032d 10000000 		.4byte	.LVL67
 4171 0331 0200     		.2byte	0x2
 4172 0333 30       		.byte	0x30
 4173 0334 9F       		.byte	0x9f
 4174 0335 10000000 		.4byte	.LVL67
 4175 0339 24000000 		.4byte	.LVL73
 4176 033d 0100     		.2byte	0x1
 4177 033f 56       		.byte	0x56
 4178 0340 24000000 		.4byte	.LVL73
 4179 0344 2C000000 		.4byte	.LFE58
 4180 0348 0100     		.2byte	0x1
 4181 034a 50       		.byte	0x50
 4182 034b 00000000 		.4byte	0
 4183 034f 00000000 		.4byte	0
 4184              	.LLST23:
 4185 0353 02000000 		.4byte	.LVL74
 4186 0357 0A000000 		.4byte	.LVL75
 4187 035b 0200     		.2byte	0x2
 4188 035d 30       		.byte	0x30
 4189 035e 9F       		.byte	0x9f
 4190 035f 0A000000 		.4byte	.LVL75
 4191 0363 1E000000 		.4byte	.LVL79
 4192 0367 0100     		.2byte	0x1
 4193 0369 54       		.byte	0x54
 4194 036a 00000000 		.4byte	0
 4195 036e 00000000 		.4byte	0
 4196              	.LLST24:
 4197 0372 02000000 		.4byte	.LVL74
 4198 0376 0A000000 		.4byte	.LVL75
 4199 037a 0200     		.2byte	0x2
 4200 037c 30       		.byte	0x30
 4201 037d 9F       		.byte	0x9f
 4202 037e 0A000000 		.4byte	.LVL75
 4203 0382 1E000000 		.4byte	.LVL80
 4204 0386 0100     		.2byte	0x1
 4205 0388 55       		.byte	0x55
 4206 0389 1E000000 		.4byte	.LVL80
 4207 038d 20000000 		.4byte	.LFE59
 4208 0391 0100     		.2byte	0x1
 4209 0393 50       		.byte	0x50
 4210 0394 00000000 		.4byte	0
 4211 0398 00000000 		.4byte	0
 4212              	.LLST25:
 4213 039c 00000000 		.4byte	.LVL81
 4214 03a0 08000000 		.4byte	.LVL83
 4215 03a4 0100     		.2byte	0x1
 4216 03a6 50       		.byte	0x50
 4217 03a7 08000000 		.4byte	.LVL83
 4218 03ab 2C000000 		.4byte	.LFE60
 4219 03af 0400     		.2byte	0x4
 4220 03b1 F3       		.byte	0xf3
 4221 03b2 01       		.uleb128 0x1
 4222 03b3 50       		.byte	0x50
 4223 03b4 9F       		.byte	0x9f
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 126


 4224 03b5 00000000 		.4byte	0
 4225 03b9 00000000 		.4byte	0
 4226              	.LLST26:
 4227 03bd 06000000 		.4byte	.LVL82
 4228 03c1 08000000 		.4byte	.LVL83
 4229 03c5 0500     		.2byte	0x5
 4230 03c7 73       		.byte	0x73
 4231 03c8 00       		.sleb128 0
 4232 03c9 70       		.byte	0x70
 4233 03ca 00       		.sleb128 0
 4234 03cb 22       		.byte	0x22
 4235 03cc 08000000 		.4byte	.LVL83
 4236 03d0 10000000 		.4byte	.LVL85
 4237 03d4 0200     		.2byte	0x2
 4238 03d6 70       		.byte	0x70
 4239 03d7 00       		.sleb128 0
 4240 03d8 10000000 		.4byte	.LVL85
 4241 03dc 1C000000 		.4byte	.LVL87
 4242 03e0 0100     		.2byte	0x1
 4243 03e2 54       		.byte	0x54
 4244 03e3 1C000000 		.4byte	.LVL87
 4245 03e7 1E000000 		.4byte	.LVL88
 4246 03eb 0300     		.2byte	0x3
 4247 03ed 74       		.byte	0x74
 4248 03ee 7F       		.sleb128 -1
 4249 03ef 9F       		.byte	0x9f
 4250 03f0 1E000000 		.4byte	.LVL88
 4251 03f4 22000000 		.4byte	.LVL89
 4252 03f8 0100     		.2byte	0x1
 4253 03fa 54       		.byte	0x54
 4254 03fb 00000000 		.4byte	0
 4255 03ff 00000000 		.4byte	0
 4256              	.LLST27:
 4257 0403 0E000000 		.4byte	.LVL84
 4258 0407 22000000 		.4byte	.LVL90
 4259 040b 0100     		.2byte	0x1
 4260 040d 56       		.byte	0x56
 4261 040e 22000000 		.4byte	.LVL90
 4262 0412 2C000000 		.4byte	.LFE60
 4263 0416 1E00     		.2byte	0x1e
 4264 0418 F3       		.byte	0xf3
 4265 0419 01       		.uleb128 0x1
 4266 041a 50       		.byte	0x50
 4267 041b 03       		.byte	0x3
 4268 041c 04000000 		.4byte	.LANCHOR2+4
 4269 0420 22       		.byte	0x22
 4270 0421 94       		.byte	0x94
 4271 0422 01       		.byte	0x1
 4272 0423 08       		.byte	0x8
 4273 0424 FF       		.byte	0xff
 4274 0425 1A       		.byte	0x1a
 4275 0426 F3       		.byte	0xf3
 4276 0427 01       		.uleb128 0x1
 4277 0428 50       		.byte	0x50
 4278 0429 03       		.byte	0x3
 4279 042a 00000000 		.4byte	.LANCHOR2
 4280 042e 22       		.byte	0x22
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 127


 4281 042f 94       		.byte	0x94
 4282 0430 01       		.byte	0x1
 4283 0431 08       		.byte	0x8
 4284 0432 FF       		.byte	0xff
 4285 0433 1A       		.byte	0x1a
 4286 0434 22       		.byte	0x22
 4287 0435 9F       		.byte	0x9f
 4288 0436 00000000 		.4byte	0
 4289 043a 00000000 		.4byte	0
 4290              	.LLST28:
 4291 043e 00000000 		.4byte	.LVL91
 4292 0442 08000000 		.4byte	.LVL93
 4293 0446 0100     		.2byte	0x1
 4294 0448 50       		.byte	0x50
 4295 0449 08000000 		.4byte	.LVL93
 4296 044d 2C000000 		.4byte	.LFE61
 4297 0451 0400     		.2byte	0x4
 4298 0453 F3       		.byte	0xf3
 4299 0454 01       		.uleb128 0x1
 4300 0455 50       		.byte	0x50
 4301 0456 9F       		.byte	0x9f
 4302 0457 00000000 		.4byte	0
 4303 045b 00000000 		.4byte	0
 4304              	.LLST29:
 4305 045f 06000000 		.4byte	.LVL92
 4306 0463 08000000 		.4byte	.LVL93
 4307 0467 0500     		.2byte	0x5
 4308 0469 73       		.byte	0x73
 4309 046a 00       		.sleb128 0
 4310 046b 70       		.byte	0x70
 4311 046c 00       		.sleb128 0
 4312 046d 22       		.byte	0x22
 4313 046e 08000000 		.4byte	.LVL93
 4314 0472 10000000 		.4byte	.LVL95
 4315 0476 0200     		.2byte	0x2
 4316 0478 70       		.byte	0x70
 4317 0479 00       		.sleb128 0
 4318 047a 10000000 		.4byte	.LVL95
 4319 047e 1C000000 		.4byte	.LVL97
 4320 0482 0100     		.2byte	0x1
 4321 0484 54       		.byte	0x54
 4322 0485 1C000000 		.4byte	.LVL97
 4323 0489 1E000000 		.4byte	.LVL98
 4324 048d 0300     		.2byte	0x3
 4325 048f 74       		.byte	0x74
 4326 0490 7F       		.sleb128 -1
 4327 0491 9F       		.byte	0x9f
 4328 0492 1E000000 		.4byte	.LVL98
 4329 0496 22000000 		.4byte	.LVL99
 4330 049a 0100     		.2byte	0x1
 4331 049c 54       		.byte	0x54
 4332 049d 00000000 		.4byte	0
 4333 04a1 00000000 		.4byte	0
 4334              	.LLST30:
 4335 04a5 0E000000 		.4byte	.LVL94
 4336 04a9 22000000 		.4byte	.LVL100
 4337 04ad 0100     		.2byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 128


 4338 04af 56       		.byte	0x56
 4339 04b0 22000000 		.4byte	.LVL100
 4340 04b4 2C000000 		.4byte	.LFE61
 4341 04b8 1E00     		.2byte	0x1e
 4342 04ba F3       		.byte	0xf3
 4343 04bb 01       		.uleb128 0x1
 4344 04bc 50       		.byte	0x50
 4345 04bd 03       		.byte	0x3
 4346 04be 04000000 		.4byte	.LANCHOR2+4
 4347 04c2 22       		.byte	0x22
 4348 04c3 94       		.byte	0x94
 4349 04c4 01       		.byte	0x1
 4350 04c5 08       		.byte	0x8
 4351 04c6 FF       		.byte	0xff
 4352 04c7 1A       		.byte	0x1a
 4353 04c8 F3       		.byte	0xf3
 4354 04c9 01       		.uleb128 0x1
 4355 04ca 50       		.byte	0x50
 4356 04cb 03       		.byte	0x3
 4357 04cc 00000000 		.4byte	.LANCHOR2
 4358 04d0 22       		.byte	0x22
 4359 04d1 94       		.byte	0x94
 4360 04d2 01       		.byte	0x1
 4361 04d3 08       		.byte	0x8
 4362 04d4 FF       		.byte	0xff
 4363 04d5 1A       		.byte	0x1a
 4364 04d6 22       		.byte	0x22
 4365 04d7 9F       		.byte	0x9f
 4366 04d8 00000000 		.4byte	0
 4367 04dc 00000000 		.4byte	0
 4368              	.LLST31:
 4369 04e0 00000000 		.4byte	.LVL101
 4370 04e4 08000000 		.4byte	.LVL102
 4371 04e8 0100     		.2byte	0x1
 4372 04ea 50       		.byte	0x50
 4373 04eb 08000000 		.4byte	.LVL102
 4374 04ef 0A000000 		.4byte	.LVL103
 4375 04f3 0400     		.2byte	0x4
 4376 04f5 F3       		.byte	0xf3
 4377 04f6 01       		.uleb128 0x1
 4378 04f7 50       		.byte	0x50
 4379 04f8 9F       		.byte	0x9f
 4380 04f9 0A000000 		.4byte	.LVL103
 4381 04fd 1A000000 		.4byte	.LVL105
 4382 0501 0100     		.2byte	0x1
 4383 0503 50       		.byte	0x50
 4384 0504 00000000 		.4byte	0
 4385 0508 00000000 		.4byte	0
 4386              	.LLST32:
 4387 050c 00000000 		.4byte	.LVL101
 4388 0510 0A000000 		.4byte	.LVL103
 4389 0514 0100     		.2byte	0x1
 4390 0516 51       		.byte	0x51
 4391 0517 0A000000 		.4byte	.LVL103
 4392 051b 1C000000 		.4byte	.LFE62
 4393 051f 0100     		.2byte	0x1
 4394 0521 51       		.byte	0x51
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 129


 4395 0522 00000000 		.4byte	0
 4396 0526 00000000 		.4byte	0
 4397              	.LLST33:
 4398 052a 00000000 		.4byte	.LVL106
 4399 052e 02000000 		.4byte	.LVL107
 4400 0532 0100     		.2byte	0x1
 4401 0534 50       		.byte	0x50
 4402 0535 02000000 		.4byte	.LVL107
 4403 0539 0A000000 		.4byte	.LFE63
 4404 053d 0400     		.2byte	0x4
 4405 053f F3       		.byte	0xf3
 4406 0540 01       		.uleb128 0x1
 4407 0541 50       		.byte	0x50
 4408 0542 9F       		.byte	0x9f
 4409 0543 00000000 		.4byte	0
 4410 0547 00000000 		.4byte	0
 4411              	.LLST34:
 4412 054b 00000000 		.4byte	.LVL106
 4413 054f 04000000 		.4byte	.LVL108
 4414 0553 0100     		.2byte	0x1
 4415 0555 51       		.byte	0x51
 4416 0556 04000000 		.4byte	.LVL108
 4417 055a 0A000000 		.4byte	.LFE63
 4418 055e 0400     		.2byte	0x4
 4419 0560 F3       		.byte	0xf3
 4420 0561 01       		.uleb128 0x1
 4421 0562 51       		.byte	0x51
 4422 0563 9F       		.byte	0x9f
 4423 0564 00000000 		.4byte	0
 4424 0568 00000000 		.4byte	0
 4425              	.LLST35:
 4426 056c 02000000 		.4byte	.LVL107
 4427 0570 06000000 		.4byte	.LVL109
 4428 0574 0100     		.2byte	0x1
 4429 0576 50       		.byte	0x50
 4430 0577 06000000 		.4byte	.LVL109
 4431 057b 08000000 		.4byte	.LVL110
 4432 057f 0500     		.2byte	0x5
 4433 0581 70       		.byte	0x70
 4434 0582 00       		.sleb128 0
 4435 0583 32       		.byte	0x32
 4436 0584 25       		.byte	0x25
 4437 0585 9F       		.byte	0x9f
 4438 0586 08000000 		.4byte	.LVL110
 4439 058a 0A000000 		.4byte	.LFE63
 4440 058e 0100     		.2byte	0x1
 4441 0590 50       		.byte	0x50
 4442 0591 00000000 		.4byte	0
 4443 0595 00000000 		.4byte	0
 4444              	.LLST36:
 4445 0599 00000000 		.4byte	.LVL111
 4446 059d 2A000000 		.4byte	.LVL115
 4447 05a1 0100     		.2byte	0x1
 4448 05a3 50       		.byte	0x50
 4449 05a4 2A000000 		.4byte	.LVL115
 4450 05a8 D2000000 		.4byte	.LVL132
 4451 05ac 0100     		.2byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 130


 4452 05ae 54       		.byte	0x54
 4453 05af D2000000 		.4byte	.LVL132
 4454 05b3 D8000000 		.4byte	.LVL133
 4455 05b7 0400     		.2byte	0x4
 4456 05b9 F3       		.byte	0xf3
 4457 05ba 01       		.uleb128 0x1
 4458 05bb 50       		.byte	0x50
 4459 05bc 9F       		.byte	0x9f
 4460 05bd D8000000 		.4byte	.LVL133
 4461 05c1 DC000000 		.4byte	.LVL135
 4462 05c5 0100     		.2byte	0x1
 4463 05c7 54       		.byte	0x54
 4464 05c8 DC000000 		.4byte	.LVL135
 4465 05cc E0000000 		.4byte	.LVL136
 4466 05d0 0400     		.2byte	0x4
 4467 05d2 F3       		.byte	0xf3
 4468 05d3 01       		.uleb128 0x1
 4469 05d4 50       		.byte	0x50
 4470 05d5 9F       		.byte	0x9f
 4471 05d6 E0000000 		.4byte	.LVL136
 4472 05da E4000000 		.4byte	.LVL137
 4473 05de 0100     		.2byte	0x1
 4474 05e0 54       		.byte	0x54
 4475 05e1 E4000000 		.4byte	.LVL137
 4476 05e5 14010000 		.4byte	.LFE39
 4477 05e9 0400     		.2byte	0x4
 4478 05eb F3       		.byte	0xf3
 4479 05ec 01       		.uleb128 0x1
 4480 05ed 50       		.byte	0x50
 4481 05ee 9F       		.byte	0x9f
 4482 05ef 00000000 		.4byte	0
 4483 05f3 00000000 		.4byte	0
 4484              	.LLST37:
 4485 05f7 A6000000 		.4byte	.LVL125
 4486 05fb B0000000 		.4byte	.LVL127
 4487 05ff 0100     		.2byte	0x1
 4488 0601 50       		.byte	0x50
 4489 0602 B0000000 		.4byte	.LVL127
 4490 0606 B2000000 		.4byte	.LVL128
 4491 060a 0100     		.2byte	0x1
 4492 060c 55       		.byte	0x55
 4493 060d B2000000 		.4byte	.LVL128
 4494 0611 BE000000 		.4byte	.LVL129
 4495 0615 0100     		.2byte	0x1
 4496 0617 53       		.byte	0x53
 4497 0618 00000000 		.4byte	0
 4498 061c 00000000 		.4byte	0
 4499              	.LLST38:
 4500 0620 52000000 		.4byte	.LVL120
 4501 0624 58000000 		.4byte	.LVL121
 4502 0628 0200     		.2byte	0x2
 4503 062a 31       		.byte	0x31
 4504 062b 9F       		.byte	0x9f
 4505 062c 5C000000 		.4byte	.LVL122
 4506 0630 60000000 		.4byte	.LVL123
 4507 0634 0200     		.2byte	0x2
 4508 0636 30       		.byte	0x30
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 131


 4509 0637 9F       		.byte	0x9f
 4510 0638 60000000 		.4byte	.LVL123
 4511 063c CA000000 		.4byte	.LVL130
 4512 0640 0100     		.2byte	0x1
 4513 0642 59       		.byte	0x59
 4514 0643 CA000000 		.4byte	.LVL130
 4515 0647 D0000000 		.4byte	.LVL131
 4516 064b 0100     		.2byte	0x1
 4517 064d 53       		.byte	0x53
 4518 064e D0000000 		.4byte	.LVL131
 4519 0652 D8000000 		.4byte	.LVL133
 4520 0656 0100     		.2byte	0x1
 4521 0658 59       		.byte	0x59
 4522 0659 D8000000 		.4byte	.LVL133
 4523 065d DA000000 		.4byte	.LVL134
 4524 0661 0100     		.2byte	0x1
 4525 0663 53       		.byte	0x53
 4526 0664 DA000000 		.4byte	.LVL134
 4527 0668 E8000000 		.4byte	.LVL140
 4528 066c 0100     		.2byte	0x1
 4529 066e 59       		.byte	0x59
 4530 066f 00000000 		.4byte	0
 4531 0673 00000000 		.4byte	0
 4532              	.LLST39:
 4533 0677 52000000 		.4byte	.LVL120
 4534 067b 58000000 		.4byte	.LVL121
 4535 067f 0100     		.2byte	0x1
 4536 0681 56       		.byte	0x56
 4537 0682 5C000000 		.4byte	.LVL122
 4538 0686 E8000000 		.4byte	.LVL138
 4539 068a 0100     		.2byte	0x1
 4540 068c 56       		.byte	0x56
 4541 068d 00000000 		.4byte	0
 4542 0691 00000000 		.4byte	0
 4543              	.LLST40:
 4544 0695 1A000000 		.4byte	.LVL113
 4545 0699 1C000000 		.4byte	.LVL114
 4546 069d 0500     		.2byte	0x5
 4547 069f 73       		.byte	0x73
 4548 06a0 00       		.sleb128 0
 4549 06a1 72       		.byte	0x72
 4550 06a2 00       		.sleb128 0
 4551 06a3 22       		.byte	0x22
 4552 06a4 1C000000 		.4byte	.LVL114
 4553 06a8 2D000000 		.4byte	.LVL116-1
 4554 06ac 0200     		.2byte	0x2
 4555 06ae 72       		.byte	0x72
 4556 06af 00       		.sleb128 0
 4557 06b0 2D000000 		.4byte	.LVL116-1
 4558 06b4 30000000 		.4byte	.LVL117
 4559 06b8 0100     		.2byte	0x1
 4560 06ba 55       		.byte	0x55
 4561 06bb 30000000 		.4byte	.LVL117
 4562 06bf 34000000 		.4byte	.LVL118
 4563 06c3 0100     		.2byte	0x1
 4564 06c5 50       		.byte	0x50
 4565 06c6 34000000 		.4byte	.LVL118
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 132


 4566 06ca B0000000 		.4byte	.LVL127
 4567 06ce 0100     		.2byte	0x1
 4568 06d0 55       		.byte	0x55
 4569 06d1 00000000 		.4byte	0
 4570 06d5 00000000 		.4byte	0
 4571              	.LLST41:
 4572 06d9 14000000 		.4byte	.LVL112
 4573 06dd 2D000000 		.4byte	.LVL116-1
 4574 06e1 0800     		.2byte	0x8
 4575 06e3 77       		.byte	0x77
 4576 06e4 00       		.sleb128 0
 4577 06e5 03       		.byte	0x3
 4578 06e6 00000000 		.4byte	CapSense_noiseThreshold
 4579 06ea 22       		.byte	0x22
 4580 06eb 2D000000 		.4byte	.LVL116-1
 4581 06ef E8000000 		.4byte	.LVL139
 4582 06f3 0100     		.2byte	0x1
 4583 06f5 58       		.byte	0x58
 4584 06f6 00000000 		.4byte	0
 4585 06fa 00000000 		.4byte	0
 4586              	.LLST42:
 4587 06fe 00000000 		.4byte	.LVL141
 4588 0702 07000000 		.4byte	.LVL142-1
 4589 0706 0100     		.2byte	0x1
 4590 0708 50       		.byte	0x50
 4591 0709 07000000 		.4byte	.LVL142-1
 4592 070d 0E000000 		.4byte	.LVL144
 4593 0711 0100     		.2byte	0x1
 4594 0713 54       		.byte	0x54
 4595 0714 0E000000 		.4byte	.LVL144
 4596 0718 10000000 		.4byte	.LFE40
 4597 071c 0400     		.2byte	0x4
 4598 071e F3       		.byte	0xf3
 4599 071f 01       		.uleb128 0x1
 4600 0720 50       		.byte	0x50
 4601 0721 9F       		.byte	0x9f
 4602 0722 00000000 		.4byte	0
 4603 0726 00000000 		.4byte	0
 4604              	.LLST43:
 4605 072a 02000000 		.4byte	.LVL145
 4606 072e 08000000 		.4byte	.LVL146
 4607 0732 0200     		.2byte	0x2
 4608 0734 30       		.byte	0x30
 4609 0735 9F       		.byte	0x9f
 4610 0736 08000000 		.4byte	.LVL146
 4611 073a 20000000 		.4byte	.LVL151
 4612 073e 0100     		.2byte	0x1
 4613 0740 54       		.byte	0x54
 4614 0741 00000000 		.4byte	0
 4615 0745 00000000 		.4byte	0
 4616              	.LLST44:
 4617 0749 10000000 		.4byte	.LVL147
 4618 074d 16000000 		.4byte	.LVL148
 4619 0751 0100     		.2byte	0x1
 4620 0753 50       		.byte	0x50
 4621 0754 00000000 		.4byte	0
 4622 0758 00000000 		.4byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 133


 4623              	.LLST45:
 4624 075c 00000000 		.4byte	.LVL152
 4625 0760 10000000 		.4byte	.LVL156
 4626 0764 0100     		.2byte	0x1
 4627 0766 50       		.byte	0x50
 4628 0767 10000000 		.4byte	.LVL156
 4629 076b 34000000 		.4byte	.LFE42
 4630 076f 0400     		.2byte	0x4
 4631 0771 F3       		.byte	0xf3
 4632 0772 01       		.uleb128 0x1
 4633 0773 50       		.byte	0x50
 4634 0774 9F       		.byte	0x9f
 4635 0775 00000000 		.4byte	0
 4636 0779 00000000 		.4byte	0
 4637              	.LLST46:
 4638 077d 08000000 		.4byte	.LVL153
 4639 0781 0C000000 		.4byte	.LVL155
 4640 0785 0100     		.2byte	0x1
 4641 0787 55       		.byte	0x55
 4642 0788 0C000000 		.4byte	.LVL155
 4643 078c 10000000 		.4byte	.LVL156
 4644 0790 0800     		.2byte	0x8
 4645 0792 72       		.byte	0x72
 4646 0793 04       		.sleb128 4
 4647 0794 94       		.byte	0x94
 4648 0795 01       		.byte	0x1
 4649 0796 08       		.byte	0x8
 4650 0797 FF       		.byte	0xff
 4651 0798 1A       		.byte	0x1a
 4652 0799 9F       		.byte	0x9f
 4653 079a 10000000 		.4byte	.LVL156
 4654 079e 34000000 		.4byte	.LFE42
 4655 07a2 0F00     		.2byte	0xf
 4656 07a4 F3       		.byte	0xf3
 4657 07a5 01       		.uleb128 0x1
 4658 07a6 50       		.byte	0x50
 4659 07a7 03       		.byte	0x3
 4660 07a8 04000000 		.4byte	.LANCHOR2+4
 4661 07ac 22       		.byte	0x22
 4662 07ad 94       		.byte	0x94
 4663 07ae 01       		.byte	0x1
 4664 07af 08       		.byte	0x8
 4665 07b0 FF       		.byte	0xff
 4666 07b1 1A       		.byte	0x1a
 4667 07b2 9F       		.byte	0x9f
 4668 07b3 00000000 		.4byte	0
 4669 07b7 00000000 		.4byte	0
 4670              	.LLST47:
 4671 07bb 0A000000 		.4byte	.LVL154
 4672 07bf 10000000 		.4byte	.LVL156
 4673 07c3 0100     		.2byte	0x1
 4674 07c5 54       		.byte	0x54
 4675 07c6 10000000 		.4byte	.LVL156
 4676 07ca 34000000 		.4byte	.LFE42
 4677 07ce 0F00     		.2byte	0xf
 4678 07d0 F3       		.byte	0xf3
 4679 07d1 01       		.uleb128 0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 134


 4680 07d2 50       		.byte	0x50
 4681 07d3 03       		.byte	0x3
 4682 07d4 00000000 		.4byte	.LANCHOR2
 4683 07d8 22       		.byte	0x22
 4684 07d9 94       		.byte	0x94
 4685 07da 01       		.byte	0x1
 4686 07db 08       		.byte	0x8
 4687 07dc FF       		.byte	0xff
 4688 07dd 1A       		.byte	0x1a
 4689 07de 9F       		.byte	0x9f
 4690 07df 00000000 		.4byte	0
 4691 07e3 00000000 		.4byte	0
 4692              	.LLST48:
 4693 07e7 0C000000 		.4byte	.LVL155
 4694 07eb 28000000 		.4byte	.LVL162
 4695 07ef 0100     		.2byte	0x1
 4696 07f1 55       		.byte	0x55
 4697 07f2 28000000 		.4byte	.LVL162
 4698 07f6 34000000 		.4byte	.LFE42
 4699 07fa 1E00     		.2byte	0x1e
 4700 07fc F3       		.byte	0xf3
 4701 07fd 01       		.uleb128 0x1
 4702 07fe 50       		.byte	0x50
 4703 07ff 03       		.byte	0x3
 4704 0800 04000000 		.4byte	.LANCHOR2+4
 4705 0804 22       		.byte	0x22
 4706 0805 94       		.byte	0x94
 4707 0806 01       		.byte	0x1
 4708 0807 08       		.byte	0x8
 4709 0808 FF       		.byte	0xff
 4710 0809 1A       		.byte	0x1a
 4711 080a F3       		.byte	0xf3
 4712 080b 01       		.uleb128 0x1
 4713 080c 50       		.byte	0x50
 4714 080d 03       		.byte	0x3
 4715 080e 00000000 		.4byte	.LANCHOR2
 4716 0812 22       		.byte	0x22
 4717 0813 94       		.byte	0x94
 4718 0814 01       		.byte	0x1
 4719 0815 08       		.byte	0x8
 4720 0816 FF       		.byte	0xff
 4721 0817 1A       		.byte	0x1a
 4722 0818 22       		.byte	0x22
 4723 0819 9F       		.byte	0x9f
 4724 081a 00000000 		.4byte	0
 4725 081e 00000000 		.4byte	0
 4726              	.LLST49:
 4727 0822 0C000000 		.4byte	.LVL155
 4728 0826 28000000 		.4byte	.LVL161
 4729 082a 0100     		.2byte	0x1
 4730 082c 54       		.byte	0x54
 4731 082d 00000000 		.4byte	0
 4732 0831 00000000 		.4byte	0
 4733              	.LLST50:
 4734 0835 18000000 		.4byte	.LVL157
 4735 0839 1E000000 		.4byte	.LVL158
 4736 083d 0100     		.2byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 135


 4737 083f 50       		.byte	0x50
 4738 0840 00000000 		.4byte	0
 4739 0844 00000000 		.4byte	0
 4740              	.LLST51:
 4741 0848 00000000 		.4byte	.LVL163
 4742 084c 04000000 		.4byte	.LVL164
 4743 0850 0100     		.2byte	0x1
 4744 0852 50       		.byte	0x50
 4745 0853 04000000 		.4byte	.LVL164
 4746 0857 0C000000 		.4byte	.LFE64
 4747 085b 0400     		.2byte	0x4
 4748 085d F3       		.byte	0xf3
 4749 085e 01       		.uleb128 0x1
 4750 085f 50       		.byte	0x50
 4751 0860 9F       		.byte	0x9f
 4752 0861 00000000 		.4byte	0
 4753 0865 00000000 		.4byte	0
 4754              	.LLST52:
 4755 0869 00000000 		.4byte	.LVL165
 4756 086d 04000000 		.4byte	.LVL166
 4757 0871 0100     		.2byte	0x1
 4758 0873 50       		.byte	0x50
 4759 0874 04000000 		.4byte	.LVL166
 4760 0878 0C000000 		.4byte	.LFE65
 4761 087c 0400     		.2byte	0x4
 4762 087e F3       		.byte	0xf3
 4763 087f 01       		.uleb128 0x1
 4764 0880 50       		.byte	0x50
 4765 0881 9F       		.byte	0x9f
 4766 0882 00000000 		.4byte	0
 4767 0886 00000000 		.4byte	0
 4768              	.LLST53:
 4769 088a 00000000 		.4byte	.LVL167
 4770 088e 04000000 		.4byte	.LVL168
 4771 0892 0100     		.2byte	0x1
 4772 0894 50       		.byte	0x50
 4773 0895 04000000 		.4byte	.LVL168
 4774 0899 0C000000 		.4byte	.LFE66
 4775 089d 0400     		.2byte	0x4
 4776 089f F3       		.byte	0xf3
 4777 08a0 01       		.uleb128 0x1
 4778 08a1 50       		.byte	0x50
 4779 08a2 9F       		.byte	0x9f
 4780 08a3 00000000 		.4byte	0
 4781 08a7 00000000 		.4byte	0
 4782              		.section	.debug_aranges,"",%progbits
 4783 0000 24010000 		.4byte	0x124
 4784 0004 0200     		.2byte	0x2
 4785 0006 00000000 		.4byte	.Ldebug_info0
 4786 000a 04       		.byte	0x4
 4787 000b 00       		.byte	0
 4788 000c 0000     		.2byte	0
 4789 000e 0000     		.2byte	0
 4790 0010 00000000 		.4byte	.LFB35
 4791 0014 3C000000 		.4byte	.LFE35-.LFB35
 4792 0018 00000000 		.4byte	.LFB36
 4793 001c 18000000 		.4byte	.LFE36-.LFB36
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 136


 4794 0020 00000000 		.4byte	.LFB37
 4795 0024 14000000 		.4byte	.LFE37-.LFB37
 4796 0028 00000000 		.4byte	.LFB38
 4797 002c 34000000 		.4byte	.LFE38-.LFB38
 4798 0030 00000000 		.4byte	.LFB43
 4799 0034 0C000000 		.4byte	.LFE43-.LFB43
 4800 0038 00000000 		.4byte	.LFB44
 4801 003c 0C000000 		.4byte	.LFE44-.LFB44
 4802 0040 00000000 		.4byte	.LFB45
 4803 0044 0C000000 		.4byte	.LFE45-.LFB45
 4804 0048 00000000 		.4byte	.LFB46
 4805 004c 0C000000 		.4byte	.LFE46-.LFB46
 4806 0050 00000000 		.4byte	.LFB47
 4807 0054 0C000000 		.4byte	.LFE47-.LFB47
 4808 0058 00000000 		.4byte	.LFB48
 4809 005c 0C000000 		.4byte	.LFE48-.LFB48
 4810 0060 00000000 		.4byte	.LFB49
 4811 0064 0C000000 		.4byte	.LFE49-.LFB49
 4812 0068 00000000 		.4byte	.LFB50
 4813 006c 0C000000 		.4byte	.LFE50-.LFB50
 4814 0070 00000000 		.4byte	.LFB51
 4815 0074 0C000000 		.4byte	.LFE51-.LFB51
 4816 0078 00000000 		.4byte	.LFB52
 4817 007c 0C000000 		.4byte	.LFE52-.LFB52
 4818 0080 00000000 		.4byte	.LFB53
 4819 0084 0C000000 		.4byte	.LFE53-.LFB53
 4820 0088 00000000 		.4byte	.LFB54
 4821 008c 0C000000 		.4byte	.LFE54-.LFB54
 4822 0090 00000000 		.4byte	.LFB55
 4823 0094 0C000000 		.4byte	.LFE55-.LFB55
 4824 0098 00000000 		.4byte	.LFB56
 4825 009c 0C000000 		.4byte	.LFE56-.LFB56
 4826 00a0 00000000 		.4byte	.LFB57
 4827 00a4 AC000000 		.4byte	.LFE57-.LFB57
 4828 00a8 00000000 		.4byte	.LFB58
 4829 00ac 2C000000 		.4byte	.LFE58-.LFB58
 4830 00b0 00000000 		.4byte	.LFB59
 4831 00b4 20000000 		.4byte	.LFE59-.LFB59
 4832 00b8 00000000 		.4byte	.LFB60
 4833 00bc 2C000000 		.4byte	.LFE60-.LFB60
 4834 00c0 00000000 		.4byte	.LFB61
 4835 00c4 2C000000 		.4byte	.LFE61-.LFB61
 4836 00c8 00000000 		.4byte	.LFB62
 4837 00cc 1C000000 		.4byte	.LFE62-.LFB62
 4838 00d0 00000000 		.4byte	.LFB63
 4839 00d4 0A000000 		.4byte	.LFE63-.LFB63
 4840 00d8 00000000 		.4byte	.LFB39
 4841 00dc 14010000 		.4byte	.LFE39-.LFB39
 4842 00e0 00000000 		.4byte	.LFB40
 4843 00e4 10000000 		.4byte	.LFE40-.LFB40
 4844 00e8 00000000 		.4byte	.LFB41
 4845 00ec 28000000 		.4byte	.LFE41-.LFB41
 4846 00f0 00000000 		.4byte	.LFB42
 4847 00f4 34000000 		.4byte	.LFE42-.LFB42
 4848 00f8 00000000 		.4byte	.LFB64
 4849 00fc 0C000000 		.4byte	.LFE64-.LFB64
 4850 0100 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 137


 4851 0104 0C000000 		.4byte	.LFE65-.LFB65
 4852 0108 00000000 		.4byte	.LFB66
 4853 010c 0C000000 		.4byte	.LFE66-.LFB66
 4854 0110 00000000 		.4byte	.LFB67
 4855 0114 0C000000 		.4byte	.LFE67-.LFB67
 4856 0118 00000000 		.4byte	.LFB68
 4857 011c 0C000000 		.4byte	.LFE68-.LFB68
 4858 0120 00000000 		.4byte	0
 4859 0124 00000000 		.4byte	0
 4860              		.section	.debug_ranges,"",%progbits
 4861              	.Ldebug_ranges0:
 4862 0000 00000000 		.4byte	.LFB35
 4863 0004 3C000000 		.4byte	.LFE35
 4864 0008 00000000 		.4byte	.LFB36
 4865 000c 18000000 		.4byte	.LFE36
 4866 0010 00000000 		.4byte	.LFB37
 4867 0014 14000000 		.4byte	.LFE37
 4868 0018 00000000 		.4byte	.LFB38
 4869 001c 34000000 		.4byte	.LFE38
 4870 0020 00000000 		.4byte	.LFB43
 4871 0024 0C000000 		.4byte	.LFE43
 4872 0028 00000000 		.4byte	.LFB44
 4873 002c 0C000000 		.4byte	.LFE44
 4874 0030 00000000 		.4byte	.LFB45
 4875 0034 0C000000 		.4byte	.LFE45
 4876 0038 00000000 		.4byte	.LFB46
 4877 003c 0C000000 		.4byte	.LFE46
 4878 0040 00000000 		.4byte	.LFB47
 4879 0044 0C000000 		.4byte	.LFE47
 4880 0048 00000000 		.4byte	.LFB48
 4881 004c 0C000000 		.4byte	.LFE48
 4882 0050 00000000 		.4byte	.LFB49
 4883 0054 0C000000 		.4byte	.LFE49
 4884 0058 00000000 		.4byte	.LFB50
 4885 005c 0C000000 		.4byte	.LFE50
 4886 0060 00000000 		.4byte	.LFB51
 4887 0064 0C000000 		.4byte	.LFE51
 4888 0068 00000000 		.4byte	.LFB52
 4889 006c 0C000000 		.4byte	.LFE52
 4890 0070 00000000 		.4byte	.LFB53
 4891 0074 0C000000 		.4byte	.LFE53
 4892 0078 00000000 		.4byte	.LFB54
 4893 007c 0C000000 		.4byte	.LFE54
 4894 0080 00000000 		.4byte	.LFB55
 4895 0084 0C000000 		.4byte	.LFE55
 4896 0088 00000000 		.4byte	.LFB56
 4897 008c 0C000000 		.4byte	.LFE56
 4898 0090 00000000 		.4byte	.LFB57
 4899 0094 AC000000 		.4byte	.LFE57
 4900 0098 00000000 		.4byte	.LFB58
 4901 009c 2C000000 		.4byte	.LFE58
 4902 00a0 00000000 		.4byte	.LFB59
 4903 00a4 20000000 		.4byte	.LFE59
 4904 00a8 00000000 		.4byte	.LFB60
 4905 00ac 2C000000 		.4byte	.LFE60
 4906 00b0 00000000 		.4byte	.LFB61
 4907 00b4 2C000000 		.4byte	.LFE61
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 138


 4908 00b8 00000000 		.4byte	.LFB62
 4909 00bc 1C000000 		.4byte	.LFE62
 4910 00c0 00000000 		.4byte	.LFB63
 4911 00c4 0A000000 		.4byte	.LFE63
 4912 00c8 00000000 		.4byte	.LFB39
 4913 00cc 14010000 		.4byte	.LFE39
 4914 00d0 00000000 		.4byte	.LFB40
 4915 00d4 10000000 		.4byte	.LFE40
 4916 00d8 00000000 		.4byte	.LFB41
 4917 00dc 28000000 		.4byte	.LFE41
 4918 00e0 00000000 		.4byte	.LFB42
 4919 00e4 34000000 		.4byte	.LFE42
 4920 00e8 00000000 		.4byte	.LFB64
 4921 00ec 0C000000 		.4byte	.LFE64
 4922 00f0 00000000 		.4byte	.LFB65
 4923 00f4 0C000000 		.4byte	.LFE65
 4924 00f8 00000000 		.4byte	.LFB66
 4925 00fc 0C000000 		.4byte	.LFE66
 4926 0100 00000000 		.4byte	.LFB67
 4927 0104 0C000000 		.4byte	.LFE67
 4928 0108 00000000 		.4byte	.LFB68
 4929 010c 0C000000 		.4byte	.LFE68
 4930 0110 00000000 		.4byte	0
 4931 0114 00000000 		.4byte	0
 4932              		.section	.debug_line,"",%progbits
 4933              	.Ldebug_line0:
 4934 0000 C8030000 		.section	.debug_str,"MS",%progbits,1
 4934      02006C00 
 4934      00000201 
 4934      FB0E0D00 
 4934      01010101 
 4935              	.LASF10:
 4936 0000 75696E74 		.ascii	"uint16\000"
 4936      313600
 4937              	.LASF79:
 4938 0007 66696C74 		.ascii	"filteredRawData\000"
 4938      65726564 
 4938      52617744 
 4938      61746100 
 4939              	.LASF86:
 4940 0017 6C617374 		.ascii	"lastSensor\000"
 4940      53656E73 
 4940      6F7200
 4941              	.LASF107:
 4942 0022 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4942      656E7365 
 4942      5F726177 
 4942      44617461 
 4942      496E6465 
 4943              	.LASF99:
 4944 0038 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4944      656E7365 
 4944      5F73656E 
 4944      736F724F 
 4944      6E4D6173 
 4945              	.LASF54:
 4946 004e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 139


 4946      656E7365 
 4946      5F476574 
 4946      4E656761 
 4946      74697665 
 4947              	.LASF64:
 4948 0071 66696E67 		.ascii	"fingerThreshold\000"
 4948      65725468 
 4948      72657368 
 4948      6F6C6400 
 4949              	.LASF58:
 4950 0081 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4950      656E7365 
 4950      5F536574 
 4950      4E656761 
 4950      74697665 
 4951              	.LASF83:
 4952 00a4 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4952      656E7365 
 4952      5F557064 
 4952      61746557 
 4952      69646765 
 4953              	.LASF25:
 4954 00c2 70747247 		.ascii	"ptrGetRaw\000"
 4954      65745261 
 4954      7700
 4955              	.LASF89:
 4956 00cc 43617053 		.ascii	"CapSense_GetDebounce\000"
 4956      656E7365 
 4956      5F476574 
 4956      4465626F 
 4956      756E6365 
 4957              	.LASF73:
 4958 00e1 43617053 		.ascii	"CapSense_MedianFilter\000"
 4958      656E7365 
 4958      5F4D6564 
 4958      69616E46 
 4958      696C7465 
 4959              	.LASF115:
 4960 00f7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4960      4320342E 
 4960      382E3420 
 4960      32303134 
 4960      30353236 
 4961 012a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4961      20726576 
 4961      6973696F 
 4961      6E203231 
 4961      31333538 
 4962 015d 67202D66 		.ascii	"g -ffunction-sections\000"
 4962      66756E63 
 4962      74696F6E 
 4962      2D736563 
 4962      74696F6E 
 4963              	.LASF7:
 4964 0173 6C6F6E67 		.ascii	"long long unsigned int\000"
 4964      206C6F6E 
 4964      6720756E 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 140


 4964      7369676E 
 4964      65642069 
 4965              	.LASF98:
 4966 018a 43617053 		.ascii	"CapSense_sensorSignal\000"
 4966      656E7365 
 4966      5F73656E 
 4966      736F7253 
 4966      69676E61 
 4967              	.LASF52:
 4968 01a0 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4968      656E7365 
 4968      5F476574 
 4968      4E6F6973 
 4968      65546872 
 4969              	.LASF43:
 4970 01bb 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4970      656E7365 
 4970      5F496E69 
 4970      7469616C 
 4970      697A6545 
 4971              	.LASF82:
 4972 01df 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4972      656E7365 
 4972      5F557064 
 4972      61746545 
 4972      6E61626C 
 4973              	.LASF6:
 4974 01ff 6C6F6E67 		.ascii	"long long int\000"
 4974      206C6F6E 
 4974      6720696E 
 4974      7400
 4975              	.LASF0:
 4976 020d 7369676E 		.ascii	"signed char\000"
 4976      65642063 
 4976      68617200 
 4977              	.LASF72:
 4978 0219 43617053 		.ascii	"CapSense_DisableWidget\000"
 4978      656E7365 
 4978      5F446973 
 4978      61626C65 
 4978      57696467 
 4979              	.LASF67:
 4980 0230 72617749 		.ascii	"rawIndex\000"
 4980      6E646578 
 4980      00
 4981              	.LASF24:
 4982 0239 6E756D62 		.ascii	"numberOfSensors\000"
 4982      65724F66 
 4982      53656E73 
 4982      6F727300 
 4983              	.LASF21:
 4984 0249 77696467 		.ascii	"widgetNubmersTbl\000"
 4984      65744E75 
 4984      626D6572 
 4984      7354626C 
 4984      00
 4985              	.LASF47:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 141


 4986 025a 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4986      656E7365 
 4986      5F476574 
 4986      42617365 
 4986      6C696E65 
 4987              	.LASF69:
 4988 0273 73746174 		.ascii	"state\000"
 4988      6500
 4989              	.LASF4:
 4990 0279 6C6F6E67 		.ascii	"long int\000"
 4990      20696E74 
 4990      00
 4991              	.LASF70:
 4992 0282 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4992      656E7365 
 4992      5F436865 
 4992      636B4973 
 4992      416E7957 
 4993              	.LASF9:
 4994 02a2 75696E74 		.ascii	"uint8\000"
 4994      3800
 4995              	.LASF101:
 4996 02a8 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4996      656E7365 
 4996      5F6C6F77 
 4996      42617365 
 4996      6C696E65 
 4997              	.LASF91:
 4998 02c2 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4998      656E7365 
 4998      5F446973 
 4998      61626C65 
 4998      52617744 
 4999              	.LASF13:
 5000 02e1 646F7562 		.ascii	"double\000"
 5000      6C6500
 5001              	.LASF95:
 5002 02e8 43617053 		.ascii	"CapSense_widgetNumber\000"
 5002      656E7365 
 5002      5F776964 
 5002      6765744E 
 5002      756D6265 
 5003              	.LASF11:
 5004 02fe 75696E74 		.ascii	"uint32\000"
 5004      333200
 5005              	.LASF65:
 5006 0305 68797374 		.ascii	"hysteresis\000"
 5006      65726573 
 5006      697300
 5007              	.LASF55:
 5008 0310 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5008      656E7365 
 5008      5F536574 
 5008      46696E67 
 5008      65725468 
 5009              	.LASF59:
 5010 032c 43617053 		.ascii	"CapSense_SetDebounce\000"
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 142


 5010      656E7365 
 5010      5F536574 
 5010      4465626F 
 5010      756E6365 
 5011              	.LASF34:
 5012 0341 73656E73 		.ascii	"sensetivitySeed\000"
 5012      65746976 
 5012      69747953 
 5012      65656400 
 5013              	.LASF33:
 5014 0351 746F7461 		.ascii	"totalSensorsNum\000"
 5014      6C53656E 
 5014      736F7273 
 5014      4E756D00 
 5015              	.LASF50:
 5016 0361 76616C75 		.ascii	"value\000"
 5016      6500
 5017              	.LASF60:
 5018 0367 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5018      656E7365 
 5018      5F536574 
 5018      4C6F7742 
 5018      6173656C 
 5019              	.LASF74:
 5020 0384 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5020      656E7365 
 5020      5F494952 
 5020      3446696C 
 5020      74657200 
 5021              	.LASF112:
 5022 0398 43617053 		.ascii	"CapSense_ScanSensor\000"
 5022      656E7365 
 5022      5F536361 
 5022      6E53656E 
 5022      736F7200 
 5023              	.LASF8:
 5024 03ac 756E7369 		.ascii	"unsigned int\000"
 5024      676E6564 
 5024      20696E74 
 5024      00
 5025              	.LASF5:
 5026 03b9 6C6F6E67 		.ascii	"long unsigned int\000"
 5026      20756E73 
 5026      69676E65 
 5026      6420696E 
 5026      7400
 5027              	.LASF97:
 5028 03cb 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5028      656E7365 
 5028      5F73656E 
 5028      736F7242 
 5028      6173656C 
 5029              	.LASF22:
 5030 03e6 7265736F 		.ascii	"resolutionsTbl\000"
 5030      6C757469 
 5030      6F6E7354 
 5030      626C00
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 143


 5031              	.LASF28:
 5032 03f5 70747247 		.ascii	"ptrGetBitValue\000"
 5032      65744269 
 5032      7456616C 
 5032      756500
 5033              	.LASF106:
 5034 0404 43617053 		.ascii	"CapSense_debounce\000"
 5034      656E7365 
 5034      5F646562 
 5034      6F756E63 
 5034      6500
 5035              	.LASF46:
 5036 0416 64617461 		.ascii	"data\000"
 5036      00
 5037              	.LASF3:
 5038 041b 73686F72 		.ascii	"short unsigned int\000"
 5038      7420756E 
 5038      7369676E 
 5038      65642069 
 5038      6E7400
 5039              	.LASF18:
 5040 042e 73656E73 		.ascii	"sensetivityTbl\000"
 5040      65746976 
 5040      69747954 
 5040      626C00
 5041              	.LASF117:
 5042 043d 413A5C44 		.ascii	"A:\\Documents\\School\\ECEG-721_Embedded_Systems\\L"
 5042      6F63756D 
 5042      656E7473 
 5042      5C536368 
 5042      6F6F6C5C 
 5043 046c 6162735C 		.ascii	"abs\\Lab7\\BLE Lab 1\\BLE Lab 1.cydsn\000"
 5043      4C616237 
 5043      5C424C45 
 5043      204C6162 
 5043      20315C42 
 5044              	.LASF94:
 5045 048f 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5045      656E7365 
 5045      5F73656E 
 5045      736F7245 
 5045      6E61626C 
 5046              	.LASF108:
 5047 04a9 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5047      656E7365 
 5047      5F6E756D 
 5047      6265724F 
 5047      6653656E 
 5048              	.LASF81:
 5049 04c2 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5049      656E7365 
 5049      5F557064 
 5049      61746553 
 5049      656E736F 
 5050              	.LASF76:
 5051 04e0 63616C63 		.ascii	"calc\000"
 5051      00
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 144


 5052              	.LASF19:
 5053 04e5 63686172 		.ascii	"chargeDivTbl\000"
 5053      67654469 
 5053      7654626C 
 5053      00
 5054              	.LASF118:
 5055 04f2 43617053 		.ascii	"CapSense_IsBusy\000"
 5055      656E7365 
 5055      5F497342 
 5055      75737900 
 5056              	.LASF116:
 5057 0502 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5057      6E657261 
 5057      7465645F 
 5057      536F7572 
 5057      63655C50 
 5058              	.LASF48:
 5059 052b 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5059      656E7365 
 5059      5F476574 
 5059      44696666 
 5059      436F756E 
 5060              	.LASF36:
 5061 0545 706F696E 		.ascii	"pointers\000"
 5061      74657273 
 5061      00
 5062              	.LASF62:
 5063 054e 6465626F 		.ascii	"debounce\000"
 5063      756E6365 
 5063      00
 5064              	.LASF35:
 5065 0557 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5065      6B467265 
 5065      715F4D48 
 5065      7A00
 5066              	.LASF15:
 5067 0565 73697A65 		.ascii	"sizetype\000"
 5067      74797065 
 5067      00
 5068              	.LASF71:
 5069 056e 43617053 		.ascii	"CapSense_EnableWidget\000"
 5069      656E7365 
 5069      5F456E61 
 5069      626C6557 
 5069      69646765 
 5070              	.LASF75:
 5071 0584 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5071      656E7365 
 5071      5F557064 
 5071      61746542 
 5071      6173656C 
 5072              	.LASF39:
 5073 05a7 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5073      656E7365 
 5073      5F496E69 
 5073      7469616C 
 5073      697A6553 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 145


 5074              	.LASF57:
 5075 05c9 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5075      656E7365 
 5075      5F536574 
 5075      46696E67 
 5075      65724879 
 5076              	.LASF61:
 5077 05e6 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5077      656E7365 
 5077      5F436865 
 5077      636B4973 
 5077      53656E73 
 5078              	.LASF16:
 5079 0603 69646163 		.ascii	"idac1LevelsTbl\000"
 5079      314C6576 
 5079      656C7354 
 5079      626C00
 5080              	.LASF17:
 5081 0612 69646163 		.ascii	"idac2LevelsTbl\000"
 5081      324C6576 
 5081      656C7354 
 5081      626C00
 5082              	.LASF103:
 5083 0621 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5083      656E7365 
 5083      5F6E6F69 
 5083      73655468 
 5083      72657368 
 5084              	.LASF102:
 5085 0639 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5085      656E7365 
 5085      5F66696E 
 5085      67657254 
 5085      68726573 
 5086              	.LASF113:
 5087 0652 43617053 		.ascii	"CapSense_SetBitValue\000"
 5087      656E7365 
 5087      5F536574 
 5087      42697456 
 5087      616C7565 
 5088              	.LASF109:
 5089 0667 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5089      656E7365 
 5089      5F726177 
 5089      46696C74 
 5089      65724461 
 5090              	.LASF110:
 5091 067f 43617053 		.ascii	"CapSense_config\000"
 5091      656E7365 
 5091      5F636F6E 
 5091      66696700 
 5092              	.LASF12:
 5093 068f 666C6F61 		.ascii	"float\000"
 5093      7400
 5094              	.LASF88:
 5095 0695 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5095      656E7365 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 146


 5095      5F476574 
 5095      4C6F7742 
 5095      6173656C 
 5096              	.LASF66:
 5097 06b2 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5097      656E7365 
 5097      5F436865 
 5097      636B4973 
 5097      57696467 
 5098              	.LASF1:
 5099 06cf 756E7369 		.ascii	"unsigned char\000"
 5099      676E6564 
 5099      20636861 
 5099      7200
 5100              	.LASF41:
 5101 06dd 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5101      656E7365 
 5101      5F496E69 
 5101      7469616C 
 5101      697A6541 
 5102              	.LASF27:
 5103 06fd 70747252 		.ascii	"ptrReadSensorRaw\000"
 5103      65616453 
 5103      656E736F 
 5103      72526177 
 5103      00
 5104              	.LASF45:
 5105 070e 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5105      656E7365 
 5105      5F536574 
 5105      42617365 
 5105      6C696E65 
 5106              	.LASF80:
 5107 0727 6E6F6973 		.ascii	"noiseThreshold\000"
 5107      65546872 
 5107      6573686F 
 5107      6C6400
 5108              	.LASF2:
 5109 0736 73686F72 		.ascii	"short int\000"
 5109      7420696E 
 5109      7400
 5110              	.LASF42:
 5111 0740 77696467 		.ascii	"widget\000"
 5111      657400
 5112              	.LASF20:
 5113 0747 6D6F6444 		.ascii	"modDivTbl\000"
 5113      69765462 
 5113      6C00
 5114              	.LASF44:
 5115 0751 69735365 		.ascii	"isSensorEnabled\000"
 5115      6E736F72 
 5115      456E6162 
 5115      6C656400 
 5116              	.LASF38:
 5117 0761 43617053 		.ascii	"CapSense_BaseInit\000"
 5117      656E7365 
 5117      5F426173 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 147


 5117      65496E69 
 5117      7400
 5118              	.LASF37:
 5119 0773 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 5119      656E7365 
 5119      5F434F4E 
 5119      4649475F 
 5119      54595045 
 5120              	.LASF84:
 5121 0791 73656E73 		.ascii	"sensorsPerWidget\000"
 5121      6F727350 
 5121      65725769 
 5121      64676574 
 5121      00
 5122              	.LASF100:
 5123 07a2 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5123      656E7365 
 5123      5F6C6F77 
 5123      42617365 
 5123      6C696E65 
 5124              	.LASF56:
 5125 07bf 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5125      656E7365 
 5125      5F536574 
 5125      4E6F6973 
 5125      65546872 
 5126              	.LASF96:
 5127 07da 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5127      656E7365 
 5127      5F73656E 
 5127      736F7242 
 5127      6173656C 
 5128              	.LASF105:
 5129 07f2 43617053 		.ascii	"CapSense_hysteresis\000"
 5129      656E7365 
 5129      5F687973 
 5129      74657265 
 5129      73697300 
 5130              	.LASF14:
 5131 0806 63686172 		.ascii	"char\000"
 5131      00
 5132              	.LASF111:
 5133 080b 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5133      656E7365 
 5133      5F656E61 
 5133      626C6552 
 5133      61774669 
 5134              	.LASF53:
 5135 0825 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5135      656E7365 
 5135      5F476574 
 5135      46696E67 
 5135      65724879 
 5136              	.LASF85:
 5137 0842 66697273 		.ascii	"firstSensor\000"
 5137      7453656E 
 5137      736F7200 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 148


 5138              	.LASF63:
 5139 084e 6465626F 		.ascii	"debounceIndex\000"
 5139      756E6365 
 5139      496E6465 
 5139      7800
 5140              	.LASF51:
 5141 085c 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5141      656E7365 
 5141      5F476574 
 5141      46696E67 
 5141      65725468 
 5142              	.LASF26:
 5143 0878 70747250 		.ascii	"ptrPreScan\000"
 5143      72655363 
 5143      616E00
 5144              	.LASF30:
 5145 0883 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 5145      656E7365 
 5145      5F434F4E 
 5145      4649475F 
 5145      54595045 
 5146              	.LASF40:
 5147 08aa 73656E73 		.ascii	"sensor\000"
 5147      6F7200
 5148              	.LASF121:
 5149 08b1 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 5149      656E7365 
 5149      5F557064 
 5149      61746554 
 5149      68726573 
 5150              	.LASF77:
 5151 08cb 7369676E 		.ascii	"sign\000"
 5151      00
 5152              	.LASF68:
 5153 08d0 6E756D4F 		.ascii	"numOfSensors\000"
 5153      6653656E 
 5153      736F7273 
 5153      00
 5154              	.LASF31:
 5155 08dd 746F7461 		.ascii	"totalScanslotsNum\000"
 5155      6C536361 
 5155      6E736C6F 
 5155      74734E75 
 5155      6D00
 5156              	.LASF93:
 5157 08ef 43617053 		.ascii	"CapSense_sensorRaw\000"
 5157      656E7365 
 5157      5F73656E 
 5157      736F7252 
 5157      617700
 5158              	.LASF49:
 5159 0902 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5159      656E7365 
 5159      5F536574 
 5159      44696666 
 5159      436F756E 
 5160              	.LASF29:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 149


 5161 091c 70747253 		.ascii	"ptrSetBitValue\000"
 5161      65744269 
 5161      7456616C 
 5161      756500
 5162              	.LASF120:
 5163 092b 43617053 		.ascii	"CapSense_GetBitValue\000"
 5163      656E7365 
 5163      5F476574 
 5163      42697456 
 5163      616C7565 
 5164              	.LASF87:
 5165 0940 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5165      656E7365 
 5165      5F476574 
 5165      57696467 
 5165      65744E75 
 5166              	.LASF119:
 5167 0959 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 5167      656E7365 
 5167      5F536361 
 5167      6E456E61 
 5167      626C6564 
 5168              	.LASF90:
 5169 0975 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5169      656E7365 
 5169      5F456E61 
 5169      626C6552 
 5169      61774461 
 5170              	.LASF92:
 5171 0993 43617053 		.ascii	"CapSense_debounceCounter\000"
 5171      656E7365 
 5171      5F646562 
 5171      6F756E63 
 5171      65436F75 
 5172              	.LASF23:
 5173 09ac 72617744 		.ascii	"rawDataIndex\000"
 5173      61746149 
 5173      6E646578 
 5173      00
 5174              	.LASF78:
 5175 09b9 74656D70 		.ascii	"tempRaw\000"
 5175      52617700 
 5176              	.LASF114:
 5177 09c1 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_20\000"
 5177      7572654E 
 5177      6F697365 
 5177      456E7665 
 5177      6C6F7065 
 5178              	.LASF32:
 5179 09df 746F7461 		.ascii	"totalWidgetsNum\000"
 5179      6C576964 
 5179      67657473 
 5179      4E756D00 
 5180              	.LASF104:
 5181 09ef 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5181      656E7365 
 5181      5F6E6567 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccMjTugc.s 			page 150


 5181      61746976 
 5181      654E6F69 
 5182              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
