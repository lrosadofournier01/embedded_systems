ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_BaseInit,"ax",%progbits
  18              		.align	2
  19              		.global	CapSense_BaseInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	CapSense_BaseInit, %function
  23              	CapSense_BaseInit:
  24              	.LFB35:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 2


  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_20 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 3


  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  26              		.loc 1 137 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 30B5     		push	{r4, r5, lr}
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 4


 139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  34              		.loc 1 140 0
  35 0002 094B     		ldr	r3, .L2
  36 0004 1B5C     		ldrb	r3, [r3, r0]
  37              	.LVL1:
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  38              		.loc 1 154 0
  39 0006 4200     		lsl	r2, r0, #1
  40 0008 0849     		ldr	r1, .L2+4
  41 000a 545A     		ldrh	r4, [r2, r1]
  42 000c 0849     		ldr	r1, .L2+8
  43 000e 5452     		strh	r4, [r2, r1]
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  44              		.loc 1 155 0
  45 0010 0818     		add	r0, r1, r0
  46              	.LVL2:
  47 0012 0025     		mov	r5, #0
  48 0014 0571     		strb	r5, [r0, #4]
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  49              		.loc 1 156 0
  50 0016 0572     		strb	r5, [r0, #8]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  51              		.loc 1 158 0
  52 0018 0648     		ldr	r0, .L2+12
  53 001a C05C     		ldrb	r0, [r0, r3]
  54 001c CB18     		add	r3, r1, r3
  55              	.LVL3:
  56 001e 1873     		strb	r0, [r3, #12]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 5


 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  57              		.loc 1 173 0
  58 0020 054B     		ldr	r3, .L2+16
  59 0022 D452     		strh	r4, [r2, r3]
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
  60              		.loc 1 185 0
  61              		@ sp needed
  62 0024 30BD     		pop	{r4, r5, pc}
  63              	.L3:
  64 0026 C046     		.align	2
  65              	.L2:
  66 0028 00000000 		.word	CapSense_widgetNumber
  67 002c 00000000 		.word	CapSense_sensorRaw
  68 0030 00000000 		.word	.LANCHOR0
  69 0034 00000000 		.word	.LANCHOR1
  70 0038 00000000 		.word	CapSense_rawFilterData1
  71              		.cfi_endproc
  72              	.LFE35:
  73              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  74              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  75              		.align	2
  76              		.global	CapSense_InitializeSensorBaseline
  77              		.code	16
  78              		.thumb_func
  79              		.type	CapSense_InitializeSensorBaseline, %function
  80              	CapSense_InitializeSensorBaseline:
  81              	.LFB36:
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 6


 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  82              		.loc 1 213 0
  83              		.cfi_startproc
  84              	.LVL4:
  85 0000 10B5     		push	{r4, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 041C     		mov	r4, r0
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  90              		.loc 1 215 0
  91 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  92              	.LVL5:
  93              	.L5:
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  94              		.loc 1 216 0 discriminator 1
  95 0008 FFF7FEFF 		bl	CapSense_IsBusy
  96              	.LVL6:
  97 000c 0028     		cmp	r0, #0
  98 000e FBD1     		bne	.L5
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
  99              		.loc 1 222 0
 100 0010 201C     		mov	r0, r4
 101 0012 FFF7FEFF 		bl	CapSense_BaseInit
 102              	.LVL7:
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 103              		.loc 1 223 0
 104              		@ sp needed
 105              	.LVL8:
 106 0016 10BD     		pop	{r4, pc}
 107              		.cfi_endproc
 108              	.LFE36:
 109              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 110              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 111              		.align	2
 112              		.global	CapSense_InitializeAllBaselines
 113              		.code	16
 114              		.thumb_func
 115              		.type	CapSense_InitializeAllBaselines, %function
 116              	CapSense_InitializeAllBaselines:
 117              	.LFB37:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 7


 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 118              		.loc 1 250 0
 119              		.cfi_startproc
 120 0000 10B5     		push	{r4, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 4, -8
 123              		.cfi_offset 14, -4
 124              	.LVL9:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 125              		.loc 1 253 0
 126 0002 0024     		mov	r4, #0
 127 0004 03E0     		b	.L7
 128              	.LVL10:
 129              	.L8:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 130              		.loc 1 255 0 discriminator 3
 131 0006 201C     		mov	r0, r4
 132 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 133              	.LVL11:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 134              		.loc 1 253 0 discriminator 3
 135 000c 0134     		add	r4, r4, #1
 136              	.LVL12:
 137              	.L7:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 138              		.loc 1 253 0 is_stmt 0 discriminator 1
 139 000e 012C     		cmp	r4, #1
 140 0010 F9D9     		bls	.L8
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 8


 141              		.loc 1 257 0 is_stmt 1
 142              		@ sp needed
 143              	.LVL13:
 144 0012 10BD     		pop	{r4, pc}
 145              		.cfi_endproc
 146              	.LFE37:
 147              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 148              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 149              		.align	2
 150              		.global	CapSense_InitializeEnabledBaselines
 151              		.code	16
 152              		.thumb_func
 153              		.type	CapSense_InitializeEnabledBaselines, %function
 154              	CapSense_InitializeEnabledBaselines:
 155              	.LFB38:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 156              		.loc 1 285 0
 157              		.cfi_startproc
 158 0000 10B5     		push	{r4, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 162              		.loc 1 289 0
 163 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 164              	.LVL14:
 165              	.L10:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 9


 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 166              		.loc 1 290 0 discriminator 1
 167 0006 FFF7FEFF 		bl	CapSense_IsBusy
 168              	.LVL15:
 169 000a 0028     		cmp	r0, #0
 170 000c FBD1     		bne	.L10
 171 000e 0024     		mov	r4, #0
 172 0010 09E0     		b	.L11
 173              	.LVL16:
 174              	.L13:
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 175              		.loc 1 297 0
 176 0012 0648     		ldr	r0, .L14
 177 0014 211C     		mov	r1, r4
 178 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 179              	.LVL17:
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 180              		.loc 1 300 0
 181 001a 0028     		cmp	r0, #0
 182 001c 02D0     		beq	.L12
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 183              		.loc 1 303 0
 184 001e 201C     		mov	r0, r4
 185              	.LVL18:
 186 0020 FFF7FEFF 		bl	CapSense_BaseInit
 187              	.LVL19:
 188              	.L12:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 189              		.loc 1 295 0 discriminator 2
 190 0024 0134     		add	r4, r4, #1
 191              	.LVL20:
 192              	.L11:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 193              		.loc 1 295 0 is_stmt 0 discriminator 1
 194 0026 012C     		cmp	r4, #1
 195 0028 F3D9     		bls	.L13
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 196              		.loc 1 306 0 is_stmt 1
 197              		@ sp needed
 198              	.LVL21:
 199 002a 10BD     		pop	{r4, pc}
 200              	.L15:
 201              		.align	2
 202              	.L14:
 203 002c 00000000 		.word	CapSense_sensorEnableMask
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 10


 204              		.cfi_endproc
 205              	.LFE38:
 206              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 207              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 208              		.align	2
 209              		.global	CapSense_GetBaselineData
 210              		.code	16
 211              		.thumb_func
 212              		.type	CapSense_GetBaselineData, %function
 213              	CapSense_GetBaselineData:
 214              	.LFB43:
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 11


 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 12


 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 13


 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 14


 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 15


 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 16


 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 215              		.loc 1 689 0
 216              		.cfi_startproc
 217              	.LVL22:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 218              		.loc 1 690 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 17


 219 0000 4000     		lsl	r0, r0, #1
 220              	.LVL23:
 221 0002 014B     		ldr	r3, .L17
 222 0004 185A     		ldrh	r0, [r3, r0]
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 223              		.loc 1 691 0
 224              		@ sp needed
 225 0006 7047     		bx	lr
 226              	.L18:
 227              		.align	2
 228              	.L17:
 229 0008 00000000 		.word	.LANCHOR0
 230              		.cfi_endproc
 231              	.LFE43:
 232              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 233              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 234              		.align	2
 235              		.global	CapSense_SetBaselineData
 236              		.code	16
 237              		.thumb_func
 238              		.type	CapSense_SetBaselineData, %function
 239              	CapSense_SetBaselineData:
 240              	.LFB44:
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 241              		.loc 1 716 0
 242              		.cfi_startproc
 243              	.LVL24:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 244              		.loc 1 717 0
 245 0000 4000     		lsl	r0, r0, #1
 246              	.LVL25:
 247 0002 014B     		ldr	r3, .L20
 248 0004 C152     		strh	r1, [r0, r3]
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 18


 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 249              		.loc 1 718 0
 250              		@ sp needed
 251 0006 7047     		bx	lr
 252              	.L21:
 253              		.align	2
 254              	.L20:
 255 0008 00000000 		.word	.LANCHOR0
 256              		.cfi_endproc
 257              	.LFE44:
 258              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 259              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 260              		.align	2
 261              		.global	CapSense_GetDiffCountData
 262              		.code	16
 263              		.thumb_func
 264              		.type	CapSense_GetDiffCountData, %function
 265              	CapSense_GetDiffCountData:
 266              	.LFB45:
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 267              		.loc 1 743 0
 268              		.cfi_startproc
 269              	.LVL26:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 270              		.loc 1 744 0
 271 0000 014B     		ldr	r3, .L23
 272 0002 1818     		add	r0, r3, r0
 273              	.LVL27:
 274 0004 007A     		ldrb	r0, [r0, #8]
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 275              		.loc 1 745 0
 276              		@ sp needed
 277 0006 7047     		bx	lr
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 19


 278              	.L24:
 279              		.align	2
 280              	.L23:
 281 0008 00000000 		.word	.LANCHOR0
 282              		.cfi_endproc
 283              	.LFE45:
 284              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 285              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 286              		.align	2
 287              		.global	CapSense_SetDiffCountData
 288              		.code	16
 289              		.thumb_func
 290              		.type	CapSense_SetDiffCountData, %function
 291              	CapSense_SetDiffCountData:
 292              	.LFB46:
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 293              		.loc 1 770 0
 294              		.cfi_startproc
 295              	.LVL28:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 296              		.loc 1 771 0
 297 0000 014B     		ldr	r3, .L26
 298 0002 1818     		add	r0, r3, r0
 299              	.LVL29:
 300 0004 0172     		strb	r1, [r0, #8]
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 301              		.loc 1 772 0
 302              		@ sp needed
 303 0006 7047     		bx	lr
 304              	.L27:
 305              		.align	2
 306              	.L26:
 307 0008 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 20


 308              		.cfi_endproc
 309              	.LFE46:
 310              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 311              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 312              		.align	2
 313              		.global	CapSense_GetFingerThreshold
 314              		.code	16
 315              		.thumb_func
 316              		.type	CapSense_GetFingerThreshold, %function
 317              	CapSense_GetFingerThreshold:
 318              	.LFB47:
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 319              		.loc 1 797 0
 320              		.cfi_startproc
 321              	.LVL30:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 322              		.loc 1 798 0
 323 0000 014B     		ldr	r3, .L29
 324 0002 185C     		ldrb	r0, [r3, r0]
 325              	.LVL31:
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 326              		.loc 1 799 0
 327              		@ sp needed
 328 0004 7047     		bx	lr
 329              	.L30:
 330 0006 C046     		.align	2
 331              	.L29:
 332 0008 00000000 		.word	CapSense_fingerThreshold
 333              		.cfi_endproc
 334              	.LFE47:
 335              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 336              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 337              		.align	2
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 21


 338              		.global	CapSense_GetNoiseThreshold
 339              		.code	16
 340              		.thumb_func
 341              		.type	CapSense_GetNoiseThreshold, %function
 342              	CapSense_GetNoiseThreshold:
 343              	.LFB48:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 344              		.loc 1 824 0
 345              		.cfi_startproc
 346              	.LVL32:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 347              		.loc 1 825 0
 348 0000 014B     		ldr	r3, .L32
 349 0002 185C     		ldrb	r0, [r3, r0]
 350              	.LVL33:
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 351              		.loc 1 826 0
 352              		@ sp needed
 353 0004 7047     		bx	lr
 354              	.L33:
 355 0006 C046     		.align	2
 356              	.L32:
 357 0008 00000000 		.word	CapSense_noiseThreshold
 358              		.cfi_endproc
 359              	.LFE48:
 360              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 361              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 362              		.align	2
 363              		.global	CapSense_GetFingerHysteresis
 364              		.code	16
 365              		.thumb_func
 366              		.type	CapSense_GetFingerHysteresis, %function
 367              	CapSense_GetFingerHysteresis:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 22


 368              	.LFB49:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 369              		.loc 1 852 0
 370              		.cfi_startproc
 371              	.LVL34:
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 372              		.loc 1 853 0
 373 0000 014B     		ldr	r3, .L35
 374 0002 185C     		ldrb	r0, [r3, r0]
 375              	.LVL35:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 376              		.loc 1 854 0
 377              		@ sp needed
 378 0004 7047     		bx	lr
 379              	.L36:
 380 0006 C046     		.align	2
 381              	.L35:
 382 0008 00000000 		.word	CapSense_hysteresis
 383              		.cfi_endproc
 384              	.LFE49:
 385              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 386              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 387              		.align	2
 388              		.global	CapSense_GetNegativeNoiseThreshold
 389              		.code	16
 390              		.thumb_func
 391              		.type	CapSense_GetNegativeNoiseThreshold, %function
 392              	CapSense_GetNegativeNoiseThreshold:
 393              	.LFB50:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 23


 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 394              		.loc 1 880 0
 395              		.cfi_startproc
 396              	.LVL36:
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 397              		.loc 1 882 0
 398 0000 014B     		ldr	r3, .L38
 399 0002 185C     		ldrb	r0, [r3, r0]
 400              	.LVL37:
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 401              		.loc 1 886 0
 402              		@ sp needed
 403 0004 7047     		bx	lr
 404              	.L39:
 405 0006 C046     		.align	2
 406              	.L38:
 407 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 408              		.cfi_endproc
 409              	.LFE50:
 410              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 411              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 412              		.align	2
 413              		.global	CapSense_SetFingerThreshold
 414              		.code	16
 415              		.thumb_func
 416              		.type	CapSense_SetFingerThreshold, %function
 417              	CapSense_SetFingerThreshold:
 418              	.LFB51:
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 24


 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 419              		.loc 1 913 0
 420              		.cfi_startproc
 421              	.LVL38:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 422              		.loc 1 914 0
 423 0000 014B     		ldr	r3, .L41
 424 0002 1954     		strb	r1, [r3, r0]
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 425              		.loc 1 915 0
 426              		@ sp needed
 427 0004 7047     		bx	lr
 428              	.L42:
 429 0006 C046     		.align	2
 430              	.L41:
 431 0008 00000000 		.word	CapSense_fingerThreshold
 432              		.cfi_endproc
 433              	.LFE51:
 434              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 435              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 436              		.align	2
 437              		.global	CapSense_SetNoiseThreshold
 438              		.code	16
 439              		.thumb_func
 440              		.type	CapSense_SetNoiseThreshold, %function
 441              	CapSense_SetNoiseThreshold:
 442              	.LFB52:
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 25


 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 443              		.loc 1 941 0
 444              		.cfi_startproc
 445              	.LVL39:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 446              		.loc 1 942 0
 447 0000 014B     		ldr	r3, .L44
 448 0002 1954     		strb	r1, [r3, r0]
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 449              		.loc 1 943 0
 450              		@ sp needed
 451 0004 7047     		bx	lr
 452              	.L45:
 453 0006 C046     		.align	2
 454              	.L44:
 455 0008 00000000 		.word	CapSense_noiseThreshold
 456              		.cfi_endproc
 457              	.LFE52:
 458              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 459              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 460              		.align	2
 461              		.global	CapSense_SetFingerHysteresis
 462              		.code	16
 463              		.thumb_func
 464              		.type	CapSense_SetFingerHysteresis, %function
 465              	CapSense_SetFingerHysteresis:
 466              	.LFB53:
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 26


 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 467              		.loc 1 969 0
 468              		.cfi_startproc
 469              	.LVL40:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 470              		.loc 1 970 0
 471 0000 014B     		ldr	r3, .L47
 472 0002 1954     		strb	r1, [r3, r0]
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 473              		.loc 1 971 0
 474              		@ sp needed
 475 0004 7047     		bx	lr
 476              	.L48:
 477 0006 C046     		.align	2
 478              	.L47:
 479 0008 00000000 		.word	CapSense_hysteresis
 480              		.cfi_endproc
 481              	.LFE53:
 482              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 483              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 484              		.align	2
 485              		.global	CapSense_SetNegativeNoiseThreshold
 486              		.code	16
 487              		.thumb_func
 488              		.type	CapSense_SetNegativeNoiseThreshold, %function
 489              	CapSense_SetNegativeNoiseThreshold:
 490              	.LFB54:
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 27


 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 491              		.loc 1 998 0
 492              		.cfi_startproc
 493              	.LVL41:
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 494              		.loc 1 999 0
 495 0000 014B     		ldr	r3, .L50
 496 0002 1954     		strb	r1, [r3, r0]
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 497              		.loc 1 1000 0
 498              		@ sp needed
 499 0004 7047     		bx	lr
 500              	.L51:
 501 0006 C046     		.align	2
 502              	.L50:
 503 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 504              		.cfi_endproc
 505              	.LFE54:
 506              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 507              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 508              		.align	2
 509              		.global	CapSense_SetDebounce
 510              		.code	16
 511              		.thumb_func
 512              		.type	CapSense_SetDebounce, %function
 513              	CapSense_SetDebounce:
 514              	.LFB55:
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 28


1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 515              		.loc 1 1026 0
 516              		.cfi_startproc
 517              	.LVL42:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 518              		.loc 1 1027 0
 519 0000 014B     		ldr	r3, .L53
 520 0002 1954     		strb	r1, [r3, r0]
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 521              		.loc 1 1028 0
 522              		@ sp needed
 523 0004 7047     		bx	lr
 524              	.L54:
 525 0006 C046     		.align	2
 526              	.L53:
 527 0008 00000000 		.word	.LANCHOR1
 528              		.cfi_endproc
 529              	.LFE55:
 530              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 531              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 532              		.align	2
 533              		.global	CapSense_SetLowBaselineReset
 534              		.code	16
 535              		.thumb_func
 536              		.type	CapSense_SetLowBaselineReset, %function
 537              	CapSense_SetLowBaselineReset:
 538              	.LFB56:
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 29


 539              		.loc 1 1054 0
 540              		.cfi_startproc
 541              	.LVL43:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 542              		.loc 1 1055 0
 543 0000 014B     		ldr	r3, .L56
 544 0002 1818     		add	r0, r3, r0
 545              	.LVL44:
 546 0004 0171     		strb	r1, [r0, #4]
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 547              		.loc 1 1056 0
 548              		@ sp needed
 549 0006 7047     		bx	lr
 550              	.L57:
 551              		.align	2
 552              	.L56:
 553 0008 00000000 		.word	.LANCHOR1
 554              		.cfi_endproc
 555              	.LFE56:
 556              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 557              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 558              		.align	2
 559              		.global	CapSense_CheckIsSensorActive
 560              		.code	16
 561              		.thumb_func
 562              		.type	CapSense_CheckIsSensorActive, %function
 563              	CapSense_CheckIsSensorActive:
 564              	.LFB57:
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 30


1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 565              		.loc 1 1100 0
 566              		.cfi_startproc
 567              	.LVL45:
 568 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 569              		.cfi_def_cfa_offset 20
 570              		.cfi_offset 4, -20
 571              		.cfi_offset 5, -16
 572              		.cfi_offset 6, -12
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 4746     		mov	r7, r8
 576 0004 80B4     		push	{r7}
 577              		.cfi_def_cfa_offset 24
 578              		.cfi_offset 8, -24
 579 0006 041C     		mov	r4, r0
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 580              		.loc 1 1110 0
 581 0008 224B     		ldr	r3, .L63
 582 000a 1D5C     		ldrb	r5, [r3, r0]
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 583              		.loc 1 1112 0
 584 000c 224B     		ldr	r3, .L63+4
 585 000e 5F5D     		ldrb	r7, [r3, r5]
 586              	.LVL46:
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 587              		.loc 1 1113 0
 588 0010 224B     		ldr	r3, .L63+8
 589 0012 5E5D     		ldrb	r6, [r3, r5]
 590              	.LVL47:
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 591              		.loc 1 1114 0
 592 0014 224B     		ldr	r3, .L63+12
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 31


 593 0016 5B5D     		ldrb	r3, [r3, r5]
 594 0018 9846     		mov	r8, r3
 595              	.LVL48:
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 596              		.loc 1 1120 0
 597 001a 2248     		ldr	r0, .L63+16
 598              	.LVL49:
 599 001c 1030     		add	r0, r0, #16
 600 001e 211C     		mov	r1, r4
 601 0020 FFF7FEFF 		bl	CapSense_GetBitValue
 602              	.LVL50:
 603 0024 0028     		cmp	r0, #0
 604 0026 10D0     		beq	.L59
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 605              		.loc 1 1123 0
 606 0028 1E4B     		ldr	r3, .L63+16
 607 002a 1B19     		add	r3, r3, r4
 608 002c 1B7A     		ldrb	r3, [r3, #8]
 609 002e BE1B     		sub	r6, r7, r6
 610              	.LVL51:
 611 0030 B342     		cmp	r3, r6
 612 0032 23DA     		bge	.L60
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 613              		.loc 1 1125 0
 614 0034 1B4E     		ldr	r6, .L63+16
 615 0036 301C     		mov	r0, r6
 616 0038 1030     		add	r0, r0, #16
 617 003a 211C     		mov	r1, r4
 618 003c 0022     		mov	r2, #0
 619 003e FFF7FEFF 		bl	CapSense_SetBitValue
 620              	.LVL52:
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 621              		.loc 1 1127 0
 622 0042 7519     		add	r5, r6, r5
 623 0044 4346     		mov	r3, r8
 624 0046 2B73     		strb	r3, [r5, #12]
 625 0048 18E0     		b	.L60
 626              	.LVL53:
 627              	.L59:
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 628              		.loc 1 1133 0
 629 004a 164B     		ldr	r3, .L63+16
 630 004c 1B19     		add	r3, r3, r4
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 32


 631 004e 1B7A     		ldrb	r3, [r3, #8]
 632 0050 BE19     		add	r6, r7, r6
 633              	.LVL54:
 634 0052 B342     		cmp	r3, r6
 635 0054 0EDB     		blt	.L61
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 636              		.loc 1 1135 0
 637 0056 134B     		ldr	r3, .L63+16
 638 0058 5D19     		add	r5, r3, r5
 639 005a 2B7B     		ldrb	r3, [r5, #12]
 640 005c 013B     		sub	r3, r3, #1
 641 005e DBB2     		uxtb	r3, r3
 642 0060 2B73     		strb	r3, [r5, #12]
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 643              		.loc 1 1137 0
 644 0062 002B     		cmp	r3, #0
 645 0064 0AD1     		bne	.L60
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 646              		.loc 1 1139 0
 647 0066 0F48     		ldr	r0, .L63+16
 648 0068 1030     		add	r0, r0, #16
 649 006a 211C     		mov	r1, r4
 650 006c 0122     		mov	r2, #1
 651 006e FFF7FEFF 		bl	CapSense_SetBitValue
 652              	.LVL55:
 653 0072 03E0     		b	.L60
 654              	.L61:
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 655              		.loc 1 1145 0
 656 0074 0B4B     		ldr	r3, .L63+16
 657 0076 5D19     		add	r5, r3, r5
 658 0078 4346     		mov	r3, r8
 659 007a 2B73     		strb	r3, [r5, #12]
 660              	.L60:
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 661              		.loc 1 1149 0
 662 007c 0948     		ldr	r0, .L63+16
 663 007e 1030     		add	r0, r0, #16
 664 0080 211C     		mov	r1, r4
 665 0082 FFF7FEFF 		bl	CapSense_GetBitValue
 666              	.LVL56:
 667 0086 0028     		cmp	r0, #0
 668 0088 00D0     		beq	.L62
 669 008a 0120     		mov	r0, #1
 670              	.L62:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 33


 671              		.loc 1 1150 0 discriminator 4
 672              		@ sp needed
 673              	.LVL57:
 674              	.LVL58:
 675              	.LVL59:
 676 008c 04BC     		pop	{r2}
 677 008e 9046     		mov	r8, r2
 678 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 679              	.L64:
 680 0092 C046     		.align	2
 681              	.L63:
 682 0094 00000000 		.word	CapSense_widgetNumber
 683 0098 00000000 		.word	CapSense_fingerThreshold
 684 009c 00000000 		.word	CapSense_hysteresis
 685 00a0 00000000 		.word	.LANCHOR1
 686 00a4 00000000 		.word	.LANCHOR0
 687              		.cfi_endproc
 688              	.LFE57:
 689              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 690              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 691              		.align	2
 692              		.global	CapSense_CheckIsWidgetActive
 693              		.code	16
 694              		.thumb_func
 695              		.type	CapSense_CheckIsWidgetActive, %function
 696              	CapSense_CheckIsWidgetActive:
 697              	.LFB58:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 34


1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 698              		.loc 1 1182 0
 699              		.cfi_startproc
 700              	.LVL60:
 701 0000 70B5     		push	{r4, r5, r6, lr}
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 4, -16
 704              		.cfi_offset 5, -12
 705              		.cfi_offset 6, -8
 706              		.cfi_offset 14, -4
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 707              		.loc 1 1183 0
 708 0002 084B     		ldr	r3, .L69
 709 0004 1C5C     		ldrb	r4, [r3, r0]
 710              	.LVL61:
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 711              		.loc 1 1184 0
 712 0006 1818     		add	r0, r3, r0
 713              	.LVL62:
 714 0008 0579     		ldrb	r5, [r0, #4]
 715 000a 2D19     		add	r5, r5, r4
 716              	.LVL63:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 717              		.loc 1 1185 0
 718 000c 0026     		mov	r6, #0
 719              	.LVL64:
 720              	.L67:
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 721              		.loc 1 1190 0
 722 000e 201C     		mov	r0, r4
 723 0010 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 724              	.LVL65:
 725 0014 0028     		cmp	r0, #0
 726 0016 00D0     		beq	.L66
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 727              		.loc 1 1192 0
 728 0018 0126     		mov	r6, #1
 729              	.LVL66:
 730              	.L66:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 731              		.loc 1 1194 0
 732 001a 0134     		add	r4, r4, #1
 733              	.LVL67:
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 734              		.loc 1 1196 0
 735 001c AC42     		cmp	r4, r5
 736 001e F6D3     		bcc	.L67
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 35


1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 737              		.loc 1 1201 0
 738 0020 301C     		mov	r0, r6
 739              		@ sp needed
 740              	.LVL68:
 741              	.LVL69:
 742              	.LVL70:
 743 0022 70BD     		pop	{r4, r5, r6, pc}
 744              	.L70:
 745              		.align	2
 746              	.L69:
 747 0024 00000000 		.word	.LANCHOR2
 748              		.cfi_endproc
 749              	.LFE58:
 750              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 751              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 752              		.align	2
 753              		.global	CapSense_CheckIsAnyWidgetActive
 754              		.code	16
 755              		.thumb_func
 756              		.type	CapSense_CheckIsAnyWidgetActive, %function
 757              	CapSense_CheckIsAnyWidgetActive:
 758              	.LFB59:
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 759              		.loc 1 1228 0
 760              		.cfi_startproc
 761 0000 38B5     		push	{r3, r4, r5, lr}
 762              		.cfi_def_cfa_offset 16
 763              		.cfi_offset 3, -16
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 36


 764              		.cfi_offset 4, -12
 765              		.cfi_offset 5, -8
 766              		.cfi_offset 14, -4
 767              	.LVL71:
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 768              		.loc 1 1231 0
 769 0002 0025     		mov	r5, #0
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 770              		.loc 1 1233 0
 771 0004 0024     		mov	r4, #0
 772 0006 06E0     		b	.L72
 773              	.LVL72:
 774              	.L74:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 775              		.loc 1 1235 0
 776 0008 201C     		mov	r0, r4
 777 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 778              	.LVL73:
 779 000e 0028     		cmp	r0, #0
 780 0010 00D0     		beq	.L73
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 781              		.loc 1 1237 0
 782 0012 0125     		mov	r5, #1
 783              	.LVL74:
 784              	.L73:
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 785              		.loc 1 1233 0 discriminator 2
 786 0014 0134     		add	r4, r4, #1
 787              	.LVL75:
 788              	.L72:
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 789              		.loc 1 1233 0 is_stmt 0 discriminator 1
 790 0016 012C     		cmp	r4, #1
 791 0018 F6D9     		bls	.L74
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 792              		.loc 1 1244 0 is_stmt 1
 793 001a 281C     		mov	r0, r5
 794              		@ sp needed
 795              	.LVL76:
 796              	.LVL77:
 797 001c 38BD     		pop	{r3, r4, r5, pc}
 798              		.cfi_endproc
 799              	.LFE59:
 800              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 801 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 802              		.align	2
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 37


 803              		.global	CapSense_EnableWidget
 804              		.code	16
 805              		.thumb_func
 806              		.type	CapSense_EnableWidget, %function
 807              	CapSense_EnableWidget:
 808              	.LFB60:
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 809              		.loc 1 1275 0
 810              		.cfi_startproc
 811              	.LVL78:
 812 0000 38B5     		push	{r3, r4, r5, lr}
 813              		.cfi_def_cfa_offset 16
 814              		.cfi_offset 3, -16
 815              		.cfi_offset 4, -12
 816              		.cfi_offset 5, -8
 817              		.cfi_offset 14, -4
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 818              		.loc 1 1277 0
 819 0002 084B     		ldr	r3, .L78
 820 0004 1C5C     		ldrb	r4, [r3, r0]
 821              	.LVL79:
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 822              		.loc 1 1278 0
 823 0006 1818     		add	r0, r3, r0
 824              	.LVL80:
 825 0008 0579     		ldrb	r5, [r0, #4]
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 38


 826 000a 2D19     		add	r5, r5, r4
 827 000c EDB2     		uxtb	r5, r5
 828              	.LVL81:
 829              	.L77:
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 830              		.loc 1 1283 0 discriminator 1
 831 000e 0648     		ldr	r0, .L78+4
 832 0010 211C     		mov	r1, r4
 833 0012 0122     		mov	r2, #1
 834 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 835              	.LVL82:
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 836              		.loc 1 1284 0 discriminator 1
 837 0018 0134     		add	r4, r4, #1
 838              	.LVL83:
 839 001a E4B2     		uxtb	r4, r4
 840              	.LVL84:
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 841              		.loc 1 1286 0 discriminator 1
 842 001c AC42     		cmp	r4, r5
 843 001e F6D3     		bcc	.L77
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 844              		.loc 1 1287 0
 845              		@ sp needed
 846              	.LVL85:
 847              	.LVL86:
 848 0020 38BD     		pop	{r3, r4, r5, pc}
 849              	.L79:
 850 0022 C046     		.align	2
 851              	.L78:
 852 0024 00000000 		.word	.LANCHOR2
 853 0028 00000000 		.word	CapSense_sensorEnableMask
 854              		.cfi_endproc
 855              	.LFE60:
 856              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 857              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 858              		.align	2
 859              		.global	CapSense_DisableWidget
 860              		.code	16
 861              		.thumb_func
 862              		.type	CapSense_DisableWidget, %function
 863              	CapSense_DisableWidget:
 864              	.LFB61:
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 39


1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 865              		.loc 1 1318 0
 866              		.cfi_startproc
 867              	.LVL87:
 868 0000 38B5     		push	{r3, r4, r5, lr}
 869              		.cfi_def_cfa_offset 16
 870              		.cfi_offset 3, -16
 871              		.cfi_offset 4, -12
 872              		.cfi_offset 5, -8
 873              		.cfi_offset 14, -4
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 874              		.loc 1 1319 0
 875 0002 084B     		ldr	r3, .L82
 876 0004 1C5C     		ldrb	r4, [r3, r0]
 877              	.LVL88:
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 878              		.loc 1 1320 0
 879 0006 1818     		add	r0, r3, r0
 880              	.LVL89:
 881 0008 0579     		ldrb	r5, [r0, #4]
 882 000a 2D19     		add	r5, r5, r4
 883 000c EDB2     		uxtb	r5, r5
 884              	.LVL90:
 885              	.L81:
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 886              		.loc 1 1326 0 discriminator 1
 887 000e 0648     		ldr	r0, .L82+4
 888 0010 211C     		mov	r1, r4
 889 0012 0022     		mov	r2, #0
 890 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 891              	.LVL91:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 40


1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 892              		.loc 1 1327 0 discriminator 1
 893 0018 0134     		add	r4, r4, #1
 894              	.LVL92:
 895 001a E4B2     		uxtb	r4, r4
 896              	.LVL93:
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 897              		.loc 1 1329 0 discriminator 1
 898 001c AC42     		cmp	r4, r5
 899 001e F6D3     		bcc	.L81
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 900              		.loc 1 1330 0
 901              		@ sp needed
 902              	.LVL94:
 903              	.LVL95:
 904 0020 38BD     		pop	{r3, r4, r5, pc}
 905              	.L83:
 906 0022 C046     		.align	2
 907              	.L82:
 908 0024 00000000 		.word	.LANCHOR2
 909 0028 00000000 		.word	CapSense_sensorEnableMask
 910              		.cfi_endproc
 911              	.LFE61:
 912              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 913              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 914              		.align	2
 915              		.global	CapSense_MedianFilter
 916              		.code	16
 917              		.thumb_func
 918              		.type	CapSense_MedianFilter, %function
 919              	CapSense_MedianFilter:
 920              	.LFB62:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 41


1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 42


1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 43


1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 44


1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 45


1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 46


1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 47


1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 48


1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 49


1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 50


1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 51


1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 52


1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 53


2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 54


2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 55


2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 56


2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 57


2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 58


2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 921              		.loc 1 2370 0
 922              		.cfi_startproc
 923              	.LVL96:
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 924              		.loc 1 2373 0
 925 0000 8842     		cmp	r0, r1
 926 0002 02D9     		bls	.L85
 927 0004 031C     		mov	r3, r0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 59


2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 928              		.loc 1 2377 0
 929 0006 081C     		mov	r0, r1
 930              	.LVL97:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 931              		.loc 1 2376 0
 932 0008 191C     		mov	r1, r3
 933              	.LVL98:
 934              	.L85:
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 935              		.loc 1 2380 0
 936 000a 9142     		cmp	r1, r2
 937 000c 00D9     		bls	.L86
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 938              		.loc 1 2382 0
 939 000e 111C     		mov	r1, r2
 940              	.LVL99:
 941              	.L86:
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 942              		.loc 1 2385 0
 943 0010 0B1C     		add	r3, r1, #0
 944 0012 8142     		cmp	r1, r0
 945 0014 00D2     		bcs	.L87
 946 0016 031C     		add	r3, r0, #0
 947              	.L87:
 948 0018 98B2     		uxth	r0, r3
 949              	.LVL100:
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 950              		.loc 1 2386 0
 951              		@ sp needed
 952 001a 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE62:
 955              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 956              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 957              		.align	2
 958              		.global	CapSense_IIR4Filter
 959              		.code	16
 960              		.thumb_func
 961              		.type	CapSense_IIR4Filter, %function
 962              	CapSense_IIR4Filter:
 963              	.LFB63:
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 60


2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 61


2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 964              		.loc 1 2490 0
 965              		.cfi_startproc
 966              	.LVL101:
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 967              		.loc 1 2494 0
 968 0000 4318     		add	r3, r0, r1
 969              	.LVL102:
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 970              		.loc 1 2495 0
 971 0002 4900     		lsl	r1, r1, #1
 972              	.LVL103:
 973 0004 C818     		add	r0, r1, r3
 974              	.LVL104:
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 62


 975              		.loc 1 2496 0
 976 0006 8008     		lsr	r0, r0, #2
 977              	.LVL105:
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 978              		.loc 1 2498 0
 979 0008 80B2     		uxth	r0, r0
 980              	.LVL106:
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 981              		.loc 1 2499 0
 982              		@ sp needed
 983 000a 7047     		bx	lr
 984              		.cfi_endproc
 985              	.LFE63:
 986              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 987              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 988              		.align	2
 989              		.global	CapSense_UpdateBaselineNoThreshold
 990              		.code	16
 991              		.thumb_func
 992              		.type	CapSense_UpdateBaselineNoThreshold, %function
 993              	CapSense_UpdateBaselineNoThreshold:
 994              	.LFB39:
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 995              		.loc 1 350 0
 996              		.cfi_startproc
 997              	.LVL107:
 998 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 999              		.cfi_def_cfa_offset 20
 1000              		.cfi_offset 4, -20
 1001              		.cfi_offset 5, -16
 1002              		.cfi_offset 6, -12
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
 1005 0002 4746     		mov	r7, r8
 1006 0004 80B4     		push	{r7}
 1007              		.cfi_def_cfa_offset 24
 1008              		.cfi_offset 8, -24
 1009 0006 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 32
 1011 0008 041C     		mov	r4, r0
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 1012              		.loc 1 355 0
 1013 000a 3B4B     		ldr	r3, .L102
 1014 000c 1E5C     		ldrb	r6, [r3, r0]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 1015              		.loc 1 356 0
 1016 000e 3B4B     		ldr	r3, .L102+4
 1017 0010 9B5D     		ldrb	r3, [r3, r6]
 1018 0012 0193     		str	r3, [sp, #4]
 1019              	.LVL108:
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1020              		.loc 1 364 0
 1021 0014 4200     		lsl	r2, r0, #1
 1022 0016 3A4B     		ldr	r3, .L102+8
 1023 0018 D75A     		ldrh	r7, [r2, r3]
 1024              	.LVL109:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 63


 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1025              		.loc 1 367 0
 1026 001a 3A4B     		ldr	r3, .L102+12
 1027 001c 9B79     		ldrb	r3, [r3, #6]
 1028 001e 002B     		cmp	r3, #0
 1029 0020 08D0     		beq	.L92
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 1030              		.loc 1 388 0
 1031 0022 394D     		ldr	r5, .L102+16
 1032 0024 9046     		mov	r8, r2
 1033 0026 515B     		ldrh	r1, [r2, r5]
 1034 0028 381C     		mov	r0, r7
 1035              	.LVL110:
 1036 002a FFF7FEFF 		bl	CapSense_IIR4Filter
 1037              	.LVL111:
 1038 002e 071C     		mov	r7, r0
 1039              	.LVL112:
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 1040              		.loc 1 389 0
 1041 0030 4346     		mov	r3, r8
 1042 0032 5853     		strh	r0, [r3, r5]
 1043              	.LVL113:
 1044              	.L92:
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1045              		.loc 1 410 0
 1046 0034 E1B2     		uxtb	r1, r4
 1047 0036 3548     		ldr	r0, .L102+20
 1048 0038 314A     		ldr	r2, .L102+8
 1049 003a FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_20
 1050              	.LVL114:
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1051              		.loc 1 415 0
 1052 003e 6300     		lsl	r3, r4, #1
 1053 0040 334A     		ldr	r2, .L102+24
 1054 0042 9A5A     		ldrh	r2, [r3, r2]
 1055 0044 BA42     		cmp	r2, r7
 1056 0046 07D8     		bhi	.L93
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1057              		.loc 1 417 0
 1058 0048 0021     		mov	r1, #0
 1059 004a 324B     		ldr	r3, .L102+28
 1060 004c 1955     		strb	r1, [r3, r4]
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1061              		.loc 1 418 0
 1062 004e BD1A     		sub	r5, r7, r2
 1063 0050 ADB2     		uxth	r5, r5
 1064              	.LVL115:
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1065              		.loc 1 419 0
 1066 0052 0123     		mov	r3, #1
 1067 0054 9846     		mov	r8, r3
 1068 0056 03E0     		b	.L94
 1069              	.LVL116:
 1070              	.L93:
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1071              		.loc 1 423 0
 1072 0058 D51B     		sub	r5, r2, r7
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 64


 1073 005a ADB2     		uxth	r5, r5
 1074              	.LVL117:
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1075              		.loc 1 424 0
 1076 005c 0023     		mov	r3, #0
 1077 005e 9846     		mov	r8, r3
 1078              	.LVL118:
 1079              	.L94:
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 1080              		.loc 1 428 0
 1081 0060 4346     		mov	r3, r8
 1082 0062 002B     		cmp	r3, #0
 1083 0064 15D1     		bne	.L95
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 1084              		.loc 1 428 0 is_stmt 0 discriminator 1
 1085 0066 2C4B     		ldr	r3, .L102+32
 1086 0068 9B5D     		ldrb	r3, [r3, r6]
 1087 006a AB42     		cmp	r3, r5
 1088 006c 11D2     		bcs	.L95
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1089              		.loc 1 433 0 is_stmt 1
 1090 006e 294B     		ldr	r3, .L102+28
 1091 0070 1B5D     		ldrb	r3, [r3, r4]
 1092 0072 244A     		ldr	r2, .L102+12
 1093 0074 1219     		add	r2, r2, r4
 1094 0076 1279     		ldrb	r2, [r2, #4]
 1095 0078 9342     		cmp	r3, r2
 1096 007a 06D3     		bcc	.L96
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1097              		.loc 1 435 0
 1098 007c 201C     		mov	r0, r4
 1099 007e FFF7FEFF 		bl	CapSense_BaseInit
 1100              	.LVL119:
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1101              		.loc 1 436 0
 1102 0082 0022     		mov	r2, #0
 1103 0084 234B     		ldr	r3, .L102+28
 1104 0086 1A55     		strb	r2, [r3, r4]
 1105 0088 1CE0     		b	.L97
 1106              	.L96:
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1107              		.loc 1 440 0
 1108 008a 0133     		add	r3, r3, #1
 1109 008c 214A     		ldr	r2, .L102+28
 1110 008e 1355     		strb	r3, [r2, r4]
 1111 0090 18E0     		b	.L97
 1112              	.L95:
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1113              		.loc 1 448 0
 1114 0092 6B46     		mov	r3, sp
 1115 0094 9B88     		ldrh	r3, [r3, #4]
 1116 0096 AB42     		cmp	r3, r5
 1117 0098 06D2     		bcs	.L98
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 1118              		.loc 1 449 0 discriminator 1
 1119 009a 1F4B     		ldr	r3, .L102+32
 1120 009c 9B5D     		ldrb	r3, [r3, r6]
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 65


 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1121              		.loc 1 448 0 discriminator 1
 1122 009e AB42     		cmp	r3, r5
 1123 00a0 10D9     		bls	.L97
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 1124              		.loc 1 450 0
 1125 00a2 4346     		mov	r3, r8
 1126 00a4 002B     		cmp	r3, #0
 1127 00a6 0DD1     		bne	.L97
 1128              	.L98:
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1129              		.loc 1 461 0
 1130 00a8 1302     		lsl	r3, r2, #8
 1131              	.LVL120:
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1132              		.loc 1 462 0
 1133 00aa 1948     		ldr	r0, .L102+24
 1134 00ac 0119     		add	r1, r0, r4
 1135 00ae 0E79     		ldrb	r6, [r1, #4]
 1136 00b0 3343     		orr	r3, r6
 1137              	.LVL121:
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1138              		.loc 1 465 0
 1139 00b2 FF18     		add	r7, r7, r3
 1140              	.LVL122:
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1141              		.loc 1 468 0
 1142 00b4 BF1A     		sub	r7, r7, r2
 1143              	.LVL123:
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1144              		.loc 1 471 0
 1145 00b6 3A0A     		lsr	r2, r7, #8
 1146 00b8 6300     		lsl	r3, r4, #1
 1147 00ba C252     		strh	r2, [r0, r3]
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1148              		.loc 1 472 0
 1149 00bc 0F71     		strb	r7, [r1, #4]
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1150              		.loc 1 474 0
 1151 00be 0022     		mov	r2, #0
 1152 00c0 144B     		ldr	r3, .L102+28
 1153 00c2 1A55     		strb	r2, [r3, r4]
 1154              	.LVL124:
 1155              	.L97:
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1156              		.loc 1 481 0
 1157 00c4 6B46     		mov	r3, sp
 1158 00c6 9E88     		ldrh	r6, [r3, #4]
 1159 00c8 AE42     		cmp	r6, r5
 1160 00ca 0DD2     		bcs	.L99
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1161              		.loc 1 481 0 is_stmt 0 discriminator 1
 1162 00cc 4346     		mov	r3, r8
 1163 00ce 002B     		cmp	r3, #0
 1164 00d0 0AD0     		beq	.L99
 1165              	.LVL125:
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 66


 1166              		.loc 1 485 0 is_stmt 1
 1167 00d2 FF2D     		cmp	r5, #255
 1168 00d4 04D9     		bls	.L100
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 1169              		.loc 1 487 0
 1170 00d6 0E4B     		ldr	r3, .L102+24
 1171              	.LVL126:
 1172 00d8 1C19     		add	r4, r3, r4
 1173              	.LVL127:
 1174 00da FF23     		mov	r3, #255
 1175 00dc 2372     		strb	r3, [r4, #8]
 1176 00de 07E0     		b	.L91
 1177              	.LVL128:
 1178              	.L100:
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1179              		.loc 1 491 0
 1180 00e0 0B4B     		ldr	r3, .L102+24
 1181              	.LVL129:
 1182 00e2 1C19     		add	r4, r3, r4
 1183              	.LVL130:
 1184 00e4 2572     		strb	r5, [r4, #8]
 1185 00e6 03E0     		b	.L91
 1186              	.LVL131:
 1187              	.L99:
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1188              		.loc 1 500 0
 1189 00e8 094B     		ldr	r3, .L102+24
 1190 00ea 1C19     		add	r4, r3, r4
 1191              	.LVL132:
 1192 00ec 0023     		mov	r3, #0
 1193 00ee 2372     		strb	r3, [r4, #8]
 1194              	.L91:
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1195              		.loc 1 507 0
 1196 00f0 02B0     		add	sp, sp, #8
 1197              		@ sp needed
 1198              	.LVL133:
 1199              	.LVL134:
 1200 00f2 04BC     		pop	{r2}
 1201 00f4 9046     		mov	r8, r2
 1202 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1203              	.L103:
 1204              		.align	2
 1205              	.L102:
 1206 00f8 00000000 		.word	CapSense_widgetNumber
 1207 00fc 00000000 		.word	CapSense_noiseThreshold
 1208 0100 00000000 		.word	CapSense_sensorRaw
 1209 0104 00000000 		.word	.LANCHOR1
 1210 0108 00000000 		.word	CapSense_rawFilterData1
 1211 010c 00000000 		.word	CapSense_config
 1212 0110 00000000 		.word	.LANCHOR0
 1213 0114 00000000 		.word	CapSense_lowBaselineResetCnt
 1214 0118 00000000 		.word	CapSense_negativeNoiseThreshold
 1215              		.cfi_endproc
 1216              	.LFE39:
 1217              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1218              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 67


 1219              		.align	2
 1220              		.global	CapSense_UpdateSensorBaseline
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	CapSense_UpdateSensorBaseline, %function
 1224              	CapSense_UpdateSensorBaseline:
 1225              	.LFB40:
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1226              		.loc 1 541 0
 1227              		.cfi_startproc
 1228              	.LVL135:
 1229 0000 10B5     		push	{r4, lr}
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 4, -8
 1232              		.cfi_offset 14, -4
 1233 0002 041C     		mov	r4, r0
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1234              		.loc 1 553 0
 1235 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1236              	.LVL136:
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 1237              		.loc 1 556 0
 1238 0008 201C     		mov	r0, r4
 1239 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1240              	.LVL137:
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1241              		.loc 1 562 0
 1242              		@ sp needed
 1243              	.LVL138:
 1244 000e 10BD     		pop	{r4, pc}
 1245              		.cfi_endproc
 1246              	.LFE40:
 1247              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1248              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1249              		.align	2
 1250              		.global	CapSense_UpdateEnabledBaselines
 1251              		.code	16
 1252              		.thumb_func
 1253              		.type	CapSense_UpdateEnabledBaselines, %function
 1254              	CapSense_UpdateEnabledBaselines:
 1255              	.LFB41:
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1256              		.loc 1 595 0
 1257              		.cfi_startproc
 1258 0000 10B5     		push	{r4, lr}
 1259              		.cfi_def_cfa_offset 8
 1260              		.cfi_offset 4, -8
 1261              		.cfi_offset 14, -4
 1262              	.LVL139:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1263              		.loc 1 599 0
 1264 0002 0024     		mov	r4, #0
 1265 0004 09E0     		b	.L106
 1266              	.LVL140:
 1267              	.L108:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 1268              		.loc 1 601 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 68


 1269 0006 0648     		ldr	r0, .L109
 1270 0008 211C     		mov	r1, r4
 1271 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1272              	.LVL141:
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1273              		.loc 1 603 0
 1274 000e 0028     		cmp	r0, #0
 1275 0010 02D0     		beq	.L107
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1276              		.loc 1 605 0
 1277 0012 201C     		mov	r0, r4
 1278              	.LVL142:
 1279 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1280              	.LVL143:
 1281              	.L107:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1282              		.loc 1 599 0 discriminator 2
 1283 0018 0134     		add	r4, r4, #1
 1284              	.LVL144:
 1285              	.L106:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1286              		.loc 1 599 0 is_stmt 0 discriminator 1
 1287 001a 012C     		cmp	r4, #1
 1288 001c F3D9     		bls	.L108
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1289              		.loc 1 608 0 is_stmt 1
 1290              		@ sp needed
 1291              	.LVL145:
 1292 001e 10BD     		pop	{r4, pc}
 1293              	.L110:
 1294              		.align	2
 1295              	.L109:
 1296 0020 00000000 		.word	CapSense_sensorEnableMask
 1297              		.cfi_endproc
 1298              	.LFE41:
 1299              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1300              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1301              		.align	2
 1302              		.global	CapSense_UpdateWidgetBaseline
 1303              		.code	16
 1304              		.thumb_func
 1305              		.type	CapSense_UpdateWidgetBaseline, %function
 1306              	CapSense_UpdateWidgetBaseline:
 1307              	.LFB42:
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1308              		.loc 1 640 0
 1309              		.cfi_startproc
 1310              	.LVL146:
 1311 0000 38B5     		push	{r3, r4, r5, lr}
 1312              		.cfi_def_cfa_offset 16
 1313              		.cfi_offset 3, -16
 1314              		.cfi_offset 4, -12
 1315              		.cfi_offset 5, -8
 1316              		.cfi_offset 14, -4
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1317              		.loc 1 648 0
 1318 0002 094B     		ldr	r3, .L115
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 69


 1319 0004 1A18     		add	r2, r3, r0
 1320 0006 1579     		ldrb	r5, [r2, #4]
 1321              	.LVL147:
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 1322              		.loc 1 651 0
 1323 0008 1C5C     		ldrb	r4, [r3, r0]
 1324              	.LVL148:
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 1325              		.loc 1 654 0
 1326 000a 2D19     		add	r5, r5, r4
 1327              	.LVL149:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1328              		.loc 1 656 0
 1329 000c 09E0     		b	.L112
 1330              	.LVL150:
 1331              	.L114:
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 1332              		.loc 1 658 0
 1333 000e 0748     		ldr	r0, .L115+4
 1334 0010 211C     		mov	r1, r4
 1335 0012 FFF7FEFF 		bl	CapSense_GetBitValue
 1336              	.LVL151:
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1337              		.loc 1 660 0
 1338 0016 0028     		cmp	r0, #0
 1339 0018 02D0     		beq	.L113
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1340              		.loc 1 662 0
 1341 001a 201C     		mov	r0, r4
 1342              	.LVL152:
 1343 001c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1344              	.LVL153:
 1345              	.L113:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1346              		.loc 1 656 0 discriminator 2
 1347 0020 0134     		add	r4, r4, #1
 1348              	.LVL154:
 1349              	.L112:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1350              		.loc 1 656 0 is_stmt 0 discriminator 1
 1351 0022 AC42     		cmp	r4, r5
 1352 0024 F3D3     		bcc	.L114
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1353              		.loc 1 665 0 is_stmt 1
 1354              		@ sp needed
 1355              	.LVL155:
 1356              	.LVL156:
 1357 0026 38BD     		pop	{r3, r4, r5, pc}
 1358              	.L116:
 1359              		.align	2
 1360              	.L115:
 1361 0028 00000000 		.word	.LANCHOR2
 1362 002c 00000000 		.word	CapSense_sensorEnableMask
 1363              		.cfi_endproc
 1364              	.LFE42:
 1365              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1366              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 70


 1367              		.align	2
 1368              		.global	CapSense_GetWidgetNumber
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	CapSense_GetWidgetNumber, %function
 1372              	CapSense_GetWidgetNumber:
 1373              	.LFB64:
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 71


2550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 72


2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 73


2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 74


2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1374              		.loc 1 2723 0
 1375              		.cfi_startproc
 1376              	.LVL157:
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 1377              		.loc 1 2724 0
 1378 0000 014B     		ldr	r3, .L118
 1379 0002 185C     		ldrb	r0, [r3, r0]
 1380              	.LVL158:
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1381              		.loc 1 2725 0
 1382              		@ sp needed
 1383 0004 7047     		bx	lr
 1384              	.L119:
 1385 0006 C046     		.align	2
 1386              	.L118:
 1387 0008 00000000 		.word	CapSense_widgetNumber
 1388              		.cfi_endproc
 1389              	.LFE64:
 1390              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1391              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1392              		.align	2
 1393              		.global	CapSense_GetLowBaselineReset
 1394              		.code	16
 1395              		.thumb_func
 1396              		.type	CapSense_GetLowBaselineReset, %function
 1397              	CapSense_GetLowBaselineReset:
 1398              	.LFB65:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1399              		.loc 1 2749 0
 1400              		.cfi_startproc
 1401              	.LVL159:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 75


2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 1402              		.loc 1 2750 0
 1403 0000 014B     		ldr	r3, .L121
 1404 0002 1818     		add	r0, r3, r0
 1405              	.LVL160:
 1406 0004 0079     		ldrb	r0, [r0, #4]
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1407              		.loc 1 2751 0
 1408              		@ sp needed
 1409 0006 7047     		bx	lr
 1410              	.L122:
 1411              		.align	2
 1412              	.L121:
 1413 0008 00000000 		.word	.LANCHOR1
 1414              		.cfi_endproc
 1415              	.LFE65:
 1416              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1417              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1418              		.align	2
 1419              		.global	CapSense_GetDebounce
 1420              		.code	16
 1421              		.thumb_func
 1422              		.type	CapSense_GetDebounce, %function
 1423              	CapSense_GetDebounce:
 1424              	.LFB66:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1425              		.loc 1 2775 0
 1426              		.cfi_startproc
 1427              	.LVL161:
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 1428              		.loc 1 2776 0
 1429 0000 014B     		ldr	r3, .L124
 1430 0002 185C     		ldrb	r0, [r3, r0]
 1431              	.LVL162:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 76


2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1432              		.loc 1 2777 0
 1433              		@ sp needed
 1434 0004 7047     		bx	lr
 1435              	.L125:
 1436 0006 C046     		.align	2
 1437              	.L124:
 1438 0008 00000000 		.word	.LANCHOR1
 1439              		.cfi_endproc
 1440              	.LFE66:
 1441              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1442              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1443              		.align	2
 1444              		.global	CapSense_EnableRawDataFilters
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CapSense_EnableRawDataFilters, %function
 1448              	CapSense_EnableRawDataFilters:
 1449              	.LFB67:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1450              		.loc 1 2801 0
 1451              		.cfi_startproc
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1452              		.loc 1 2802 0
 1453 0000 0122     		mov	r2, #1
 1454 0002 014B     		ldr	r3, .L127
 1455 0004 9A71     		strb	r2, [r3, #6]
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1456              		.loc 1 2803 0
 1457              		@ sp needed
 1458 0006 7047     		bx	lr
 1459              	.L128:
 1460              		.align	2
 1461              	.L127:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 77


 1462 0008 00000000 		.word	.LANCHOR1
 1463              		.cfi_endproc
 1464              	.LFE67:
 1465              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1466              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1467              		.align	2
 1468              		.global	CapSense_DisableRawDataFilters
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	CapSense_DisableRawDataFilters, %function
 1472              	CapSense_DisableRawDataFilters:
 1473              	.LFB68:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1474              		.loc 1 2826 0
 1475              		.cfi_startproc
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1476              		.loc 1 2827 0
 1477 0000 0022     		mov	r2, #0
 1478 0002 014B     		ldr	r3, .L130
 1479 0004 9A71     		strb	r2, [r3, #6]
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1480              		.loc 1 2828 0
 1481              		@ sp needed
 1482 0006 7047     		bx	lr
 1483              	.L131:
 1484              		.align	2
 1485              	.L130:
 1486 0008 00000000 		.word	.LANCHOR1
 1487              		.cfi_endproc
 1488              	.LFE68:
 1489              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1490              		.global	CapSense_numberOfSensors
 1491              		.global	CapSense_rawDataIndex
 1492              		.global	CapSense_debounce
 1493              		.comm	CapSense_hysteresis,2,4
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 78


 1494              		.comm	CapSense_negativeNoiseThreshold,2,4
 1495              		.comm	CapSense_noiseThreshold,2,4
 1496              		.comm	CapSense_fingerThreshold,2,4
 1497              		.global	CapSense_enableRawFilters
 1498              		.global	CapSense_lowBaselineReset
 1499              		.comm	CapSense_lowBaselineResetCnt,2,4
 1500              		.global	CapSense_sensorOnMask
 1501              		.global	CapSense_sensorSignal
 1502              		.global	CapSense_sensorBaselineLow
 1503              		.global	CapSense_sensorBaseline
 1504              		.comm	CapSense_rawFilterData1,4,4
 1505              		.section	.rodata
 1506              		.align	2
 1507              		.set	.LANCHOR2,. + 0
 1508              		.type	CapSense_rawDataIndex, %object
 1509              		.size	CapSense_rawDataIndex, 2
 1510              	CapSense_rawDataIndex:
 1511 0000 00       		.byte	0
 1512 0001 01       		.byte	1
 1513 0002 0000     		.space	2
 1514              		.type	CapSense_numberOfSensors, %object
 1515              		.size	CapSense_numberOfSensors, 2
 1516              	CapSense_numberOfSensors:
 1517 0004 01       		.byte	1
 1518 0005 01       		.byte	1
 1519 0006 0000     		.data
 1520              		.align	2
 1521              		.set	.LANCHOR1,. + 0
 1522              		.type	CapSense_debounce, %object
 1523              		.size	CapSense_debounce, 2
 1524              	CapSense_debounce:
 1525 0000 05       		.byte	5
 1526 0001 05       		.byte	5
 1527 0002 0000     		.space	2
 1528              		.type	CapSense_lowBaselineReset, %object
 1529              		.size	CapSense_lowBaselineReset, 2
 1530              	CapSense_lowBaselineReset:
 1531 0004 1E       		.byte	30
 1532 0005 1E       		.byte	30
 1533              		.type	CapSense_enableRawFilters, %object
 1534              		.size	CapSense_enableRawFilters, 1
 1535              	CapSense_enableRawFilters:
 1536 0006 01       		.byte	1
 1537 0007 00       		.bss
 1538              		.align	2
 1539              		.set	.LANCHOR0,. + 0
 1540              		.type	CapSense_sensorBaseline, %object
 1541              		.size	CapSense_sensorBaseline, 4
 1542              	CapSense_sensorBaseline:
 1543 0000 00000000 		.space	4
 1544              		.type	CapSense_sensorBaselineLow, %object
 1545              		.size	CapSense_sensorBaselineLow, 2
 1546              	CapSense_sensorBaselineLow:
 1547 0004 0000     		.space	2
 1548 0006 0000     		.space	2
 1549              		.type	CapSense_sensorSignal, %object
 1550              		.size	CapSense_sensorSignal, 2
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 79


 1551              	CapSense_sensorSignal:
 1552 0008 0000     		.space	2
 1553 000a 0000     		.space	2
 1554              		.type	CapSense_debounceCounter, %object
 1555              		.size	CapSense_debounceCounter, 3
 1556              	CapSense_debounceCounter:
 1557 000c 000000   		.space	3
 1558 000f 00       		.space	1
 1559              		.type	CapSense_sensorOnMask, %object
 1560              		.size	CapSense_sensorOnMask, 1
 1561              	CapSense_sensorOnMask:
 1562 0010 00       		.space	1
 1563 0011 000000   		.text
 1564              	.Letext0:
 1565              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1566              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 1567              		.file 4 ".\\Generated_Source\\PSoC4\\CapSense.h"
 1568              		.section	.debug_info,"",%progbits
 1569              	.Ldebug_info0:
 1570 0000 A70D0000 		.4byte	0xda7
 1571 0004 0400     		.2byte	0x4
 1572 0006 00000000 		.4byte	.Ldebug_abbrev0
 1573 000a 04       		.byte	0x4
 1574 000b 01       		.uleb128 0x1
 1575 000c BD050000 		.4byte	.LASF115
 1576 0010 01       		.byte	0x1
 1577 0011 86040000 		.4byte	.LASF116
 1578 0015 C1030000 		.4byte	.LASF117
 1579 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1580 001d 00000000 		.4byte	0
 1581 0021 00000000 		.4byte	.Ldebug_line0
 1582 0025 02       		.uleb128 0x2
 1583 0026 01       		.byte	0x1
 1584 0027 06       		.byte	0x6
 1585 0028 91010000 		.4byte	.LASF0
 1586 002c 02       		.uleb128 0x2
 1587 002d 01       		.byte	0x1
 1588 002e 08       		.byte	0x8
 1589 002f E1060000 		.4byte	.LASF1
 1590 0033 02       		.uleb128 0x2
 1591 0034 02       		.byte	0x2
 1592 0035 05       		.byte	0x5
 1593 0036 48070000 		.4byte	.LASF2
 1594 003a 02       		.uleb128 0x2
 1595 003b 02       		.byte	0x2
 1596 003c 07       		.byte	0x7
 1597 003d 9F030000 		.4byte	.LASF3
 1598 0041 02       		.uleb128 0x2
 1599 0042 04       		.byte	0x4
 1600 0043 05       		.byte	0x5
 1601 0044 FD010000 		.4byte	.LASF4
 1602 0048 02       		.uleb128 0x2
 1603 0049 04       		.byte	0x4
 1604 004a 07       		.byte	0x7
 1605 004b 3D030000 		.4byte	.LASF5
 1606 004f 02       		.uleb128 0x2
 1607 0050 08       		.byte	0x8
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 80


 1608 0051 05       		.byte	0x5
 1609 0052 83010000 		.4byte	.LASF6
 1610 0056 02       		.uleb128 0x2
 1611 0057 08       		.byte	0x8
 1612 0058 07       		.byte	0x7
 1613 0059 F7000000 		.4byte	.LASF7
 1614 005d 03       		.uleb128 0x3
 1615 005e 04       		.byte	0x4
 1616 005f 05       		.byte	0x5
 1617 0060 696E7400 		.ascii	"int\000"
 1618 0064 02       		.uleb128 0x2
 1619 0065 04       		.byte	0x4
 1620 0066 07       		.byte	0x7
 1621 0067 30030000 		.4byte	.LASF8
 1622 006b 04       		.uleb128 0x4
 1623 006c 26020000 		.4byte	.LASF9
 1624 0070 02       		.byte	0x2
 1625 0071 B3       		.byte	0xb3
 1626 0072 2C000000 		.4byte	0x2c
 1627 0076 04       		.uleb128 0x4
 1628 0077 00000000 		.4byte	.LASF10
 1629 007b 02       		.byte	0x2
 1630 007c B4       		.byte	0xb4
 1631 007d 3A000000 		.4byte	0x3a
 1632 0081 04       		.uleb128 0x4
 1633 0082 82020000 		.4byte	.LASF11
 1634 0086 02       		.byte	0x2
 1635 0087 B5       		.byte	0xb5
 1636 0088 48000000 		.4byte	0x48
 1637 008c 02       		.uleb128 0x2
 1638 008d 04       		.byte	0x4
 1639 008e 04       		.byte	0x4
 1640 008f A1060000 		.4byte	.LASF12
 1641 0093 02       		.uleb128 0x2
 1642 0094 08       		.byte	0x8
 1643 0095 04       		.byte	0x4
 1644 0096 65020000 		.4byte	.LASF13
 1645 009a 02       		.uleb128 0x2
 1646 009b 01       		.byte	0x1
 1647 009c 08       		.byte	0x8
 1648 009d 18080000 		.4byte	.LASF14
 1649 00a1 02       		.uleb128 0x2
 1650 00a2 04       		.byte	0x4
 1651 00a3 07       		.byte	0x7
 1652 00a4 E9040000 		.4byte	.LASF15
 1653 00a8 05       		.uleb128 0x5
 1654 00a9 38       		.byte	0x38
 1655 00aa 03       		.byte	0x3
 1656 00ab 2F       		.byte	0x2f
 1657 00ac 59010000 		.4byte	0x159
 1658 00b0 06       		.uleb128 0x6
 1659 00b1 87050000 		.4byte	.LASF16
 1660 00b5 03       		.byte	0x3
 1661 00b6 31       		.byte	0x31
 1662 00b7 59010000 		.4byte	0x159
 1663 00bb 00       		.byte	0
 1664 00bc 06       		.uleb128 0x6
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 81


 1665 00bd 96050000 		.4byte	.LASF17
 1666 00c1 03       		.byte	0x3
 1667 00c2 32       		.byte	0x32
 1668 00c3 59010000 		.4byte	0x159
 1669 00c7 04       		.byte	0x4
 1670 00c8 06       		.uleb128 0x6
 1671 00c9 B2030000 		.4byte	.LASF18
 1672 00cd 03       		.byte	0x3
 1673 00ce 33       		.byte	0x33
 1674 00cf 59010000 		.4byte	0x159
 1675 00d3 08       		.byte	0x8
 1676 00d4 06       		.uleb128 0x6
 1677 00d5 69040000 		.4byte	.LASF19
 1678 00d9 03       		.byte	0x3
 1679 00da 34       		.byte	0x34
 1680 00db 59010000 		.4byte	0x159
 1681 00df 0C       		.byte	0xc
 1682 00e0 06       		.uleb128 0x6
 1683 00e1 59070000 		.4byte	.LASF20
 1684 00e5 03       		.byte	0x3
 1685 00e6 35       		.byte	0x35
 1686 00e7 59010000 		.4byte	0x159
 1687 00eb 10       		.byte	0x10
 1688 00ec 06       		.uleb128 0x6
 1689 00ed CD010000 		.4byte	.LASF21
 1690 00f1 03       		.byte	0x3
 1691 00f2 36       		.byte	0x36
 1692 00f3 5F010000 		.4byte	0x15f
 1693 00f7 14       		.byte	0x14
 1694 00f8 06       		.uleb128 0x6
 1695 00f9 6A030000 		.4byte	.LASF22
 1696 00fd 03       		.byte	0x3
 1697 00fe 37       		.byte	0x37
 1698 00ff 6A010000 		.4byte	0x16a
 1699 0103 18       		.byte	0x18
 1700 0104 06       		.uleb128 0x6
 1701 0105 BE090000 		.4byte	.LASF23
 1702 0109 03       		.byte	0x3
 1703 010a 38       		.byte	0x38
 1704 010b 5F010000 		.4byte	0x15f
 1705 010f 1C       		.byte	0x1c
 1706 0110 06       		.uleb128 0x6
 1707 0111 BD010000 		.4byte	.LASF24
 1708 0115 03       		.byte	0x3
 1709 0116 39       		.byte	0x39
 1710 0117 5F010000 		.4byte	0x15f
 1711 011b 20       		.byte	0x20
 1712 011c 06       		.uleb128 0x6
 1713 011d C2000000 		.4byte	.LASF25
 1714 0121 03       		.byte	0x3
 1715 0122 3A       		.byte	0x3a
 1716 0123 7F010000 		.4byte	0x17f
 1717 0127 24       		.byte	0x24
 1718 0128 06       		.uleb128 0x6
 1719 0129 8A080000 		.4byte	.LASF26
 1720 012d 03       		.byte	0x3
 1721 012e 3B       		.byte	0x3b
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 82


 1722 012f 90010000 		.4byte	0x190
 1723 0133 28       		.byte	0x28
 1724 0134 06       		.uleb128 0x6
 1725 0135 0F070000 		.4byte	.LASF27
 1726 0139 03       		.byte	0x3
 1727 013a 3C       		.byte	0x3c
 1728 013b 7F010000 		.4byte	0x17f
 1729 013f 2C       		.byte	0x2c
 1730 0140 06       		.uleb128 0x6
 1731 0141 79030000 		.4byte	.LASF28
 1732 0145 03       		.byte	0x3
 1733 0146 3D       		.byte	0x3d
 1734 0147 AA010000 		.4byte	0x1aa
 1735 014b 30       		.byte	0x30
 1736 014c 06       		.uleb128 0x6
 1737 014d 2E090000 		.4byte	.LASF29
 1738 0151 03       		.byte	0x3
 1739 0152 3E       		.byte	0x3e
 1740 0153 C5010000 		.4byte	0x1c5
 1741 0157 34       		.byte	0x34
 1742 0158 00       		.byte	0
 1743 0159 07       		.uleb128 0x7
 1744 015a 04       		.byte	0x4
 1745 015b 6B000000 		.4byte	0x6b
 1746 015f 07       		.uleb128 0x7
 1747 0160 04       		.byte	0x4
 1748 0161 65010000 		.4byte	0x165
 1749 0165 08       		.uleb128 0x8
 1750 0166 6B000000 		.4byte	0x6b
 1751 016a 07       		.uleb128 0x7
 1752 016b 04       		.byte	0x4
 1753 016c 81000000 		.4byte	0x81
 1754 0170 09       		.uleb128 0x9
 1755 0171 76000000 		.4byte	0x76
 1756 0175 7F010000 		.4byte	0x17f
 1757 0179 0A       		.uleb128 0xa
 1758 017a 81000000 		.4byte	0x81
 1759 017e 00       		.byte	0
 1760 017f 07       		.uleb128 0x7
 1761 0180 04       		.byte	0x4
 1762 0181 70010000 		.4byte	0x170
 1763 0185 0B       		.uleb128 0xb
 1764 0186 90010000 		.4byte	0x190
 1765 018a 0A       		.uleb128 0xa
 1766 018b 81000000 		.4byte	0x81
 1767 018f 00       		.byte	0
 1768 0190 07       		.uleb128 0x7
 1769 0191 04       		.byte	0x4
 1770 0192 85010000 		.4byte	0x185
 1771 0196 09       		.uleb128 0x9
 1772 0197 81000000 		.4byte	0x81
 1773 019b AA010000 		.4byte	0x1aa
 1774 019f 0A       		.uleb128 0xa
 1775 01a0 5F010000 		.4byte	0x15f
 1776 01a4 0A       		.uleb128 0xa
 1777 01a5 81000000 		.4byte	0x81
 1778 01a9 00       		.byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 83


 1779 01aa 07       		.uleb128 0x7
 1780 01ab 04       		.byte	0x4
 1781 01ac 96010000 		.4byte	0x196
 1782 01b0 0B       		.uleb128 0xb
 1783 01b1 C5010000 		.4byte	0x1c5
 1784 01b5 0A       		.uleb128 0xa
 1785 01b6 59010000 		.4byte	0x159
 1786 01ba 0A       		.uleb128 0xa
 1787 01bb 81000000 		.4byte	0x81
 1788 01bf 0A       		.uleb128 0xa
 1789 01c0 81000000 		.4byte	0x81
 1790 01c4 00       		.byte	0
 1791 01c5 07       		.uleb128 0x7
 1792 01c6 04       		.byte	0x4
 1793 01c7 B0010000 		.4byte	0x1b0
 1794 01cb 04       		.uleb128 0x4
 1795 01cc 95080000 		.4byte	.LASF30
 1796 01d0 03       		.byte	0x3
 1797 01d1 3F       		.byte	0x3f
 1798 01d2 A8000000 		.4byte	0xa8
 1799 01d6 05       		.uleb128 0x5
 1800 01d7 0C       		.byte	0xc
 1801 01d8 03       		.byte	0x3
 1802 01d9 41       		.byte	0x41
 1803 01da 27020000 		.4byte	0x227
 1804 01de 06       		.uleb128 0x6
 1805 01df EF080000 		.4byte	.LASF31
 1806 01e3 03       		.byte	0x3
 1807 01e4 43       		.byte	0x43
 1808 01e5 6B000000 		.4byte	0x6b
 1809 01e9 00       		.byte	0
 1810 01ea 06       		.uleb128 0x6
 1811 01eb F1090000 		.4byte	.LASF32
 1812 01ef 03       		.byte	0x3
 1813 01f0 44       		.byte	0x44
 1814 01f1 6B000000 		.4byte	0x6b
 1815 01f5 01       		.byte	0x1
 1816 01f6 06       		.uleb128 0x6
 1817 01f7 D5020000 		.4byte	.LASF33
 1818 01fb 03       		.byte	0x3
 1819 01fc 45       		.byte	0x45
 1820 01fd 6B000000 		.4byte	0x6b
 1821 0201 02       		.byte	0x2
 1822 0202 06       		.uleb128 0x6
 1823 0203 C5020000 		.4byte	.LASF34
 1824 0207 03       		.byte	0x3
 1825 0208 46       		.byte	0x46
 1826 0209 76000000 		.4byte	0x76
 1827 020d 04       		.byte	0x4
 1828 020e 06       		.uleb128 0x6
 1829 020f DB040000 		.4byte	.LASF35
 1830 0213 03       		.byte	0x3
 1831 0214 47       		.byte	0x47
 1832 0215 76000000 		.4byte	0x76
 1833 0219 06       		.byte	0x6
 1834 021a 06       		.uleb128 0x6
 1835 021b C9040000 		.4byte	.LASF36
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 84


 1836 021f 03       		.byte	0x3
 1837 0220 48       		.byte	0x48
 1838 0221 27020000 		.4byte	0x227
 1839 0225 08       		.byte	0x8
 1840 0226 00       		.byte	0
 1841 0227 07       		.uleb128 0x7
 1842 0228 04       		.byte	0x4
 1843 0229 2D020000 		.4byte	0x22d
 1844 022d 08       		.uleb128 0x8
 1845 022e CB010000 		.4byte	0x1cb
 1846 0232 04       		.uleb128 0x4
 1847 0233 85070000 		.4byte	.LASF37
 1848 0237 03       		.byte	0x3
 1849 0238 49       		.byte	0x49
 1850 0239 D6010000 		.4byte	0x1d6
 1851 023d 0C       		.uleb128 0xc
 1852 023e 73070000 		.4byte	.LASF38
 1853 0242 01       		.byte	0x1
 1854 0243 88       		.byte	0x88
 1855 0244 00000000 		.4byte	.LFB35
 1856 0248 3C000000 		.4byte	.LFE35-.LFB35
 1857 024c 01       		.uleb128 0x1
 1858 024d 9C       		.byte	0x9c
 1859 024e 71020000 		.4byte	0x271
 1860 0252 0D       		.uleb128 0xd
 1861 0253 BC080000 		.4byte	.LASF40
 1862 0257 01       		.byte	0x1
 1863 0258 88       		.byte	0x88
 1864 0259 81000000 		.4byte	0x81
 1865 025d 00000000 		.4byte	.LLST0
 1866 0261 0E       		.uleb128 0xe
 1867 0262 52070000 		.4byte	.LASF42
 1868 0266 01       		.byte	0x1
 1869 0267 8C       		.byte	0x8c
 1870 0268 6B000000 		.4byte	0x6b
 1871 026c 21000000 		.4byte	.LLST1
 1872 0270 00       		.byte	0
 1873 0271 0C       		.uleb128 0xc
 1874 0272 2B050000 		.4byte	.LASF39
 1875 0276 01       		.byte	0x1
 1876 0277 D4       		.byte	0xd4
 1877 0278 00000000 		.4byte	.LFB36
 1878 027c 18000000 		.4byte	.LFE36-.LFB36
 1879 0280 01       		.uleb128 0x1
 1880 0281 9C       		.byte	0x9c
 1881 0282 C3020000 		.4byte	0x2c3
 1882 0286 0D       		.uleb128 0xd
 1883 0287 BC080000 		.4byte	.LASF40
 1884 028b 01       		.byte	0x1
 1885 028c D4       		.byte	0xd4
 1886 028d 81000000 		.4byte	0x81
 1887 0291 34000000 		.4byte	.LLST2
 1888 0295 0F       		.uleb128 0xf
 1889 0296 08000000 		.4byte	.LVL5
 1890 029a 190D0000 		.4byte	0xd19
 1891 029e A9020000 		.4byte	0x2a9
 1892 02a2 10       		.uleb128 0x10
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 85


 1893 02a3 01       		.uleb128 0x1
 1894 02a4 50       		.byte	0x50
 1895 02a5 02       		.uleb128 0x2
 1896 02a6 74       		.byte	0x74
 1897 02a7 00       		.sleb128 0
 1898 02a8 00       		.byte	0
 1899 02a9 11       		.uleb128 0x11
 1900 02aa 0C000000 		.4byte	.LVL6
 1901 02ae 2A0D0000 		.4byte	0xd2a
 1902 02b2 12       		.uleb128 0x12
 1903 02b3 16000000 		.4byte	.LVL7
 1904 02b7 3D020000 		.4byte	0x23d
 1905 02bb 10       		.uleb128 0x10
 1906 02bc 01       		.uleb128 0x1
 1907 02bd 50       		.byte	0x50
 1908 02be 02       		.uleb128 0x2
 1909 02bf 74       		.byte	0x74
 1910 02c0 00       		.sleb128 0
 1911 02c1 00       		.byte	0
 1912 02c2 00       		.byte	0
 1913 02c3 0C       		.uleb128 0xc
 1914 02c4 EF060000 		.4byte	.LASF41
 1915 02c8 01       		.byte	0x1
 1916 02c9 F9       		.byte	0xf9
 1917 02ca 00000000 		.4byte	.LFB37
 1918 02ce 14000000 		.4byte	.LFE37-.LFB37
 1919 02d2 01       		.uleb128 0x1
 1920 02d3 9C       		.byte	0x9c
 1921 02d4 F6020000 		.4byte	0x2f6
 1922 02d8 13       		.uleb128 0x13
 1923 02d9 6900     		.ascii	"i\000"
 1924 02db 01       		.byte	0x1
 1925 02dc FB       		.byte	0xfb
 1926 02dd 81000000 		.4byte	0x81
 1927 02e1 60000000 		.4byte	.LLST3
 1928 02e5 12       		.uleb128 0x12
 1929 02e6 0C000000 		.4byte	.LVL11
 1930 02ea 71020000 		.4byte	0x271
 1931 02ee 10       		.uleb128 0x10
 1932 02ef 01       		.uleb128 0x1
 1933 02f0 50       		.byte	0x50
 1934 02f1 02       		.uleb128 0x2
 1935 02f2 74       		.byte	0x74
 1936 02f3 00       		.sleb128 0
 1937 02f4 00       		.byte	0
 1938 02f5 00       		.byte	0
 1939 02f6 14       		.uleb128 0x14
 1940 02f7 3F010000 		.4byte	.LASF43
 1941 02fb 01       		.byte	0x1
 1942 02fc 1C01     		.2byte	0x11c
 1943 02fe 00000000 		.4byte	.LFB38
 1944 0302 30000000 		.4byte	.LFE38-.LFB38
 1945 0306 01       		.uleb128 0x1
 1946 0307 9C       		.byte	0x9c
 1947 0308 61030000 		.4byte	0x361
 1948 030c 15       		.uleb128 0x15
 1949 030d 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 86


 1950 030f 01       		.byte	0x1
 1951 0310 1E01     		.2byte	0x11e
 1952 0312 81000000 		.4byte	0x81
 1953 0316 7F000000 		.4byte	.LLST4
 1954 031a 16       		.uleb128 0x16
 1955 031b 63070000 		.4byte	.LASF44
 1956 031f 01       		.byte	0x1
 1957 0320 1F01     		.2byte	0x11f
 1958 0322 81000000 		.4byte	0x81
 1959 0326 92000000 		.4byte	.LLST5
 1960 032a 11       		.uleb128 0x11
 1961 032b 06000000 		.4byte	.LVL14
 1962 032f 350D0000 		.4byte	0xd35
 1963 0333 11       		.uleb128 0x11
 1964 0334 0A000000 		.4byte	.LVL15
 1965 0338 2A0D0000 		.4byte	0xd2a
 1966 033c 0F       		.uleb128 0xf
 1967 033d 1A000000 		.4byte	.LVL17
 1968 0341 3C0D0000 		.4byte	0xd3c
 1969 0345 50030000 		.4byte	0x350
 1970 0349 10       		.uleb128 0x10
 1971 034a 01       		.uleb128 0x1
 1972 034b 51       		.byte	0x51
 1973 034c 02       		.uleb128 0x2
 1974 034d 74       		.byte	0x74
 1975 034e 00       		.sleb128 0
 1976 034f 00       		.byte	0
 1977 0350 12       		.uleb128 0x12
 1978 0351 24000000 		.4byte	.LVL19
 1979 0355 3D020000 		.4byte	0x23d
 1980 0359 10       		.uleb128 0x10
 1981 035a 01       		.uleb128 0x1
 1982 035b 50       		.byte	0x50
 1983 035c 02       		.uleb128 0x2
 1984 035d 74       		.byte	0x74
 1985 035e 00       		.sleb128 0
 1986 035f 00       		.byte	0
 1987 0360 00       		.byte	0
 1988 0361 17       		.uleb128 0x17
 1989 0362 DE010000 		.4byte	.LASF47
 1990 0366 01       		.byte	0x1
 1991 0367 B002     		.2byte	0x2b0
 1992 0369 76000000 		.4byte	0x76
 1993 036d 00000000 		.4byte	.LFB43
 1994 0371 0C000000 		.4byte	.LFE43-.LFB43
 1995 0375 01       		.uleb128 0x1
 1996 0376 9C       		.byte	0x9c
 1997 0377 8C030000 		.4byte	0x38c
 1998 037b 18       		.uleb128 0x18
 1999 037c BC080000 		.4byte	.LASF40
 2000 0380 01       		.byte	0x1
 2001 0381 B002     		.2byte	0x2b0
 2002 0383 81000000 		.4byte	0x81
 2003 0387 A5000000 		.4byte	.LLST6
 2004 038b 00       		.byte	0
 2005 038c 14       		.uleb128 0x14
 2006 038d 20070000 		.4byte	.LASF45
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 87


 2007 0391 01       		.byte	0x1
 2008 0392 CB02     		.2byte	0x2cb
 2009 0394 00000000 		.4byte	.LFB44
 2010 0398 0C000000 		.4byte	.LFE44-.LFB44
 2011 039c 01       		.uleb128 0x1
 2012 039d 9C       		.byte	0x9c
 2013 039e C1030000 		.4byte	0x3c1
 2014 03a2 18       		.uleb128 0x18
 2015 03a3 BC080000 		.4byte	.LASF40
 2016 03a7 01       		.byte	0x1
 2017 03a8 CB02     		.2byte	0x2cb
 2018 03aa 81000000 		.4byte	0x81
 2019 03ae C6000000 		.4byte	.LLST7
 2020 03b2 19       		.uleb128 0x19
 2021 03b3 9A030000 		.4byte	.LASF46
 2022 03b7 01       		.byte	0x1
 2023 03b8 CB02     		.2byte	0x2cb
 2024 03ba 76000000 		.4byte	0x76
 2025 03be 01       		.uleb128 0x1
 2026 03bf 51       		.byte	0x51
 2027 03c0 00       		.byte	0
 2028 03c1 17       		.uleb128 0x17
 2029 03c2 AF040000 		.4byte	.LASF48
 2030 03c6 01       		.byte	0x1
 2031 03c7 E602     		.2byte	0x2e6
 2032 03c9 6B000000 		.4byte	0x6b
 2033 03cd 00000000 		.4byte	.LFB45
 2034 03d1 0C000000 		.4byte	.LFE45-.LFB45
 2035 03d5 01       		.uleb128 0x1
 2036 03d6 9C       		.byte	0x9c
 2037 03d7 EC030000 		.4byte	0x3ec
 2038 03db 18       		.uleb128 0x18
 2039 03dc BC080000 		.4byte	.LASF40
 2040 03e0 01       		.byte	0x1
 2041 03e1 E602     		.2byte	0x2e6
 2042 03e3 81000000 		.4byte	0x81
 2043 03e7 E7000000 		.4byte	.LLST8
 2044 03eb 00       		.byte	0
 2045 03ec 14       		.uleb128 0x14
 2046 03ed 14090000 		.4byte	.LASF49
 2047 03f1 01       		.byte	0x1
 2048 03f2 0103     		.2byte	0x301
 2049 03f4 00000000 		.4byte	.LFB46
 2050 03f8 0C000000 		.4byte	.LFE46-.LFB46
 2051 03fc 01       		.uleb128 0x1
 2052 03fd 9C       		.byte	0x9c
 2053 03fe 21040000 		.4byte	0x421
 2054 0402 18       		.uleb128 0x18
 2055 0403 BC080000 		.4byte	.LASF40
 2056 0407 01       		.byte	0x1
 2057 0408 0103     		.2byte	0x301
 2058 040a 81000000 		.4byte	0x81
 2059 040e 08010000 		.4byte	.LLST9
 2060 0412 19       		.uleb128 0x19
 2061 0413 E5020000 		.4byte	.LASF50
 2062 0417 01       		.byte	0x1
 2063 0418 0103     		.2byte	0x301
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 88


 2064 041a 6B000000 		.4byte	0x6b
 2065 041e 01       		.uleb128 0x1
 2066 041f 51       		.byte	0x51
 2067 0420 00       		.byte	0
 2068 0421 17       		.uleb128 0x17
 2069 0422 6E080000 		.4byte	.LASF51
 2070 0426 01       		.byte	0x1
 2071 0427 1C03     		.2byte	0x31c
 2072 0429 6B000000 		.4byte	0x6b
 2073 042d 00000000 		.4byte	.LFB47
 2074 0431 0C000000 		.4byte	.LFE47-.LFB47
 2075 0435 01       		.uleb128 0x1
 2076 0436 9C       		.byte	0x9c
 2077 0437 4C040000 		.4byte	0x44c
 2078 043b 18       		.uleb128 0x18
 2079 043c 52070000 		.4byte	.LASF42
 2080 0440 01       		.byte	0x1
 2081 0441 1C03     		.2byte	0x31c
 2082 0443 81000000 		.4byte	0x81
 2083 0447 29010000 		.4byte	.LLST10
 2084 044b 00       		.byte	0
 2085 044c 17       		.uleb128 0x17
 2086 044d 24010000 		.4byte	.LASF52
 2087 0451 01       		.byte	0x1
 2088 0452 3703     		.2byte	0x337
 2089 0454 6B000000 		.4byte	0x6b
 2090 0458 00000000 		.4byte	.LFB48
 2091 045c 0C000000 		.4byte	.LFE48-.LFB48
 2092 0460 01       		.uleb128 0x1
 2093 0461 9C       		.byte	0x9c
 2094 0462 77040000 		.4byte	0x477
 2095 0466 18       		.uleb128 0x18
 2096 0467 52070000 		.4byte	.LASF42
 2097 046b 01       		.byte	0x1
 2098 046c 3703     		.2byte	0x337
 2099 046e 81000000 		.4byte	0x81
 2100 0472 4A010000 		.4byte	.LLST11
 2101 0476 00       		.byte	0
 2102 0477 17       		.uleb128 0x17
 2103 0478 37080000 		.4byte	.LASF53
 2104 047c 01       		.byte	0x1
 2105 047d 5303     		.2byte	0x353
 2106 047f 6B000000 		.4byte	0x6b
 2107 0483 00000000 		.4byte	.LFB49
 2108 0487 0C000000 		.4byte	.LFE49-.LFB49
 2109 048b 01       		.uleb128 0x1
 2110 048c 9C       		.byte	0x9c
 2111 048d A2040000 		.4byte	0x4a2
 2112 0491 18       		.uleb128 0x18
 2113 0492 52070000 		.4byte	.LASF42
 2114 0496 01       		.byte	0x1
 2115 0497 5303     		.2byte	0x353
 2116 0499 81000000 		.4byte	0x81
 2117 049d 6B010000 		.4byte	.LLST12
 2118 04a1 00       		.byte	0
 2119 04a2 17       		.uleb128 0x17
 2120 04a3 4E000000 		.4byte	.LASF54
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 89


 2121 04a7 01       		.byte	0x1
 2122 04a8 6F03     		.2byte	0x36f
 2123 04aa 6B000000 		.4byte	0x6b
 2124 04ae 00000000 		.4byte	.LFB50
 2125 04b2 0C000000 		.4byte	.LFE50-.LFB50
 2126 04b6 01       		.uleb128 0x1
 2127 04b7 9C       		.byte	0x9c
 2128 04b8 CD040000 		.4byte	0x4cd
 2129 04bc 18       		.uleb128 0x18
 2130 04bd 52070000 		.4byte	.LASF42
 2131 04c1 01       		.byte	0x1
 2132 04c2 6F03     		.2byte	0x36f
 2133 04c4 81000000 		.4byte	0x81
 2134 04c8 8C010000 		.4byte	.LLST13
 2135 04cc 00       		.byte	0
 2136 04cd 14       		.uleb128 0x14
 2137 04ce 94020000 		.4byte	.LASF55
 2138 04d2 01       		.byte	0x1
 2139 04d3 9003     		.2byte	0x390
 2140 04d5 00000000 		.4byte	.LFB51
 2141 04d9 0C000000 		.4byte	.LFE51-.LFB51
 2142 04dd 01       		.uleb128 0x1
 2143 04de 9C       		.byte	0x9c
 2144 04df 00050000 		.4byte	0x500
 2145 04e3 19       		.uleb128 0x19
 2146 04e4 52070000 		.4byte	.LASF42
 2147 04e8 01       		.byte	0x1
 2148 04e9 9003     		.2byte	0x390
 2149 04eb 81000000 		.4byte	0x81
 2150 04ef 01       		.uleb128 0x1
 2151 04f0 50       		.byte	0x50
 2152 04f1 19       		.uleb128 0x19
 2153 04f2 E5020000 		.4byte	.LASF50
 2154 04f6 01       		.byte	0x1
 2155 04f7 9003     		.2byte	0x390
 2156 04f9 6B000000 		.4byte	0x6b
 2157 04fd 01       		.uleb128 0x1
 2158 04fe 51       		.byte	0x51
 2159 04ff 00       		.byte	0
 2160 0500 14       		.uleb128 0x14
 2161 0501 D1070000 		.4byte	.LASF56
 2162 0505 01       		.byte	0x1
 2163 0506 AC03     		.2byte	0x3ac
 2164 0508 00000000 		.4byte	.LFB52
 2165 050c 0C000000 		.4byte	.LFE52-.LFB52
 2166 0510 01       		.uleb128 0x1
 2167 0511 9C       		.byte	0x9c
 2168 0512 33050000 		.4byte	0x533
 2169 0516 19       		.uleb128 0x19
 2170 0517 52070000 		.4byte	.LASF42
 2171 051b 01       		.byte	0x1
 2172 051c AC03     		.2byte	0x3ac
 2173 051e 81000000 		.4byte	0x81
 2174 0522 01       		.uleb128 0x1
 2175 0523 50       		.byte	0x50
 2176 0524 19       		.uleb128 0x19
 2177 0525 E5020000 		.4byte	.LASF50
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 90


 2178 0529 01       		.byte	0x1
 2179 052a AC03     		.2byte	0x3ac
 2180 052c 6B000000 		.4byte	0x6b
 2181 0530 01       		.uleb128 0x1
 2182 0531 51       		.byte	0x51
 2183 0532 00       		.byte	0
 2184 0533 14       		.uleb128 0x14
 2185 0534 4D050000 		.4byte	.LASF57
 2186 0538 01       		.byte	0x1
 2187 0539 C803     		.2byte	0x3c8
 2188 053b 00000000 		.4byte	.LFB53
 2189 053f 0C000000 		.4byte	.LFE53-.LFB53
 2190 0543 01       		.uleb128 0x1
 2191 0544 9C       		.byte	0x9c
 2192 0545 66050000 		.4byte	0x566
 2193 0549 19       		.uleb128 0x19
 2194 054a 52070000 		.4byte	.LASF42
 2195 054e 01       		.byte	0x1
 2196 054f C803     		.2byte	0x3c8
 2197 0551 81000000 		.4byte	0x81
 2198 0555 01       		.uleb128 0x1
 2199 0556 50       		.byte	0x50
 2200 0557 19       		.uleb128 0x19
 2201 0558 E5020000 		.4byte	.LASF50
 2202 055c 01       		.byte	0x1
 2203 055d C803     		.2byte	0x3c8
 2204 055f 6B000000 		.4byte	0x6b
 2205 0563 01       		.uleb128 0x1
 2206 0564 51       		.byte	0x51
 2207 0565 00       		.byte	0
 2208 0566 14       		.uleb128 0x14
 2209 0567 81000000 		.4byte	.LASF58
 2210 056b 01       		.byte	0x1
 2211 056c E503     		.2byte	0x3e5
 2212 056e 00000000 		.4byte	.LFB54
 2213 0572 0C000000 		.4byte	.LFE54-.LFB54
 2214 0576 01       		.uleb128 0x1
 2215 0577 9C       		.byte	0x9c
 2216 0578 99050000 		.4byte	0x599
 2217 057c 19       		.uleb128 0x19
 2218 057d 52070000 		.4byte	.LASF42
 2219 0581 01       		.byte	0x1
 2220 0582 E503     		.2byte	0x3e5
 2221 0584 81000000 		.4byte	0x81
 2222 0588 01       		.uleb128 0x1
 2223 0589 50       		.byte	0x50
 2224 058a 19       		.uleb128 0x19
 2225 058b E5020000 		.4byte	.LASF50
 2226 058f 01       		.byte	0x1
 2227 0590 E503     		.2byte	0x3e5
 2228 0592 6B000000 		.4byte	0x6b
 2229 0596 01       		.uleb128 0x1
 2230 0597 51       		.byte	0x51
 2231 0598 00       		.byte	0
 2232 0599 14       		.uleb128 0x14
 2233 059a B0020000 		.4byte	.LASF59
 2234 059e 01       		.byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 91


 2235 059f 0104     		.2byte	0x401
 2236 05a1 00000000 		.4byte	.LFB55
 2237 05a5 0C000000 		.4byte	.LFE55-.LFB55
 2238 05a9 01       		.uleb128 0x1
 2239 05aa 9C       		.byte	0x9c
 2240 05ab CC050000 		.4byte	0x5cc
 2241 05af 19       		.uleb128 0x19
 2242 05b0 52070000 		.4byte	.LASF42
 2243 05b4 01       		.byte	0x1
 2244 05b5 0104     		.2byte	0x401
 2245 05b7 81000000 		.4byte	0x81
 2246 05bb 01       		.uleb128 0x1
 2247 05bc 50       		.byte	0x50
 2248 05bd 19       		.uleb128 0x19
 2249 05be E5020000 		.4byte	.LASF50
 2250 05c2 01       		.byte	0x1
 2251 05c3 0104     		.2byte	0x401
 2252 05c5 6B000000 		.4byte	0x6b
 2253 05c9 01       		.uleb128 0x1
 2254 05ca 51       		.byte	0x51
 2255 05cb 00       		.byte	0
 2256 05cc 14       		.uleb128 0x14
 2257 05cd EB020000 		.4byte	.LASF60
 2258 05d1 01       		.byte	0x1
 2259 05d2 1D04     		.2byte	0x41d
 2260 05d4 00000000 		.4byte	.LFB56
 2261 05d8 0C000000 		.4byte	.LFE56-.LFB56
 2262 05dc 01       		.uleb128 0x1
 2263 05dd 9C       		.byte	0x9c
 2264 05de 01060000 		.4byte	0x601
 2265 05e2 18       		.uleb128 0x18
 2266 05e3 BC080000 		.4byte	.LASF40
 2267 05e7 01       		.byte	0x1
 2268 05e8 1D04     		.2byte	0x41d
 2269 05ea 81000000 		.4byte	0x81
 2270 05ee AD010000 		.4byte	.LLST14
 2271 05f2 19       		.uleb128 0x19
 2272 05f3 E5020000 		.4byte	.LASF50
 2273 05f7 01       		.byte	0x1
 2274 05f8 1D04     		.2byte	0x41d
 2275 05fa 6B000000 		.4byte	0x6b
 2276 05fe 01       		.uleb128 0x1
 2277 05ff 51       		.byte	0x51
 2278 0600 00       		.byte	0
 2279 0601 17       		.uleb128 0x17
 2280 0602 6A050000 		.4byte	.LASF61
 2281 0606 01       		.byte	0x1
 2282 0607 4B04     		.2byte	0x44b
 2283 0609 81000000 		.4byte	0x81
 2284 060d 00000000 		.4byte	.LFB57
 2285 0611 A8000000 		.4byte	.LFE57-.LFB57
 2286 0615 01       		.uleb128 0x1
 2287 0616 9C       		.byte	0x9c
 2288 0617 EB060000 		.4byte	0x6eb
 2289 061b 18       		.uleb128 0x18
 2290 061c BC080000 		.4byte	.LASF40
 2291 0620 01       		.byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 92


 2292 0621 4B04     		.2byte	0x44b
 2293 0623 81000000 		.4byte	0x81
 2294 0627 CE010000 		.4byte	.LLST15
 2295 062b 1A       		.uleb128 0x1a
 2296 062c 52070000 		.4byte	.LASF42
 2297 0630 01       		.byte	0x1
 2298 0631 4D04     		.2byte	0x44d
 2299 0633 6B000000 		.4byte	0x6b
 2300 0637 16       		.uleb128 0x16
 2301 0638 D2040000 		.4byte	.LASF62
 2302 063c 01       		.byte	0x1
 2303 063d 4E04     		.2byte	0x44e
 2304 063f 6B000000 		.4byte	0x6b
 2305 0643 FA010000 		.4byte	.LLST16
 2306 0647 1A       		.uleb128 0x1a
 2307 0648 60080000 		.4byte	.LASF63
 2308 064c 01       		.byte	0x1
 2309 064d 4F04     		.2byte	0x44f
 2310 064f 6B000000 		.4byte	0x6b
 2311 0653 16       		.uleb128 0x16
 2312 0654 71000000 		.4byte	.LASF64
 2313 0658 01       		.byte	0x1
 2314 0659 5104     		.2byte	0x451
 2315 065b 6B000000 		.4byte	0x6b
 2316 065f 0D020000 		.4byte	.LLST17
 2317 0663 16       		.uleb128 0x16
 2318 0664 89020000 		.4byte	.LASF65
 2319 0668 01       		.byte	0x1
 2320 0669 5204     		.2byte	0x452
 2321 066b 6B000000 		.4byte	0x6b
 2322 066f 20020000 		.4byte	.LLST18
 2323 0673 0F       		.uleb128 0xf
 2324 0674 24000000 		.4byte	.LVL50
 2325 0678 3C0D0000 		.4byte	0xd3c
 2326 067c 90060000 		.4byte	0x690
 2327 0680 10       		.uleb128 0x10
 2328 0681 01       		.uleb128 0x1
 2329 0682 51       		.byte	0x51
 2330 0683 02       		.uleb128 0x2
 2331 0684 74       		.byte	0x74
 2332 0685 00       		.sleb128 0
 2333 0686 10       		.uleb128 0x10
 2334 0687 01       		.uleb128 0x1
 2335 0688 50       		.byte	0x50
 2336 0689 05       		.uleb128 0x5
 2337 068a 03       		.byte	0x3
 2338 068b 10000000 		.4byte	.LANCHOR0+16
 2339 068f 00       		.byte	0
 2340 0690 0F       		.uleb128 0xf
 2341 0691 42000000 		.4byte	.LVL52
 2342 0695 560D0000 		.4byte	0xd56
 2343 0699 AF060000 		.4byte	0x6af
 2344 069d 10       		.uleb128 0x10
 2345 069e 01       		.uleb128 0x1
 2346 069f 52       		.byte	0x52
 2347 06a0 01       		.uleb128 0x1
 2348 06a1 30       		.byte	0x30
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 93


 2349 06a2 10       		.uleb128 0x10
 2350 06a3 01       		.uleb128 0x1
 2351 06a4 51       		.byte	0x51
 2352 06a5 02       		.uleb128 0x2
 2353 06a6 74       		.byte	0x74
 2354 06a7 00       		.sleb128 0
 2355 06a8 10       		.uleb128 0x10
 2356 06a9 01       		.uleb128 0x1
 2357 06aa 50       		.byte	0x50
 2358 06ab 02       		.uleb128 0x2
 2359 06ac 76       		.byte	0x76
 2360 06ad 10       		.sleb128 16
 2361 06ae 00       		.byte	0
 2362 06af 0F       		.uleb128 0xf
 2363 06b0 72000000 		.4byte	.LVL55
 2364 06b4 560D0000 		.4byte	0xd56
 2365 06b8 D1060000 		.4byte	0x6d1
 2366 06bc 10       		.uleb128 0x10
 2367 06bd 01       		.uleb128 0x1
 2368 06be 52       		.byte	0x52
 2369 06bf 01       		.uleb128 0x1
 2370 06c0 31       		.byte	0x31
 2371 06c1 10       		.uleb128 0x10
 2372 06c2 01       		.uleb128 0x1
 2373 06c3 51       		.byte	0x51
 2374 06c4 02       		.uleb128 0x2
 2375 06c5 74       		.byte	0x74
 2376 06c6 00       		.sleb128 0
 2377 06c7 10       		.uleb128 0x10
 2378 06c8 01       		.uleb128 0x1
 2379 06c9 50       		.byte	0x50
 2380 06ca 05       		.uleb128 0x5
 2381 06cb 03       		.byte	0x3
 2382 06cc 10000000 		.4byte	.LANCHOR0+16
 2383 06d0 00       		.byte	0
 2384 06d1 12       		.uleb128 0x12
 2385 06d2 86000000 		.4byte	.LVL56
 2386 06d6 3C0D0000 		.4byte	0xd3c
 2387 06da 10       		.uleb128 0x10
 2388 06db 01       		.uleb128 0x1
 2389 06dc 51       		.byte	0x51
 2390 06dd 02       		.uleb128 0x2
 2391 06de 74       		.byte	0x74
 2392 06df 00       		.sleb128 0
 2393 06e0 10       		.uleb128 0x10
 2394 06e1 01       		.uleb128 0x1
 2395 06e2 50       		.byte	0x50
 2396 06e3 05       		.uleb128 0x5
 2397 06e4 03       		.byte	0x3
 2398 06e5 10000000 		.4byte	.LANCHOR0+16
 2399 06e9 00       		.byte	0
 2400 06ea 00       		.byte	0
 2401 06eb 17       		.uleb128 0x17
 2402 06ec C4060000 		.4byte	.LASF66
 2403 06f0 01       		.byte	0x1
 2404 06f1 9D04     		.2byte	0x49d
 2405 06f3 81000000 		.4byte	0x81
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 94


 2406 06f7 00000000 		.4byte	.LFB58
 2407 06fb 28000000 		.4byte	.LFE58-.LFB58
 2408 06ff 01       		.uleb128 0x1
 2409 0700 9C       		.byte	0x9c
 2410 0701 56070000 		.4byte	0x756
 2411 0705 18       		.uleb128 0x18
 2412 0706 52070000 		.4byte	.LASF42
 2413 070a 01       		.byte	0x1
 2414 070b 9D04     		.2byte	0x49d
 2415 070d 81000000 		.4byte	0x81
 2416 0711 3E020000 		.4byte	.LLST19
 2417 0715 16       		.uleb128 0x16
 2418 0716 B4010000 		.4byte	.LASF67
 2419 071a 01       		.byte	0x1
 2420 071b 9F04     		.2byte	0x49f
 2421 071d 81000000 		.4byte	0x81
 2422 0721 5F020000 		.4byte	.LLST20
 2423 0725 16       		.uleb128 0x16
 2424 0726 E2080000 		.4byte	.LASF68
 2425 072a 01       		.byte	0x1
 2426 072b A004     		.2byte	0x4a0
 2427 072d 81000000 		.4byte	0x81
 2428 0731 72020000 		.4byte	.LLST21
 2429 0735 16       		.uleb128 0x16
 2430 0736 F7010000 		.4byte	.LASF69
 2431 073a 01       		.byte	0x1
 2432 073b A104     		.2byte	0x4a1
 2433 073d 81000000 		.4byte	0x81
 2434 0741 AD020000 		.4byte	.LLST22
 2435 0745 12       		.uleb128 0x12
 2436 0746 14000000 		.4byte	.LVL65
 2437 074a 01060000 		.4byte	0x601
 2438 074e 10       		.uleb128 0x10
 2439 074f 01       		.uleb128 0x1
 2440 0750 50       		.byte	0x50
 2441 0751 02       		.uleb128 0x2
 2442 0752 74       		.byte	0x74
 2443 0753 00       		.sleb128 0
 2444 0754 00       		.byte	0
 2445 0755 00       		.byte	0
 2446 0756 17       		.uleb128 0x17
 2447 0757 06020000 		.4byte	.LASF70
 2448 075b 01       		.byte	0x1
 2449 075c CB04     		.2byte	0x4cb
 2450 075e 81000000 		.4byte	0x81
 2451 0762 00000000 		.4byte	.LFB59
 2452 0766 1E000000 		.4byte	.LFE59-.LFB59
 2453 076a 01       		.uleb128 0x1
 2454 076b 9C       		.byte	0x9c
 2455 076c 9F070000 		.4byte	0x79f
 2456 0770 15       		.uleb128 0x15
 2457 0771 6900     		.ascii	"i\000"
 2458 0773 01       		.byte	0x1
 2459 0774 CE04     		.2byte	0x4ce
 2460 0776 81000000 		.4byte	0x81
 2461 077a D7020000 		.4byte	.LLST23
 2462 077e 16       		.uleb128 0x16
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 95


 2463 077f F7010000 		.4byte	.LASF69
 2464 0783 01       		.byte	0x1
 2465 0784 CF04     		.2byte	0x4cf
 2466 0786 81000000 		.4byte	0x81
 2467 078a F6020000 		.4byte	.LLST24
 2468 078e 12       		.uleb128 0x12
 2469 078f 0E000000 		.4byte	.LVL73
 2470 0793 EB060000 		.4byte	0x6eb
 2471 0797 10       		.uleb128 0x10
 2472 0798 01       		.uleb128 0x1
 2473 0799 50       		.byte	0x50
 2474 079a 02       		.uleb128 0x2
 2475 079b 74       		.byte	0x74
 2476 079c 00       		.sleb128 0
 2477 079d 00       		.byte	0
 2478 079e 00       		.byte	0
 2479 079f 14       		.uleb128 0x14
 2480 07a0 F2040000 		.4byte	.LASF71
 2481 07a4 01       		.byte	0x1
 2482 07a5 FA04     		.2byte	0x4fa
 2483 07a7 00000000 		.4byte	.LFB60
 2484 07ab 2C000000 		.4byte	.LFE60-.LFB60
 2485 07af 01       		.uleb128 0x1
 2486 07b0 9C       		.byte	0x9c
 2487 07b1 FB070000 		.4byte	0x7fb
 2488 07b5 18       		.uleb128 0x18
 2489 07b6 52070000 		.4byte	.LASF42
 2490 07ba 01       		.byte	0x1
 2491 07bb FA04     		.2byte	0x4fa
 2492 07bd 81000000 		.4byte	0x81
 2493 07c1 20030000 		.4byte	.LLST25
 2494 07c5 16       		.uleb128 0x16
 2495 07c6 B4010000 		.4byte	.LASF67
 2496 07ca 01       		.byte	0x1
 2497 07cb FD04     		.2byte	0x4fd
 2498 07cd 6B000000 		.4byte	0x6b
 2499 07d1 41030000 		.4byte	.LLST26
 2500 07d5 16       		.uleb128 0x16
 2501 07d6 E2080000 		.4byte	.LASF68
 2502 07da 01       		.byte	0x1
 2503 07db FE04     		.2byte	0x4fe
 2504 07dd 6B000000 		.4byte	0x6b
 2505 07e1 5F030000 		.4byte	.LLST27
 2506 07e5 12       		.uleb128 0x12
 2507 07e6 18000000 		.4byte	.LVL82
 2508 07ea 560D0000 		.4byte	0xd56
 2509 07ee 10       		.uleb128 0x10
 2510 07ef 01       		.uleb128 0x1
 2511 07f0 52       		.byte	0x52
 2512 07f1 01       		.uleb128 0x1
 2513 07f2 31       		.byte	0x31
 2514 07f3 10       		.uleb128 0x10
 2515 07f4 01       		.uleb128 0x1
 2516 07f5 51       		.byte	0x51
 2517 07f6 02       		.uleb128 0x2
 2518 07f7 74       		.byte	0x74
 2519 07f8 00       		.sleb128 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 96


 2520 07f9 00       		.byte	0
 2521 07fa 00       		.byte	0
 2522 07fb 14       		.uleb128 0x14
 2523 07fc 9D010000 		.4byte	.LASF72
 2524 0800 01       		.byte	0x1
 2525 0801 2505     		.2byte	0x525
 2526 0803 00000000 		.4byte	.LFB61
 2527 0807 2C000000 		.4byte	.LFE61-.LFB61
 2528 080b 01       		.uleb128 0x1
 2529 080c 9C       		.byte	0x9c
 2530 080d 57080000 		.4byte	0x857
 2531 0811 18       		.uleb128 0x18
 2532 0812 52070000 		.4byte	.LASF42
 2533 0816 01       		.byte	0x1
 2534 0817 2505     		.2byte	0x525
 2535 0819 81000000 		.4byte	0x81
 2536 081d 9A030000 		.4byte	.LLST28
 2537 0821 16       		.uleb128 0x16
 2538 0822 B4010000 		.4byte	.LASF67
 2539 0826 01       		.byte	0x1
 2540 0827 2705     		.2byte	0x527
 2541 0829 6B000000 		.4byte	0x6b
 2542 082d BB030000 		.4byte	.LLST29
 2543 0831 16       		.uleb128 0x16
 2544 0832 E2080000 		.4byte	.LASF68
 2545 0836 01       		.byte	0x1
 2546 0837 2805     		.2byte	0x528
 2547 0839 6B000000 		.4byte	0x6b
 2548 083d D9030000 		.4byte	.LLST30
 2549 0841 12       		.uleb128 0x12
 2550 0842 18000000 		.4byte	.LVL91
 2551 0846 560D0000 		.4byte	0xd56
 2552 084a 10       		.uleb128 0x10
 2553 084b 01       		.uleb128 0x1
 2554 084c 52       		.byte	0x52
 2555 084d 01       		.uleb128 0x1
 2556 084e 30       		.byte	0x30
 2557 084f 10       		.uleb128 0x10
 2558 0850 01       		.uleb128 0x1
 2559 0851 51       		.byte	0x51
 2560 0852 02       		.uleb128 0x2
 2561 0853 74       		.byte	0x74
 2562 0854 00       		.sleb128 0
 2563 0855 00       		.byte	0
 2564 0856 00       		.byte	0
 2565 0857 17       		.uleb128 0x17
 2566 0858 E1000000 		.4byte	.LASF73
 2567 085c 01       		.byte	0x1
 2568 085d 4109     		.2byte	0x941
 2569 085f 76000000 		.4byte	0x76
 2570 0863 00000000 		.4byte	.LFB62
 2571 0867 1C000000 		.4byte	.LFE62-.LFB62
 2572 086b 01       		.uleb128 0x1
 2573 086c 9C       		.byte	0x9c
 2574 086d A9080000 		.4byte	0x8a9
 2575 0871 1B       		.uleb128 0x1b
 2576 0872 783100   		.ascii	"x1\000"
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 97


 2577 0875 01       		.byte	0x1
 2578 0876 4109     		.2byte	0x941
 2579 0878 76000000 		.4byte	0x76
 2580 087c 14040000 		.4byte	.LLST31
 2581 0880 1B       		.uleb128 0x1b
 2582 0881 783200   		.ascii	"x2\000"
 2583 0884 01       		.byte	0x1
 2584 0885 4109     		.2byte	0x941
 2585 0887 76000000 		.4byte	0x76
 2586 088b 40040000 		.4byte	.LLST32
 2587 088f 1C       		.uleb128 0x1c
 2588 0890 783300   		.ascii	"x3\000"
 2589 0893 01       		.byte	0x1
 2590 0894 4109     		.2byte	0x941
 2591 0896 76000000 		.4byte	0x76
 2592 089a 01       		.uleb128 0x1
 2593 089b 52       		.byte	0x52
 2594 089c 1D       		.uleb128 0x1d
 2595 089d 746D7000 		.ascii	"tmp\000"
 2596 08a1 01       		.byte	0x1
 2597 08a2 4309     		.2byte	0x943
 2598 08a4 76000000 		.4byte	0x76
 2599 08a8 00       		.byte	0
 2600 08a9 17       		.uleb128 0x17
 2601 08aa 08030000 		.4byte	.LASF74
 2602 08ae 01       		.byte	0x1
 2603 08af B909     		.2byte	0x9b9
 2604 08b1 76000000 		.4byte	0x76
 2605 08b5 00000000 		.4byte	.LFB63
 2606 08b9 0C000000 		.4byte	.LFE63-.LFB63
 2607 08bd 01       		.uleb128 0x1
 2608 08be 9C       		.byte	0x9c
 2609 08bf F2080000 		.4byte	0x8f2
 2610 08c3 1B       		.uleb128 0x1b
 2611 08c4 783100   		.ascii	"x1\000"
 2612 08c7 01       		.byte	0x1
 2613 08c8 B909     		.2byte	0x9b9
 2614 08ca 76000000 		.4byte	0x76
 2615 08ce 5E040000 		.4byte	.LLST33
 2616 08d2 1B       		.uleb128 0x1b
 2617 08d3 783200   		.ascii	"x2\000"
 2618 08d6 01       		.byte	0x1
 2619 08d7 B909     		.2byte	0x9b9
 2620 08d9 76000000 		.4byte	0x76
 2621 08dd 7F040000 		.4byte	.LLST34
 2622 08e1 15       		.uleb128 0x15
 2623 08e2 746D7000 		.ascii	"tmp\000"
 2624 08e6 01       		.byte	0x1
 2625 08e7 BB09     		.2byte	0x9bb
 2626 08e9 81000000 		.4byte	0x81
 2627 08ed A0040000 		.4byte	.LLST35
 2628 08f1 00       		.byte	0
 2629 08f2 14       		.uleb128 0x14
 2630 08f3 08050000 		.4byte	.LASF75
 2631 08f7 01       		.byte	0x1
 2632 08f8 5D01     		.2byte	0x15d
 2633 08fa 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 98


 2634 08fe 1C010000 		.4byte	.LFE39-.LFB39
 2635 0902 01       		.uleb128 0x1
 2636 0903 9C       		.byte	0x9c
 2637 0904 AC090000 		.4byte	0x9ac
 2638 0908 18       		.uleb128 0x18
 2639 0909 BC080000 		.4byte	.LASF40
 2640 090d 01       		.byte	0x1
 2641 090e 5D01     		.2byte	0x15d
 2642 0910 81000000 		.4byte	0x81
 2643 0914 D0040000 		.4byte	.LLST36
 2644 0918 16       		.uleb128 0x16
 2645 0919 64040000 		.4byte	.LASF76
 2646 091d 01       		.byte	0x1
 2647 091e 5F01     		.2byte	0x15f
 2648 0920 81000000 		.4byte	0x81
 2649 0924 2E050000 		.4byte	.LLST37
 2650 0928 16       		.uleb128 0x16
 2651 0929 DD080000 		.4byte	.LASF77
 2652 092d 01       		.byte	0x1
 2653 092e 6001     		.2byte	0x160
 2654 0930 81000000 		.4byte	0x81
 2655 0934 4C050000 		.4byte	.LLST38
 2656 0938 16       		.uleb128 0x16
 2657 0939 CB090000 		.4byte	.LASF78
 2658 093d 01       		.byte	0x1
 2659 093e 6101     		.2byte	0x161
 2660 0940 76000000 		.4byte	0x76
 2661 0944 A3050000 		.4byte	.LLST39
 2662 0948 16       		.uleb128 0x16
 2663 0949 07000000 		.4byte	.LASF79
 2664 094d 01       		.byte	0x1
 2665 094e 6201     		.2byte	0x162
 2666 0950 76000000 		.4byte	0x76
 2667 0954 C1050000 		.4byte	.LLST40
 2668 0958 1A       		.uleb128 0x1a
 2669 0959 52070000 		.4byte	.LASF42
 2670 095d 01       		.byte	0x1
 2671 095e 6301     		.2byte	0x163
 2672 0960 6B000000 		.4byte	0x6b
 2673 0964 1E       		.uleb128 0x1e
 2674 0965 39070000 		.4byte	.LASF80
 2675 0969 01       		.byte	0x1
 2676 096a 6401     		.2byte	0x164
 2677 096c 6B000000 		.4byte	0x6b
 2678 0970 02       		.uleb128 0x2
 2679 0971 91       		.byte	0x91
 2680 0972 64       		.sleb128 -28
 2681 0973 0F       		.uleb128 0xf
 2682 0974 2E000000 		.4byte	.LVL111
 2683 0978 A9080000 		.4byte	0x8a9
 2684 097c 87090000 		.4byte	0x987
 2685 0980 10       		.uleb128 0x10
 2686 0981 01       		.uleb128 0x1
 2687 0982 50       		.byte	0x50
 2688 0983 02       		.uleb128 0x2
 2689 0984 77       		.byte	0x77
 2690 0985 00       		.sleb128 0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 99


 2691 0986 00       		.byte	0
 2692 0987 0F       		.uleb128 0xf
 2693 0988 3E000000 		.4byte	.LVL114
 2694 098c 710D0000 		.4byte	0xd71
 2695 0990 9B090000 		.4byte	0x99b
 2696 0994 10       		.uleb128 0x10
 2697 0995 01       		.uleb128 0x1
 2698 0996 51       		.byte	0x51
 2699 0997 02       		.uleb128 0x2
 2700 0998 74       		.byte	0x74
 2701 0999 00       		.sleb128 0
 2702 099a 00       		.byte	0
 2703 099b 12       		.uleb128 0x12
 2704 099c 82000000 		.4byte	.LVL119
 2705 09a0 3D020000 		.4byte	0x23d
 2706 09a4 10       		.uleb128 0x10
 2707 09a5 01       		.uleb128 0x1
 2708 09a6 50       		.byte	0x50
 2709 09a7 02       		.uleb128 0x2
 2710 09a8 74       		.byte	0x74
 2711 09a9 00       		.sleb128 0
 2712 09aa 00       		.byte	0
 2713 09ab 00       		.byte	0
 2714 09ac 14       		.uleb128 0x14
 2715 09ad 46040000 		.4byte	.LASF81
 2716 09b1 01       		.byte	0x1
 2717 09b2 1C02     		.2byte	0x21c
 2718 09b4 00000000 		.4byte	.LFB40
 2719 09b8 10000000 		.4byte	.LFE40-.LFB40
 2720 09bc 01       		.uleb128 0x1
 2721 09bd 9C       		.byte	0x9c
 2722 09be F7090000 		.4byte	0x9f7
 2723 09c2 18       		.uleb128 0x18
 2724 09c3 BC080000 		.4byte	.LASF40
 2725 09c7 01       		.byte	0x1
 2726 09c8 1C02     		.2byte	0x21c
 2727 09ca 81000000 		.4byte	0x81
 2728 09ce EA050000 		.4byte	.LLST41
 2729 09d2 0F       		.uleb128 0xf
 2730 09d3 08000000 		.4byte	.LVL136
 2731 09d7 9D0D0000 		.4byte	0xd9d
 2732 09db E6090000 		.4byte	0x9e6
 2733 09df 10       		.uleb128 0x10
 2734 09e0 01       		.uleb128 0x1
 2735 09e1 50       		.byte	0x50
 2736 09e2 02       		.uleb128 0x2
 2737 09e3 74       		.byte	0x74
 2738 09e4 00       		.sleb128 0
 2739 09e5 00       		.byte	0
 2740 09e6 12       		.uleb128 0x12
 2741 09e7 0E000000 		.4byte	.LVL137
 2742 09eb F2080000 		.4byte	0x8f2
 2743 09ef 10       		.uleb128 0x10
 2744 09f0 01       		.uleb128 0x1
 2745 09f1 50       		.byte	0x50
 2746 09f2 02       		.uleb128 0x2
 2747 09f3 74       		.byte	0x74
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 100


 2748 09f4 00       		.sleb128 0
 2749 09f5 00       		.byte	0
 2750 09f6 00       		.byte	0
 2751 09f7 14       		.uleb128 0x14
 2752 09f8 63010000 		.4byte	.LASF82
 2753 09fc 01       		.byte	0x1
 2754 09fd 5202     		.2byte	0x252
 2755 09ff 00000000 		.4byte	.LFB41
 2756 0a03 24000000 		.4byte	.LFE41-.LFB41
 2757 0a07 01       		.uleb128 0x1
 2758 0a08 9C       		.byte	0x9c
 2759 0a09 500A0000 		.4byte	0xa50
 2760 0a0d 15       		.uleb128 0x15
 2761 0a0e 6900     		.ascii	"i\000"
 2762 0a10 01       		.byte	0x1
 2763 0a11 5402     		.2byte	0x254
 2764 0a13 81000000 		.4byte	0x81
 2765 0a17 16060000 		.4byte	.LLST42
 2766 0a1b 16       		.uleb128 0x16
 2767 0a1c 63070000 		.4byte	.LASF44
 2768 0a20 01       		.byte	0x1
 2769 0a21 5502     		.2byte	0x255
 2770 0a23 81000000 		.4byte	0x81
 2771 0a27 35060000 		.4byte	.LLST43
 2772 0a2b 0F       		.uleb128 0xf
 2773 0a2c 0E000000 		.4byte	.LVL141
 2774 0a30 3C0D0000 		.4byte	0xd3c
 2775 0a34 3F0A0000 		.4byte	0xa3f
 2776 0a38 10       		.uleb128 0x10
 2777 0a39 01       		.uleb128 0x1
 2778 0a3a 51       		.byte	0x51
 2779 0a3b 02       		.uleb128 0x2
 2780 0a3c 74       		.byte	0x74
 2781 0a3d 00       		.sleb128 0
 2782 0a3e 00       		.byte	0
 2783 0a3f 12       		.uleb128 0x12
 2784 0a40 18000000 		.4byte	.LVL143
 2785 0a44 AC090000 		.4byte	0x9ac
 2786 0a48 10       		.uleb128 0x10
 2787 0a49 01       		.uleb128 0x1
 2788 0a4a 50       		.byte	0x50
 2789 0a4b 02       		.uleb128 0x2
 2790 0a4c 74       		.byte	0x74
 2791 0a4d 00       		.sleb128 0
 2792 0a4e 00       		.byte	0
 2793 0a4f 00       		.byte	0
 2794 0a50 14       		.uleb128 0x14
 2795 0a51 A4000000 		.4byte	.LASF83
 2796 0a55 01       		.byte	0x1
 2797 0a56 7F02     		.2byte	0x27f
 2798 0a58 00000000 		.4byte	.LFB42
 2799 0a5c 30000000 		.4byte	.LFE42-.LFB42
 2800 0a60 01       		.uleb128 0x1
 2801 0a61 9C       		.byte	0x9c
 2802 0a62 E90A0000 		.4byte	0xae9
 2803 0a66 18       		.uleb128 0x18
 2804 0a67 52070000 		.4byte	.LASF42
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 101


 2805 0a6b 01       		.byte	0x1
 2806 0a6c 7F02     		.2byte	0x27f
 2807 0a6e 81000000 		.4byte	0x81
 2808 0a72 48060000 		.4byte	.LLST44
 2809 0a76 16       		.uleb128 0x16
 2810 0a77 A3070000 		.4byte	.LASF84
 2811 0a7b 01       		.byte	0x1
 2812 0a7c 8102     		.2byte	0x281
 2813 0a7e 81000000 		.4byte	0x81
 2814 0a82 69060000 		.4byte	.LLST45
 2815 0a86 16       		.uleb128 0x16
 2816 0a87 54080000 		.4byte	.LASF85
 2817 0a8b 01       		.byte	0x1
 2818 0a8c 8202     		.2byte	0x282
 2819 0a8e 81000000 		.4byte	0x81
 2820 0a92 A7060000 		.4byte	.LLST46
 2821 0a96 16       		.uleb128 0x16
 2822 0a97 17000000 		.4byte	.LASF86
 2823 0a9b 01       		.byte	0x1
 2824 0a9c 8302     		.2byte	0x283
 2825 0a9e 81000000 		.4byte	0x81
 2826 0aa2 D3060000 		.4byte	.LLST47
 2827 0aa6 15       		.uleb128 0x15
 2828 0aa7 6900     		.ascii	"i\000"
 2829 0aa9 01       		.byte	0x1
 2830 0aaa 8402     		.2byte	0x284
 2831 0aac 81000000 		.4byte	0x81
 2832 0ab0 0E070000 		.4byte	.LLST48
 2833 0ab4 16       		.uleb128 0x16
 2834 0ab5 63070000 		.4byte	.LASF44
 2835 0ab9 01       		.byte	0x1
 2836 0aba 8502     		.2byte	0x285
 2837 0abc 81000000 		.4byte	0x81
 2838 0ac0 21070000 		.4byte	.LLST49
 2839 0ac4 0F       		.uleb128 0xf
 2840 0ac5 16000000 		.4byte	.LVL151
 2841 0ac9 3C0D0000 		.4byte	0xd3c
 2842 0acd D80A0000 		.4byte	0xad8
 2843 0ad1 10       		.uleb128 0x10
 2844 0ad2 01       		.uleb128 0x1
 2845 0ad3 51       		.byte	0x51
 2846 0ad4 02       		.uleb128 0x2
 2847 0ad5 74       		.byte	0x74
 2848 0ad6 00       		.sleb128 0
 2849 0ad7 00       		.byte	0
 2850 0ad8 12       		.uleb128 0x12
 2851 0ad9 20000000 		.4byte	.LVL153
 2852 0add AC090000 		.4byte	0x9ac
 2853 0ae1 10       		.uleb128 0x10
 2854 0ae2 01       		.uleb128 0x1
 2855 0ae3 50       		.byte	0x50
 2856 0ae4 02       		.uleb128 0x2
 2857 0ae5 74       		.byte	0x74
 2858 0ae6 00       		.sleb128 0
 2859 0ae7 00       		.byte	0
 2860 0ae8 00       		.byte	0
 2861 0ae9 17       		.uleb128 0x17
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 102


 2862 0aea 52090000 		.4byte	.LASF87
 2863 0aee 01       		.byte	0x1
 2864 0aef A20A     		.2byte	0xaa2
 2865 0af1 81000000 		.4byte	0x81
 2866 0af5 00000000 		.4byte	.LFB64
 2867 0af9 0C000000 		.4byte	.LFE64-.LFB64
 2868 0afd 01       		.uleb128 0x1
 2869 0afe 9C       		.byte	0x9c
 2870 0aff 140B0000 		.4byte	0xb14
 2871 0b03 18       		.uleb128 0x18
 2872 0b04 BC080000 		.4byte	.LASF40
 2873 0b08 01       		.byte	0x1
 2874 0b09 A20A     		.2byte	0xaa2
 2875 0b0b 81000000 		.4byte	0x81
 2876 0b0f 34070000 		.4byte	.LLST50
 2877 0b13 00       		.byte	0
 2878 0b14 17       		.uleb128 0x17
 2879 0b15 A7060000 		.4byte	.LASF88
 2880 0b19 01       		.byte	0x1
 2881 0b1a BC0A     		.2byte	0xabc
 2882 0b1c 6B000000 		.4byte	0x6b
 2883 0b20 00000000 		.4byte	.LFB65
 2884 0b24 0C000000 		.4byte	.LFE65-.LFB65
 2885 0b28 01       		.uleb128 0x1
 2886 0b29 9C       		.byte	0x9c
 2887 0b2a 3F0B0000 		.4byte	0xb3f
 2888 0b2e 18       		.uleb128 0x18
 2889 0b2f BC080000 		.4byte	.LASF40
 2890 0b33 01       		.byte	0x1
 2891 0b34 BC0A     		.2byte	0xabc
 2892 0b36 81000000 		.4byte	0x81
 2893 0b3a 55070000 		.4byte	.LLST51
 2894 0b3e 00       		.byte	0
 2895 0b3f 17       		.uleb128 0x17
 2896 0b40 CC000000 		.4byte	.LASF89
 2897 0b44 01       		.byte	0x1
 2898 0b45 D60A     		.2byte	0xad6
 2899 0b47 6B000000 		.4byte	0x6b
 2900 0b4b 00000000 		.4byte	.LFB66
 2901 0b4f 0C000000 		.4byte	.LFE66-.LFB66
 2902 0b53 01       		.uleb128 0x1
 2903 0b54 9C       		.byte	0x9c
 2904 0b55 6A0B0000 		.4byte	0xb6a
 2905 0b59 18       		.uleb128 0x18
 2906 0b5a 52070000 		.4byte	.LASF42
 2907 0b5e 01       		.byte	0x1
 2908 0b5f D60A     		.2byte	0xad6
 2909 0b61 81000000 		.4byte	0x81
 2910 0b65 76070000 		.4byte	.LLST52
 2911 0b69 00       		.byte	0
 2912 0b6a 1F       		.uleb128 0x1f
 2913 0b6b 87090000 		.4byte	.LASF90
 2914 0b6f 01       		.byte	0x1
 2915 0b70 F00A     		.2byte	0xaf0
 2916 0b72 00000000 		.4byte	.LFB67
 2917 0b76 0C000000 		.4byte	.LFE67-.LFB67
 2918 0b7a 01       		.uleb128 0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 103


 2919 0b7b 9C       		.byte	0x9c
 2920 0b7c 1F       		.uleb128 0x1f
 2921 0b7d 46020000 		.4byte	.LASF91
 2922 0b81 01       		.byte	0x1
 2923 0b82 090B     		.2byte	0xb09
 2924 0b84 00000000 		.4byte	.LFB68
 2925 0b88 0C000000 		.4byte	.LFE68-.LFB68
 2926 0b8c 01       		.uleb128 0x1
 2927 0b8d 9C       		.byte	0x9c
 2928 0b8e 20       		.uleb128 0x20
 2929 0b8f 6B000000 		.4byte	0x6b
 2930 0b93 9E0B0000 		.4byte	0xb9e
 2931 0b97 21       		.uleb128 0x21
 2932 0b98 A1000000 		.4byte	0xa1
 2933 0b9c 02       		.byte	0x2
 2934 0b9d 00       		.byte	0
 2935 0b9e 22       		.uleb128 0x22
 2936 0b9f A5090000 		.4byte	.LASF92
 2937 0ba3 01       		.byte	0x1
 2938 0ba4 55       		.byte	0x55
 2939 0ba5 8E0B0000 		.4byte	0xb8e
 2940 0ba9 05       		.uleb128 0x5
 2941 0baa 03       		.byte	0x3
 2942 0bab 0C000000 		.4byte	CapSense_debounceCounter
 2943 0baf 20       		.uleb128 0x20
 2944 0bb0 76000000 		.4byte	0x76
 2945 0bb4 BF0B0000 		.4byte	0xbbf
 2946 0bb8 21       		.uleb128 0x21
 2947 0bb9 A1000000 		.4byte	0xa1
 2948 0bbd 01       		.byte	0x1
 2949 0bbe 00       		.byte	0
 2950 0bbf 23       		.uleb128 0x23
 2951 0bc0 01090000 		.4byte	.LASF93
 2952 0bc4 01       		.byte	0x1
 2953 0bc5 2C       		.byte	0x2c
 2954 0bc6 AF0B0000 		.4byte	0xbaf
 2955 0bca 20       		.uleb128 0x20
 2956 0bcb 6B000000 		.4byte	0x6b
 2957 0bcf DA0B0000 		.4byte	0xbda
 2958 0bd3 21       		.uleb128 0x21
 2959 0bd4 A1000000 		.4byte	0xa1
 2960 0bd8 00       		.byte	0
 2961 0bd9 00       		.byte	0
 2962 0bda 23       		.uleb128 0x23
 2963 0bdb 13040000 		.4byte	.LASF94
 2964 0bdf 01       		.byte	0x1
 2965 0be0 2D       		.byte	0x2d
 2966 0be1 CA0B0000 		.4byte	0xbca
 2967 0be5 20       		.uleb128 0x20
 2968 0be6 6B000000 		.4byte	0x6b
 2969 0bea F50B0000 		.4byte	0xbf5
 2970 0bee 21       		.uleb128 0x21
 2971 0bef A1000000 		.4byte	0xa1
 2972 0bf3 01       		.byte	0x1
 2973 0bf4 00       		.byte	0
 2974 0bf5 23       		.uleb128 0x23
 2975 0bf6 6C020000 		.4byte	.LASF95
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 104


 2976 0bfa 01       		.byte	0x1
 2977 0bfb 2E       		.byte	0x2e
 2978 0bfc 000C0000 		.4byte	0xc00
 2979 0c00 08       		.uleb128 0x8
 2980 0c01 E50B0000 		.4byte	0xbe5
 2981 0c05 24       		.uleb128 0x24
 2982 0c06 EC070000 		.4byte	.LASF96
 2983 0c0a 01       		.byte	0x1
 2984 0c0b 34       		.byte	0x34
 2985 0c0c AF0B0000 		.4byte	0xbaf
 2986 0c10 05       		.uleb128 0x5
 2987 0c11 03       		.byte	0x3
 2988 0c12 00000000 		.4byte	CapSense_sensorBaseline
 2989 0c16 24       		.uleb128 0x24
 2990 0c17 4F030000 		.4byte	.LASF97
 2991 0c1b 01       		.byte	0x1
 2992 0c1c 35       		.byte	0x35
 2993 0c1d E50B0000 		.4byte	0xbe5
 2994 0c21 05       		.uleb128 0x5
 2995 0c22 03       		.byte	0x3
 2996 0c23 00000000 		.4byte	CapSense_sensorBaselineLow
 2997 0c27 24       		.uleb128 0x24
 2998 0c28 0E010000 		.4byte	.LASF98
 2999 0c2c 01       		.byte	0x1
 3000 0c2d 36       		.byte	0x36
 3001 0c2e E50B0000 		.4byte	0xbe5
 3002 0c32 05       		.uleb128 0x5
 3003 0c33 03       		.byte	0x3
 3004 0c34 00000000 		.4byte	CapSense_sensorSignal
 3005 0c38 24       		.uleb128 0x24
 3006 0c39 38000000 		.4byte	.LASF99
 3007 0c3d 01       		.byte	0x1
 3008 0c3e 37       		.byte	0x37
 3009 0c3f CA0B0000 		.4byte	0xbca
 3010 0c43 05       		.uleb128 0x5
 3011 0c44 03       		.byte	0x3
 3012 0c45 00000000 		.4byte	CapSense_sensorOnMask
 3013 0c49 24       		.uleb128 0x24
 3014 0c4a B4070000 		.4byte	.LASF100
 3015 0c4e 01       		.byte	0x1
 3016 0c4f 39       		.byte	0x39
 3017 0c50 E50B0000 		.4byte	0xbe5
 3018 0c54 05       		.uleb128 0x5
 3019 0c55 03       		.byte	0x3
 3020 0c56 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3021 0c5a 24       		.uleb128 0x24
 3022 0c5b 2C020000 		.4byte	.LASF101
 3023 0c5f 01       		.byte	0x1
 3024 0c60 3A       		.byte	0x3a
 3025 0c61 E50B0000 		.4byte	0xbe5
 3026 0c65 05       		.uleb128 0x5
 3027 0c66 03       		.byte	0x3
 3028 0c67 00000000 		.4byte	CapSense_lowBaselineReset
 3029 0c6b 24       		.uleb128 0x24
 3030 0c6c 4B060000 		.4byte	.LASF102
 3031 0c70 01       		.byte	0x1
 3032 0c71 49       		.byte	0x49
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 105


 3033 0c72 E50B0000 		.4byte	0xbe5
 3034 0c76 05       		.uleb128 0x5
 3035 0c77 03       		.byte	0x3
 3036 0c78 00000000 		.4byte	CapSense_fingerThreshold
 3037 0c7c 24       		.uleb128 0x24
 3038 0c7d A5050000 		.4byte	.LASF103
 3039 0c81 01       		.byte	0x1
 3040 0c82 4B       		.byte	0x4b
 3041 0c83 E50B0000 		.4byte	0xbe5
 3042 0c87 05       		.uleb128 0x5
 3043 0c88 03       		.byte	0x3
 3044 0c89 00000000 		.4byte	CapSense_noiseThreshold
 3045 0c8d 24       		.uleb128 0x24
 3046 0c8e 010A0000 		.4byte	.LASF104
 3047 0c92 01       		.byte	0x1
 3048 0c93 4D       		.byte	0x4d
 3049 0c94 E50B0000 		.4byte	0xbe5
 3050 0c98 05       		.uleb128 0x5
 3051 0c99 03       		.byte	0x3
 3052 0c9a 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3053 0c9e 24       		.uleb128 0x24
 3054 0c9f 04080000 		.4byte	.LASF105
 3055 0ca3 01       		.byte	0x1
 3056 0ca4 4F       		.byte	0x4f
 3057 0ca5 E50B0000 		.4byte	0xbe5
 3058 0ca9 05       		.uleb128 0x5
 3059 0caa 03       		.byte	0x3
 3060 0cab 00000000 		.4byte	CapSense_hysteresis
 3061 0caf 24       		.uleb128 0x24
 3062 0cb0 88030000 		.4byte	.LASF106
 3063 0cb4 01       		.byte	0x1
 3064 0cb5 51       		.byte	0x51
 3065 0cb6 E50B0000 		.4byte	0xbe5
 3066 0cba 05       		.uleb128 0x5
 3067 0cbb 03       		.byte	0x3
 3068 0cbc 00000000 		.4byte	CapSense_debounce
 3069 0cc0 24       		.uleb128 0x24
 3070 0cc1 22000000 		.4byte	.LASF107
 3071 0cc5 01       		.byte	0x1
 3072 0cc6 59       		.byte	0x59
 3073 0cc7 D10C0000 		.4byte	0xcd1
 3074 0ccb 05       		.uleb128 0x5
 3075 0ccc 03       		.byte	0x3
 3076 0ccd 00000000 		.4byte	CapSense_rawDataIndex
 3077 0cd1 08       		.uleb128 0x8
 3078 0cd2 E50B0000 		.4byte	0xbe5
 3079 0cd6 24       		.uleb128 0x24
 3080 0cd7 2D040000 		.4byte	.LASF108
 3081 0cdb 01       		.byte	0x1
 3082 0cdc 5E       		.byte	0x5e
 3083 0cdd E70C0000 		.4byte	0xce7
 3084 0ce1 05       		.uleb128 0x5
 3085 0ce2 03       		.byte	0x3
 3086 0ce3 00000000 		.4byte	CapSense_numberOfSensors
 3087 0ce7 08       		.uleb128 0x8
 3088 0ce8 E50B0000 		.4byte	0xbe5
 3089 0cec 24       		.uleb128 0x24
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 106


 3090 0ced 79060000 		.4byte	.LASF109
 3091 0cf1 01       		.byte	0x1
 3092 0cf2 27       		.byte	0x27
 3093 0cf3 AF0B0000 		.4byte	0xbaf
 3094 0cf7 05       		.uleb128 0x5
 3095 0cf8 03       		.byte	0x3
 3096 0cf9 00000000 		.4byte	CapSense_rawFilterData1
 3097 0cfd 23       		.uleb128 0x23
 3098 0cfe 91060000 		.4byte	.LASF110
 3099 0d02 01       		.byte	0x1
 3100 0d03 41       		.byte	0x41
 3101 0d04 32020000 		.4byte	0x232
 3102 0d08 24       		.uleb128 0x24
 3103 0d09 1D080000 		.4byte	.LASF111
 3104 0d0d 01       		.byte	0x1
 3105 0d0e 45       		.byte	0x45
 3106 0d0f 6B000000 		.4byte	0x6b
 3107 0d13 05       		.uleb128 0x5
 3108 0d14 03       		.byte	0x3
 3109 0d15 00000000 		.4byte	CapSense_enableRawFilters
 3110 0d19 25       		.uleb128 0x25
 3111 0d1a 1C030000 		.4byte	.LASF112
 3112 0d1e 04       		.byte	0x4
 3113 0d1f 9D       		.byte	0x9d
 3114 0d20 2A0D0000 		.4byte	0xd2a
 3115 0d24 0A       		.uleb128 0xa
 3116 0d25 81000000 		.4byte	0x81
 3117 0d29 00       		.byte	0
 3118 0d2a 26       		.uleb128 0x26
 3119 0d2b 76040000 		.4byte	.LASF118
 3120 0d2f 04       		.byte	0x4
 3121 0d30 9C       		.byte	0x9c
 3122 0d31 81000000 		.4byte	0x81
 3123 0d35 27       		.uleb128 0x27
 3124 0d36 6B090000 		.4byte	.LASF119
 3125 0d3a 04       		.byte	0x4
 3126 0d3b 9F       		.byte	0x9f
 3127 0d3c 28       		.uleb128 0x28
 3128 0d3d 3D090000 		.4byte	.LASF120
 3129 0d41 03       		.byte	0x3
 3130 0d42 61       		.byte	0x61
 3131 0d43 81000000 		.4byte	0x81
 3132 0d47 560D0000 		.4byte	0xd56
 3133 0d4b 0A       		.uleb128 0xa
 3134 0d4c 5F010000 		.4byte	0x15f
 3135 0d50 0A       		.uleb128 0xa
 3136 0d51 81000000 		.4byte	0x81
 3137 0d55 00       		.byte	0
 3138 0d56 25       		.uleb128 0x25
 3139 0d57 64060000 		.4byte	.LASF113
 3140 0d5b 03       		.byte	0x3
 3141 0d5c 62       		.byte	0x62
 3142 0d5d 710D0000 		.4byte	0xd71
 3143 0d61 0A       		.uleb128 0xa
 3144 0d62 59010000 		.4byte	0x159
 3145 0d66 0A       		.uleb128 0xa
 3146 0d67 81000000 		.4byte	0x81
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 107


 3147 0d6b 0A       		.uleb128 0xa
 3148 0d6c 81000000 		.4byte	0x81
 3149 0d70 00       		.byte	0
 3150 0d71 25       		.uleb128 0x25
 3151 0d72 D3090000 		.4byte	.LASF114
 3152 0d76 03       		.byte	0x3
 3153 0d77 78       		.byte	0x78
 3154 0d78 8C0D0000 		.4byte	0xd8c
 3155 0d7c 0A       		.uleb128 0xa
 3156 0d7d 8C0D0000 		.4byte	0xd8c
 3157 0d81 0A       		.uleb128 0xa
 3158 0d82 65010000 		.4byte	0x165
 3159 0d86 0A       		.uleb128 0xa
 3160 0d87 920D0000 		.4byte	0xd92
 3161 0d8b 00       		.byte	0
 3162 0d8c 07       		.uleb128 0x7
 3163 0d8d 04       		.byte	0x4
 3164 0d8e 32020000 		.4byte	0x232
 3165 0d92 07       		.uleb128 0x7
 3166 0d93 04       		.byte	0x4
 3167 0d94 980D0000 		.4byte	0xd98
 3168 0d98 08       		.uleb128 0x8
 3169 0d99 76000000 		.4byte	0x76
 3170 0d9d 29       		.uleb128 0x29
 3171 0d9e C3080000 		.4byte	.LASF121
 3172 0da2 01       		.byte	0x1
 3173 0da3 17       		.byte	0x17
 3174 0da4 0A       		.uleb128 0xa
 3175 0da5 81000000 		.4byte	0x81
 3176 0da9 00       		.byte	0
 3177 0daa 00       		.byte	0
 3178              		.section	.debug_abbrev,"",%progbits
 3179              	.Ldebug_abbrev0:
 3180 0000 01       		.uleb128 0x1
 3181 0001 11       		.uleb128 0x11
 3182 0002 01       		.byte	0x1
 3183 0003 25       		.uleb128 0x25
 3184 0004 0E       		.uleb128 0xe
 3185 0005 13       		.uleb128 0x13
 3186 0006 0B       		.uleb128 0xb
 3187 0007 03       		.uleb128 0x3
 3188 0008 0E       		.uleb128 0xe
 3189 0009 1B       		.uleb128 0x1b
 3190 000a 0E       		.uleb128 0xe
 3191 000b 55       		.uleb128 0x55
 3192 000c 17       		.uleb128 0x17
 3193 000d 11       		.uleb128 0x11
 3194 000e 01       		.uleb128 0x1
 3195 000f 10       		.uleb128 0x10
 3196 0010 17       		.uleb128 0x17
 3197 0011 00       		.byte	0
 3198 0012 00       		.byte	0
 3199 0013 02       		.uleb128 0x2
 3200 0014 24       		.uleb128 0x24
 3201 0015 00       		.byte	0
 3202 0016 0B       		.uleb128 0xb
 3203 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 108


 3204 0018 3E       		.uleb128 0x3e
 3205 0019 0B       		.uleb128 0xb
 3206 001a 03       		.uleb128 0x3
 3207 001b 0E       		.uleb128 0xe
 3208 001c 00       		.byte	0
 3209 001d 00       		.byte	0
 3210 001e 03       		.uleb128 0x3
 3211 001f 24       		.uleb128 0x24
 3212 0020 00       		.byte	0
 3213 0021 0B       		.uleb128 0xb
 3214 0022 0B       		.uleb128 0xb
 3215 0023 3E       		.uleb128 0x3e
 3216 0024 0B       		.uleb128 0xb
 3217 0025 03       		.uleb128 0x3
 3218 0026 08       		.uleb128 0x8
 3219 0027 00       		.byte	0
 3220 0028 00       		.byte	0
 3221 0029 04       		.uleb128 0x4
 3222 002a 16       		.uleb128 0x16
 3223 002b 00       		.byte	0
 3224 002c 03       		.uleb128 0x3
 3225 002d 0E       		.uleb128 0xe
 3226 002e 3A       		.uleb128 0x3a
 3227 002f 0B       		.uleb128 0xb
 3228 0030 3B       		.uleb128 0x3b
 3229 0031 0B       		.uleb128 0xb
 3230 0032 49       		.uleb128 0x49
 3231 0033 13       		.uleb128 0x13
 3232 0034 00       		.byte	0
 3233 0035 00       		.byte	0
 3234 0036 05       		.uleb128 0x5
 3235 0037 13       		.uleb128 0x13
 3236 0038 01       		.byte	0x1
 3237 0039 0B       		.uleb128 0xb
 3238 003a 0B       		.uleb128 0xb
 3239 003b 3A       		.uleb128 0x3a
 3240 003c 0B       		.uleb128 0xb
 3241 003d 3B       		.uleb128 0x3b
 3242 003e 0B       		.uleb128 0xb
 3243 003f 01       		.uleb128 0x1
 3244 0040 13       		.uleb128 0x13
 3245 0041 00       		.byte	0
 3246 0042 00       		.byte	0
 3247 0043 06       		.uleb128 0x6
 3248 0044 0D       		.uleb128 0xd
 3249 0045 00       		.byte	0
 3250 0046 03       		.uleb128 0x3
 3251 0047 0E       		.uleb128 0xe
 3252 0048 3A       		.uleb128 0x3a
 3253 0049 0B       		.uleb128 0xb
 3254 004a 3B       		.uleb128 0x3b
 3255 004b 0B       		.uleb128 0xb
 3256 004c 49       		.uleb128 0x49
 3257 004d 13       		.uleb128 0x13
 3258 004e 38       		.uleb128 0x38
 3259 004f 0B       		.uleb128 0xb
 3260 0050 00       		.byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 109


 3261 0051 00       		.byte	0
 3262 0052 07       		.uleb128 0x7
 3263 0053 0F       		.uleb128 0xf
 3264 0054 00       		.byte	0
 3265 0055 0B       		.uleb128 0xb
 3266 0056 0B       		.uleb128 0xb
 3267 0057 49       		.uleb128 0x49
 3268 0058 13       		.uleb128 0x13
 3269 0059 00       		.byte	0
 3270 005a 00       		.byte	0
 3271 005b 08       		.uleb128 0x8
 3272 005c 26       		.uleb128 0x26
 3273 005d 00       		.byte	0
 3274 005e 49       		.uleb128 0x49
 3275 005f 13       		.uleb128 0x13
 3276 0060 00       		.byte	0
 3277 0061 00       		.byte	0
 3278 0062 09       		.uleb128 0x9
 3279 0063 15       		.uleb128 0x15
 3280 0064 01       		.byte	0x1
 3281 0065 27       		.uleb128 0x27
 3282 0066 19       		.uleb128 0x19
 3283 0067 49       		.uleb128 0x49
 3284 0068 13       		.uleb128 0x13
 3285 0069 01       		.uleb128 0x1
 3286 006a 13       		.uleb128 0x13
 3287 006b 00       		.byte	0
 3288 006c 00       		.byte	0
 3289 006d 0A       		.uleb128 0xa
 3290 006e 05       		.uleb128 0x5
 3291 006f 00       		.byte	0
 3292 0070 49       		.uleb128 0x49
 3293 0071 13       		.uleb128 0x13
 3294 0072 00       		.byte	0
 3295 0073 00       		.byte	0
 3296 0074 0B       		.uleb128 0xb
 3297 0075 15       		.uleb128 0x15
 3298 0076 01       		.byte	0x1
 3299 0077 27       		.uleb128 0x27
 3300 0078 19       		.uleb128 0x19
 3301 0079 01       		.uleb128 0x1
 3302 007a 13       		.uleb128 0x13
 3303 007b 00       		.byte	0
 3304 007c 00       		.byte	0
 3305 007d 0C       		.uleb128 0xc
 3306 007e 2E       		.uleb128 0x2e
 3307 007f 01       		.byte	0x1
 3308 0080 3F       		.uleb128 0x3f
 3309 0081 19       		.uleb128 0x19
 3310 0082 03       		.uleb128 0x3
 3311 0083 0E       		.uleb128 0xe
 3312 0084 3A       		.uleb128 0x3a
 3313 0085 0B       		.uleb128 0xb
 3314 0086 3B       		.uleb128 0x3b
 3315 0087 0B       		.uleb128 0xb
 3316 0088 27       		.uleb128 0x27
 3317 0089 19       		.uleb128 0x19
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 110


 3318 008a 11       		.uleb128 0x11
 3319 008b 01       		.uleb128 0x1
 3320 008c 12       		.uleb128 0x12
 3321 008d 06       		.uleb128 0x6
 3322 008e 40       		.uleb128 0x40
 3323 008f 18       		.uleb128 0x18
 3324 0090 9742     		.uleb128 0x2117
 3325 0092 19       		.uleb128 0x19
 3326 0093 01       		.uleb128 0x1
 3327 0094 13       		.uleb128 0x13
 3328 0095 00       		.byte	0
 3329 0096 00       		.byte	0
 3330 0097 0D       		.uleb128 0xd
 3331 0098 05       		.uleb128 0x5
 3332 0099 00       		.byte	0
 3333 009a 03       		.uleb128 0x3
 3334 009b 0E       		.uleb128 0xe
 3335 009c 3A       		.uleb128 0x3a
 3336 009d 0B       		.uleb128 0xb
 3337 009e 3B       		.uleb128 0x3b
 3338 009f 0B       		.uleb128 0xb
 3339 00a0 49       		.uleb128 0x49
 3340 00a1 13       		.uleb128 0x13
 3341 00a2 02       		.uleb128 0x2
 3342 00a3 17       		.uleb128 0x17
 3343 00a4 00       		.byte	0
 3344 00a5 00       		.byte	0
 3345 00a6 0E       		.uleb128 0xe
 3346 00a7 34       		.uleb128 0x34
 3347 00a8 00       		.byte	0
 3348 00a9 03       		.uleb128 0x3
 3349 00aa 0E       		.uleb128 0xe
 3350 00ab 3A       		.uleb128 0x3a
 3351 00ac 0B       		.uleb128 0xb
 3352 00ad 3B       		.uleb128 0x3b
 3353 00ae 0B       		.uleb128 0xb
 3354 00af 49       		.uleb128 0x49
 3355 00b0 13       		.uleb128 0x13
 3356 00b1 02       		.uleb128 0x2
 3357 00b2 17       		.uleb128 0x17
 3358 00b3 00       		.byte	0
 3359 00b4 00       		.byte	0
 3360 00b5 0F       		.uleb128 0xf
 3361 00b6 898201   		.uleb128 0x4109
 3362 00b9 01       		.byte	0x1
 3363 00ba 11       		.uleb128 0x11
 3364 00bb 01       		.uleb128 0x1
 3365 00bc 31       		.uleb128 0x31
 3366 00bd 13       		.uleb128 0x13
 3367 00be 01       		.uleb128 0x1
 3368 00bf 13       		.uleb128 0x13
 3369 00c0 00       		.byte	0
 3370 00c1 00       		.byte	0
 3371 00c2 10       		.uleb128 0x10
 3372 00c3 8A8201   		.uleb128 0x410a
 3373 00c6 00       		.byte	0
 3374 00c7 02       		.uleb128 0x2
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 111


 3375 00c8 18       		.uleb128 0x18
 3376 00c9 9142     		.uleb128 0x2111
 3377 00cb 18       		.uleb128 0x18
 3378 00cc 00       		.byte	0
 3379 00cd 00       		.byte	0
 3380 00ce 11       		.uleb128 0x11
 3381 00cf 898201   		.uleb128 0x4109
 3382 00d2 00       		.byte	0
 3383 00d3 11       		.uleb128 0x11
 3384 00d4 01       		.uleb128 0x1
 3385 00d5 31       		.uleb128 0x31
 3386 00d6 13       		.uleb128 0x13
 3387 00d7 00       		.byte	0
 3388 00d8 00       		.byte	0
 3389 00d9 12       		.uleb128 0x12
 3390 00da 898201   		.uleb128 0x4109
 3391 00dd 01       		.byte	0x1
 3392 00de 11       		.uleb128 0x11
 3393 00df 01       		.uleb128 0x1
 3394 00e0 31       		.uleb128 0x31
 3395 00e1 13       		.uleb128 0x13
 3396 00e2 00       		.byte	0
 3397 00e3 00       		.byte	0
 3398 00e4 13       		.uleb128 0x13
 3399 00e5 34       		.uleb128 0x34
 3400 00e6 00       		.byte	0
 3401 00e7 03       		.uleb128 0x3
 3402 00e8 08       		.uleb128 0x8
 3403 00e9 3A       		.uleb128 0x3a
 3404 00ea 0B       		.uleb128 0xb
 3405 00eb 3B       		.uleb128 0x3b
 3406 00ec 0B       		.uleb128 0xb
 3407 00ed 49       		.uleb128 0x49
 3408 00ee 13       		.uleb128 0x13
 3409 00ef 02       		.uleb128 0x2
 3410 00f0 17       		.uleb128 0x17
 3411 00f1 00       		.byte	0
 3412 00f2 00       		.byte	0
 3413 00f3 14       		.uleb128 0x14
 3414 00f4 2E       		.uleb128 0x2e
 3415 00f5 01       		.byte	0x1
 3416 00f6 3F       		.uleb128 0x3f
 3417 00f7 19       		.uleb128 0x19
 3418 00f8 03       		.uleb128 0x3
 3419 00f9 0E       		.uleb128 0xe
 3420 00fa 3A       		.uleb128 0x3a
 3421 00fb 0B       		.uleb128 0xb
 3422 00fc 3B       		.uleb128 0x3b
 3423 00fd 05       		.uleb128 0x5
 3424 00fe 27       		.uleb128 0x27
 3425 00ff 19       		.uleb128 0x19
 3426 0100 11       		.uleb128 0x11
 3427 0101 01       		.uleb128 0x1
 3428 0102 12       		.uleb128 0x12
 3429 0103 06       		.uleb128 0x6
 3430 0104 40       		.uleb128 0x40
 3431 0105 18       		.uleb128 0x18
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 112


 3432 0106 9742     		.uleb128 0x2117
 3433 0108 19       		.uleb128 0x19
 3434 0109 01       		.uleb128 0x1
 3435 010a 13       		.uleb128 0x13
 3436 010b 00       		.byte	0
 3437 010c 00       		.byte	0
 3438 010d 15       		.uleb128 0x15
 3439 010e 34       		.uleb128 0x34
 3440 010f 00       		.byte	0
 3441 0110 03       		.uleb128 0x3
 3442 0111 08       		.uleb128 0x8
 3443 0112 3A       		.uleb128 0x3a
 3444 0113 0B       		.uleb128 0xb
 3445 0114 3B       		.uleb128 0x3b
 3446 0115 05       		.uleb128 0x5
 3447 0116 49       		.uleb128 0x49
 3448 0117 13       		.uleb128 0x13
 3449 0118 02       		.uleb128 0x2
 3450 0119 17       		.uleb128 0x17
 3451 011a 00       		.byte	0
 3452 011b 00       		.byte	0
 3453 011c 16       		.uleb128 0x16
 3454 011d 34       		.uleb128 0x34
 3455 011e 00       		.byte	0
 3456 011f 03       		.uleb128 0x3
 3457 0120 0E       		.uleb128 0xe
 3458 0121 3A       		.uleb128 0x3a
 3459 0122 0B       		.uleb128 0xb
 3460 0123 3B       		.uleb128 0x3b
 3461 0124 05       		.uleb128 0x5
 3462 0125 49       		.uleb128 0x49
 3463 0126 13       		.uleb128 0x13
 3464 0127 02       		.uleb128 0x2
 3465 0128 17       		.uleb128 0x17
 3466 0129 00       		.byte	0
 3467 012a 00       		.byte	0
 3468 012b 17       		.uleb128 0x17
 3469 012c 2E       		.uleb128 0x2e
 3470 012d 01       		.byte	0x1
 3471 012e 3F       		.uleb128 0x3f
 3472 012f 19       		.uleb128 0x19
 3473 0130 03       		.uleb128 0x3
 3474 0131 0E       		.uleb128 0xe
 3475 0132 3A       		.uleb128 0x3a
 3476 0133 0B       		.uleb128 0xb
 3477 0134 3B       		.uleb128 0x3b
 3478 0135 05       		.uleb128 0x5
 3479 0136 27       		.uleb128 0x27
 3480 0137 19       		.uleb128 0x19
 3481 0138 49       		.uleb128 0x49
 3482 0139 13       		.uleb128 0x13
 3483 013a 11       		.uleb128 0x11
 3484 013b 01       		.uleb128 0x1
 3485 013c 12       		.uleb128 0x12
 3486 013d 06       		.uleb128 0x6
 3487 013e 40       		.uleb128 0x40
 3488 013f 18       		.uleb128 0x18
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 113


 3489 0140 9742     		.uleb128 0x2117
 3490 0142 19       		.uleb128 0x19
 3491 0143 01       		.uleb128 0x1
 3492 0144 13       		.uleb128 0x13
 3493 0145 00       		.byte	0
 3494 0146 00       		.byte	0
 3495 0147 18       		.uleb128 0x18
 3496 0148 05       		.uleb128 0x5
 3497 0149 00       		.byte	0
 3498 014a 03       		.uleb128 0x3
 3499 014b 0E       		.uleb128 0xe
 3500 014c 3A       		.uleb128 0x3a
 3501 014d 0B       		.uleb128 0xb
 3502 014e 3B       		.uleb128 0x3b
 3503 014f 05       		.uleb128 0x5
 3504 0150 49       		.uleb128 0x49
 3505 0151 13       		.uleb128 0x13
 3506 0152 02       		.uleb128 0x2
 3507 0153 17       		.uleb128 0x17
 3508 0154 00       		.byte	0
 3509 0155 00       		.byte	0
 3510 0156 19       		.uleb128 0x19
 3511 0157 05       		.uleb128 0x5
 3512 0158 00       		.byte	0
 3513 0159 03       		.uleb128 0x3
 3514 015a 0E       		.uleb128 0xe
 3515 015b 3A       		.uleb128 0x3a
 3516 015c 0B       		.uleb128 0xb
 3517 015d 3B       		.uleb128 0x3b
 3518 015e 05       		.uleb128 0x5
 3519 015f 49       		.uleb128 0x49
 3520 0160 13       		.uleb128 0x13
 3521 0161 02       		.uleb128 0x2
 3522 0162 18       		.uleb128 0x18
 3523 0163 00       		.byte	0
 3524 0164 00       		.byte	0
 3525 0165 1A       		.uleb128 0x1a
 3526 0166 34       		.uleb128 0x34
 3527 0167 00       		.byte	0
 3528 0168 03       		.uleb128 0x3
 3529 0169 0E       		.uleb128 0xe
 3530 016a 3A       		.uleb128 0x3a
 3531 016b 0B       		.uleb128 0xb
 3532 016c 3B       		.uleb128 0x3b
 3533 016d 05       		.uleb128 0x5
 3534 016e 49       		.uleb128 0x49
 3535 016f 13       		.uleb128 0x13
 3536 0170 00       		.byte	0
 3537 0171 00       		.byte	0
 3538 0172 1B       		.uleb128 0x1b
 3539 0173 05       		.uleb128 0x5
 3540 0174 00       		.byte	0
 3541 0175 03       		.uleb128 0x3
 3542 0176 08       		.uleb128 0x8
 3543 0177 3A       		.uleb128 0x3a
 3544 0178 0B       		.uleb128 0xb
 3545 0179 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 114


 3546 017a 05       		.uleb128 0x5
 3547 017b 49       		.uleb128 0x49
 3548 017c 13       		.uleb128 0x13
 3549 017d 02       		.uleb128 0x2
 3550 017e 17       		.uleb128 0x17
 3551 017f 00       		.byte	0
 3552 0180 00       		.byte	0
 3553 0181 1C       		.uleb128 0x1c
 3554 0182 05       		.uleb128 0x5
 3555 0183 00       		.byte	0
 3556 0184 03       		.uleb128 0x3
 3557 0185 08       		.uleb128 0x8
 3558 0186 3A       		.uleb128 0x3a
 3559 0187 0B       		.uleb128 0xb
 3560 0188 3B       		.uleb128 0x3b
 3561 0189 05       		.uleb128 0x5
 3562 018a 49       		.uleb128 0x49
 3563 018b 13       		.uleb128 0x13
 3564 018c 02       		.uleb128 0x2
 3565 018d 18       		.uleb128 0x18
 3566 018e 00       		.byte	0
 3567 018f 00       		.byte	0
 3568 0190 1D       		.uleb128 0x1d
 3569 0191 34       		.uleb128 0x34
 3570 0192 00       		.byte	0
 3571 0193 03       		.uleb128 0x3
 3572 0194 08       		.uleb128 0x8
 3573 0195 3A       		.uleb128 0x3a
 3574 0196 0B       		.uleb128 0xb
 3575 0197 3B       		.uleb128 0x3b
 3576 0198 05       		.uleb128 0x5
 3577 0199 49       		.uleb128 0x49
 3578 019a 13       		.uleb128 0x13
 3579 019b 00       		.byte	0
 3580 019c 00       		.byte	0
 3581 019d 1E       		.uleb128 0x1e
 3582 019e 34       		.uleb128 0x34
 3583 019f 00       		.byte	0
 3584 01a0 03       		.uleb128 0x3
 3585 01a1 0E       		.uleb128 0xe
 3586 01a2 3A       		.uleb128 0x3a
 3587 01a3 0B       		.uleb128 0xb
 3588 01a4 3B       		.uleb128 0x3b
 3589 01a5 05       		.uleb128 0x5
 3590 01a6 49       		.uleb128 0x49
 3591 01a7 13       		.uleb128 0x13
 3592 01a8 02       		.uleb128 0x2
 3593 01a9 18       		.uleb128 0x18
 3594 01aa 00       		.byte	0
 3595 01ab 00       		.byte	0
 3596 01ac 1F       		.uleb128 0x1f
 3597 01ad 2E       		.uleb128 0x2e
 3598 01ae 00       		.byte	0
 3599 01af 3F       		.uleb128 0x3f
 3600 01b0 19       		.uleb128 0x19
 3601 01b1 03       		.uleb128 0x3
 3602 01b2 0E       		.uleb128 0xe
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 115


 3603 01b3 3A       		.uleb128 0x3a
 3604 01b4 0B       		.uleb128 0xb
 3605 01b5 3B       		.uleb128 0x3b
 3606 01b6 05       		.uleb128 0x5
 3607 01b7 27       		.uleb128 0x27
 3608 01b8 19       		.uleb128 0x19
 3609 01b9 11       		.uleb128 0x11
 3610 01ba 01       		.uleb128 0x1
 3611 01bb 12       		.uleb128 0x12
 3612 01bc 06       		.uleb128 0x6
 3613 01bd 40       		.uleb128 0x40
 3614 01be 18       		.uleb128 0x18
 3615 01bf 9742     		.uleb128 0x2117
 3616 01c1 19       		.uleb128 0x19
 3617 01c2 00       		.byte	0
 3618 01c3 00       		.byte	0
 3619 01c4 20       		.uleb128 0x20
 3620 01c5 01       		.uleb128 0x1
 3621 01c6 01       		.byte	0x1
 3622 01c7 49       		.uleb128 0x49
 3623 01c8 13       		.uleb128 0x13
 3624 01c9 01       		.uleb128 0x1
 3625 01ca 13       		.uleb128 0x13
 3626 01cb 00       		.byte	0
 3627 01cc 00       		.byte	0
 3628 01cd 21       		.uleb128 0x21
 3629 01ce 21       		.uleb128 0x21
 3630 01cf 00       		.byte	0
 3631 01d0 49       		.uleb128 0x49
 3632 01d1 13       		.uleb128 0x13
 3633 01d2 2F       		.uleb128 0x2f
 3634 01d3 0B       		.uleb128 0xb
 3635 01d4 00       		.byte	0
 3636 01d5 00       		.byte	0
 3637 01d6 22       		.uleb128 0x22
 3638 01d7 34       		.uleb128 0x34
 3639 01d8 00       		.byte	0
 3640 01d9 03       		.uleb128 0x3
 3641 01da 0E       		.uleb128 0xe
 3642 01db 3A       		.uleb128 0x3a
 3643 01dc 0B       		.uleb128 0xb
 3644 01dd 3B       		.uleb128 0x3b
 3645 01de 0B       		.uleb128 0xb
 3646 01df 49       		.uleb128 0x49
 3647 01e0 13       		.uleb128 0x13
 3648 01e1 02       		.uleb128 0x2
 3649 01e2 18       		.uleb128 0x18
 3650 01e3 00       		.byte	0
 3651 01e4 00       		.byte	0
 3652 01e5 23       		.uleb128 0x23
 3653 01e6 34       		.uleb128 0x34
 3654 01e7 00       		.byte	0
 3655 01e8 03       		.uleb128 0x3
 3656 01e9 0E       		.uleb128 0xe
 3657 01ea 3A       		.uleb128 0x3a
 3658 01eb 0B       		.uleb128 0xb
 3659 01ec 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 116


 3660 01ed 0B       		.uleb128 0xb
 3661 01ee 49       		.uleb128 0x49
 3662 01ef 13       		.uleb128 0x13
 3663 01f0 3F       		.uleb128 0x3f
 3664 01f1 19       		.uleb128 0x19
 3665 01f2 3C       		.uleb128 0x3c
 3666 01f3 19       		.uleb128 0x19
 3667 01f4 00       		.byte	0
 3668 01f5 00       		.byte	0
 3669 01f6 24       		.uleb128 0x24
 3670 01f7 34       		.uleb128 0x34
 3671 01f8 00       		.byte	0
 3672 01f9 03       		.uleb128 0x3
 3673 01fa 0E       		.uleb128 0xe
 3674 01fb 3A       		.uleb128 0x3a
 3675 01fc 0B       		.uleb128 0xb
 3676 01fd 3B       		.uleb128 0x3b
 3677 01fe 0B       		.uleb128 0xb
 3678 01ff 49       		.uleb128 0x49
 3679 0200 13       		.uleb128 0x13
 3680 0201 3F       		.uleb128 0x3f
 3681 0202 19       		.uleb128 0x19
 3682 0203 02       		.uleb128 0x2
 3683 0204 18       		.uleb128 0x18
 3684 0205 00       		.byte	0
 3685 0206 00       		.byte	0
 3686 0207 25       		.uleb128 0x25
 3687 0208 2E       		.uleb128 0x2e
 3688 0209 01       		.byte	0x1
 3689 020a 3F       		.uleb128 0x3f
 3690 020b 19       		.uleb128 0x19
 3691 020c 03       		.uleb128 0x3
 3692 020d 0E       		.uleb128 0xe
 3693 020e 3A       		.uleb128 0x3a
 3694 020f 0B       		.uleb128 0xb
 3695 0210 3B       		.uleb128 0x3b
 3696 0211 0B       		.uleb128 0xb
 3697 0212 27       		.uleb128 0x27
 3698 0213 19       		.uleb128 0x19
 3699 0214 3C       		.uleb128 0x3c
 3700 0215 19       		.uleb128 0x19
 3701 0216 01       		.uleb128 0x1
 3702 0217 13       		.uleb128 0x13
 3703 0218 00       		.byte	0
 3704 0219 00       		.byte	0
 3705 021a 26       		.uleb128 0x26
 3706 021b 2E       		.uleb128 0x2e
 3707 021c 00       		.byte	0
 3708 021d 3F       		.uleb128 0x3f
 3709 021e 19       		.uleb128 0x19
 3710 021f 03       		.uleb128 0x3
 3711 0220 0E       		.uleb128 0xe
 3712 0221 3A       		.uleb128 0x3a
 3713 0222 0B       		.uleb128 0xb
 3714 0223 3B       		.uleb128 0x3b
 3715 0224 0B       		.uleb128 0xb
 3716 0225 27       		.uleb128 0x27
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 117


 3717 0226 19       		.uleb128 0x19
 3718 0227 49       		.uleb128 0x49
 3719 0228 13       		.uleb128 0x13
 3720 0229 3C       		.uleb128 0x3c
 3721 022a 19       		.uleb128 0x19
 3722 022b 00       		.byte	0
 3723 022c 00       		.byte	0
 3724 022d 27       		.uleb128 0x27
 3725 022e 2E       		.uleb128 0x2e
 3726 022f 00       		.byte	0
 3727 0230 3F       		.uleb128 0x3f
 3728 0231 19       		.uleb128 0x19
 3729 0232 03       		.uleb128 0x3
 3730 0233 0E       		.uleb128 0xe
 3731 0234 3A       		.uleb128 0x3a
 3732 0235 0B       		.uleb128 0xb
 3733 0236 3B       		.uleb128 0x3b
 3734 0237 0B       		.uleb128 0xb
 3735 0238 27       		.uleb128 0x27
 3736 0239 19       		.uleb128 0x19
 3737 023a 3C       		.uleb128 0x3c
 3738 023b 19       		.uleb128 0x19
 3739 023c 00       		.byte	0
 3740 023d 00       		.byte	0
 3741 023e 28       		.uleb128 0x28
 3742 023f 2E       		.uleb128 0x2e
 3743 0240 01       		.byte	0x1
 3744 0241 3F       		.uleb128 0x3f
 3745 0242 19       		.uleb128 0x19
 3746 0243 03       		.uleb128 0x3
 3747 0244 0E       		.uleb128 0xe
 3748 0245 3A       		.uleb128 0x3a
 3749 0246 0B       		.uleb128 0xb
 3750 0247 3B       		.uleb128 0x3b
 3751 0248 0B       		.uleb128 0xb
 3752 0249 27       		.uleb128 0x27
 3753 024a 19       		.uleb128 0x19
 3754 024b 49       		.uleb128 0x49
 3755 024c 13       		.uleb128 0x13
 3756 024d 3C       		.uleb128 0x3c
 3757 024e 19       		.uleb128 0x19
 3758 024f 01       		.uleb128 0x1
 3759 0250 13       		.uleb128 0x13
 3760 0251 00       		.byte	0
 3761 0252 00       		.byte	0
 3762 0253 29       		.uleb128 0x29
 3763 0254 2E       		.uleb128 0x2e
 3764 0255 01       		.byte	0x1
 3765 0256 3F       		.uleb128 0x3f
 3766 0257 19       		.uleb128 0x19
 3767 0258 03       		.uleb128 0x3
 3768 0259 0E       		.uleb128 0xe
 3769 025a 3A       		.uleb128 0x3a
 3770 025b 0B       		.uleb128 0xb
 3771 025c 3B       		.uleb128 0x3b
 3772 025d 0B       		.uleb128 0xb
 3773 025e 27       		.uleb128 0x27
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 118


 3774 025f 19       		.uleb128 0x19
 3775 0260 3C       		.uleb128 0x3c
 3776 0261 19       		.uleb128 0x19
 3777 0262 00       		.byte	0
 3778 0263 00       		.byte	0
 3779 0264 00       		.byte	0
 3780              		.section	.debug_loc,"",%progbits
 3781              	.Ldebug_loc0:
 3782              	.LLST0:
 3783 0000 00000000 		.4byte	.LVL0
 3784 0004 12000000 		.4byte	.LVL2
 3785 0008 0100     		.2byte	0x1
 3786 000a 50       		.byte	0x50
 3787 000b 12000000 		.4byte	.LVL2
 3788 000f 3C000000 		.4byte	.LFE35
 3789 0013 0400     		.2byte	0x4
 3790 0015 F3       		.byte	0xf3
 3791 0016 01       		.uleb128 0x1
 3792 0017 50       		.byte	0x50
 3793 0018 9F       		.byte	0x9f
 3794 0019 00000000 		.4byte	0
 3795 001d 00000000 		.4byte	0
 3796              	.LLST1:
 3797 0021 06000000 		.4byte	.LVL1
 3798 0025 1E000000 		.4byte	.LVL3
 3799 0029 0100     		.2byte	0x1
 3800 002b 53       		.byte	0x53
 3801 002c 00000000 		.4byte	0
 3802 0030 00000000 		.4byte	0
 3803              	.LLST2:
 3804 0034 00000000 		.4byte	.LVL4
 3805 0038 07000000 		.4byte	.LVL5-1
 3806 003c 0100     		.2byte	0x1
 3807 003e 50       		.byte	0x50
 3808 003f 07000000 		.4byte	.LVL5-1
 3809 0043 16000000 		.4byte	.LVL8
 3810 0047 0100     		.2byte	0x1
 3811 0049 54       		.byte	0x54
 3812 004a 16000000 		.4byte	.LVL8
 3813 004e 18000000 		.4byte	.LFE36
 3814 0052 0400     		.2byte	0x4
 3815 0054 F3       		.byte	0xf3
 3816 0055 01       		.uleb128 0x1
 3817 0056 50       		.byte	0x50
 3818 0057 9F       		.byte	0x9f
 3819 0058 00000000 		.4byte	0
 3820 005c 00000000 		.4byte	0
 3821              	.LLST3:
 3822 0060 02000000 		.4byte	.LVL9
 3823 0064 06000000 		.4byte	.LVL10
 3824 0068 0200     		.2byte	0x2
 3825 006a 30       		.byte	0x30
 3826 006b 9F       		.byte	0x9f
 3827 006c 06000000 		.4byte	.LVL10
 3828 0070 12000000 		.4byte	.LVL13
 3829 0074 0100     		.2byte	0x1
 3830 0076 54       		.byte	0x54
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 119


 3831 0077 00000000 		.4byte	0
 3832 007b 00000000 		.4byte	0
 3833              	.LLST4:
 3834 007f 12000000 		.4byte	.LVL16
 3835 0083 2A000000 		.4byte	.LVL21
 3836 0087 0100     		.2byte	0x1
 3837 0089 54       		.byte	0x54
 3838 008a 00000000 		.4byte	0
 3839 008e 00000000 		.4byte	0
 3840              	.LLST5:
 3841 0092 1A000000 		.4byte	.LVL17
 3842 0096 20000000 		.4byte	.LVL18
 3843 009a 0100     		.2byte	0x1
 3844 009c 50       		.byte	0x50
 3845 009d 00000000 		.4byte	0
 3846 00a1 00000000 		.4byte	0
 3847              	.LLST6:
 3848 00a5 00000000 		.4byte	.LVL22
 3849 00a9 02000000 		.4byte	.LVL23
 3850 00ad 0100     		.2byte	0x1
 3851 00af 50       		.byte	0x50
 3852 00b0 02000000 		.4byte	.LVL23
 3853 00b4 0C000000 		.4byte	.LFE43
 3854 00b8 0400     		.2byte	0x4
 3855 00ba F3       		.byte	0xf3
 3856 00bb 01       		.uleb128 0x1
 3857 00bc 50       		.byte	0x50
 3858 00bd 9F       		.byte	0x9f
 3859 00be 00000000 		.4byte	0
 3860 00c2 00000000 		.4byte	0
 3861              	.LLST7:
 3862 00c6 00000000 		.4byte	.LVL24
 3863 00ca 02000000 		.4byte	.LVL25
 3864 00ce 0100     		.2byte	0x1
 3865 00d0 50       		.byte	0x50
 3866 00d1 02000000 		.4byte	.LVL25
 3867 00d5 0C000000 		.4byte	.LFE44
 3868 00d9 0400     		.2byte	0x4
 3869 00db F3       		.byte	0xf3
 3870 00dc 01       		.uleb128 0x1
 3871 00dd 50       		.byte	0x50
 3872 00de 9F       		.byte	0x9f
 3873 00df 00000000 		.4byte	0
 3874 00e3 00000000 		.4byte	0
 3875              	.LLST8:
 3876 00e7 00000000 		.4byte	.LVL26
 3877 00eb 04000000 		.4byte	.LVL27
 3878 00ef 0100     		.2byte	0x1
 3879 00f1 50       		.byte	0x50
 3880 00f2 04000000 		.4byte	.LVL27
 3881 00f6 0C000000 		.4byte	.LFE45
 3882 00fa 0400     		.2byte	0x4
 3883 00fc F3       		.byte	0xf3
 3884 00fd 01       		.uleb128 0x1
 3885 00fe 50       		.byte	0x50
 3886 00ff 9F       		.byte	0x9f
 3887 0100 00000000 		.4byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 120


 3888 0104 00000000 		.4byte	0
 3889              	.LLST9:
 3890 0108 00000000 		.4byte	.LVL28
 3891 010c 04000000 		.4byte	.LVL29
 3892 0110 0100     		.2byte	0x1
 3893 0112 50       		.byte	0x50
 3894 0113 04000000 		.4byte	.LVL29
 3895 0117 0C000000 		.4byte	.LFE46
 3896 011b 0400     		.2byte	0x4
 3897 011d F3       		.byte	0xf3
 3898 011e 01       		.uleb128 0x1
 3899 011f 50       		.byte	0x50
 3900 0120 9F       		.byte	0x9f
 3901 0121 00000000 		.4byte	0
 3902 0125 00000000 		.4byte	0
 3903              	.LLST10:
 3904 0129 00000000 		.4byte	.LVL30
 3905 012d 04000000 		.4byte	.LVL31
 3906 0131 0100     		.2byte	0x1
 3907 0133 50       		.byte	0x50
 3908 0134 04000000 		.4byte	.LVL31
 3909 0138 0C000000 		.4byte	.LFE47
 3910 013c 0400     		.2byte	0x4
 3911 013e F3       		.byte	0xf3
 3912 013f 01       		.uleb128 0x1
 3913 0140 50       		.byte	0x50
 3914 0141 9F       		.byte	0x9f
 3915 0142 00000000 		.4byte	0
 3916 0146 00000000 		.4byte	0
 3917              	.LLST11:
 3918 014a 00000000 		.4byte	.LVL32
 3919 014e 04000000 		.4byte	.LVL33
 3920 0152 0100     		.2byte	0x1
 3921 0154 50       		.byte	0x50
 3922 0155 04000000 		.4byte	.LVL33
 3923 0159 0C000000 		.4byte	.LFE48
 3924 015d 0400     		.2byte	0x4
 3925 015f F3       		.byte	0xf3
 3926 0160 01       		.uleb128 0x1
 3927 0161 50       		.byte	0x50
 3928 0162 9F       		.byte	0x9f
 3929 0163 00000000 		.4byte	0
 3930 0167 00000000 		.4byte	0
 3931              	.LLST12:
 3932 016b 00000000 		.4byte	.LVL34
 3933 016f 04000000 		.4byte	.LVL35
 3934 0173 0100     		.2byte	0x1
 3935 0175 50       		.byte	0x50
 3936 0176 04000000 		.4byte	.LVL35
 3937 017a 0C000000 		.4byte	.LFE49
 3938 017e 0400     		.2byte	0x4
 3939 0180 F3       		.byte	0xf3
 3940 0181 01       		.uleb128 0x1
 3941 0182 50       		.byte	0x50
 3942 0183 9F       		.byte	0x9f
 3943 0184 00000000 		.4byte	0
 3944 0188 00000000 		.4byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 121


 3945              	.LLST13:
 3946 018c 00000000 		.4byte	.LVL36
 3947 0190 04000000 		.4byte	.LVL37
 3948 0194 0100     		.2byte	0x1
 3949 0196 50       		.byte	0x50
 3950 0197 04000000 		.4byte	.LVL37
 3951 019b 0C000000 		.4byte	.LFE50
 3952 019f 0400     		.2byte	0x4
 3953 01a1 F3       		.byte	0xf3
 3954 01a2 01       		.uleb128 0x1
 3955 01a3 50       		.byte	0x50
 3956 01a4 9F       		.byte	0x9f
 3957 01a5 00000000 		.4byte	0
 3958 01a9 00000000 		.4byte	0
 3959              	.LLST14:
 3960 01ad 00000000 		.4byte	.LVL43
 3961 01b1 04000000 		.4byte	.LVL44
 3962 01b5 0100     		.2byte	0x1
 3963 01b7 50       		.byte	0x50
 3964 01b8 04000000 		.4byte	.LVL44
 3965 01bc 0C000000 		.4byte	.LFE56
 3966 01c0 0400     		.2byte	0x4
 3967 01c2 F3       		.byte	0xf3
 3968 01c3 01       		.uleb128 0x1
 3969 01c4 50       		.byte	0x50
 3970 01c5 9F       		.byte	0x9f
 3971 01c6 00000000 		.4byte	0
 3972 01ca 00000000 		.4byte	0
 3973              	.LLST15:
 3974 01ce 00000000 		.4byte	.LVL45
 3975 01d2 1C000000 		.4byte	.LVL49
 3976 01d6 0100     		.2byte	0x1
 3977 01d8 50       		.byte	0x50
 3978 01d9 1C000000 		.4byte	.LVL49
 3979 01dd 8C000000 		.4byte	.LVL57
 3980 01e1 0100     		.2byte	0x1
 3981 01e3 54       		.byte	0x54
 3982 01e4 8C000000 		.4byte	.LVL57
 3983 01e8 A8000000 		.4byte	.LFE57
 3984 01ec 0400     		.2byte	0x4
 3985 01ee F3       		.byte	0xf3
 3986 01ef 01       		.uleb128 0x1
 3987 01f0 50       		.byte	0x50
 3988 01f1 9F       		.byte	0x9f
 3989 01f2 00000000 		.4byte	0
 3990 01f6 00000000 		.4byte	0
 3991              	.LLST16:
 3992 01fa 1A000000 		.4byte	.LVL48
 3993 01fe 8C000000 		.4byte	.LVL59
 3994 0202 0100     		.2byte	0x1
 3995 0204 58       		.byte	0x58
 3996 0205 00000000 		.4byte	0
 3997 0209 00000000 		.4byte	0
 3998              	.LLST17:
 3999 020d 10000000 		.4byte	.LVL46
 4000 0211 8C000000 		.4byte	.LVL58
 4001 0215 0100     		.2byte	0x1
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 122


 4002 0217 57       		.byte	0x57
 4003 0218 00000000 		.4byte	0
 4004 021c 00000000 		.4byte	0
 4005              	.LLST18:
 4006 0220 14000000 		.4byte	.LVL47
 4007 0224 30000000 		.4byte	.LVL51
 4008 0228 0100     		.2byte	0x1
 4009 022a 56       		.byte	0x56
 4010 022b 4A000000 		.4byte	.LVL53
 4011 022f 52000000 		.4byte	.LVL54
 4012 0233 0100     		.2byte	0x1
 4013 0235 56       		.byte	0x56
 4014 0236 00000000 		.4byte	0
 4015 023a 00000000 		.4byte	0
 4016              	.LLST19:
 4017 023e 00000000 		.4byte	.LVL60
 4018 0242 08000000 		.4byte	.LVL62
 4019 0246 0100     		.2byte	0x1
 4020 0248 50       		.byte	0x50
 4021 0249 08000000 		.4byte	.LVL62
 4022 024d 28000000 		.4byte	.LFE58
 4023 0251 0400     		.2byte	0x4
 4024 0253 F3       		.byte	0xf3
 4025 0254 01       		.uleb128 0x1
 4026 0255 50       		.byte	0x50
 4027 0256 9F       		.byte	0x9f
 4028 0257 00000000 		.4byte	0
 4029 025b 00000000 		.4byte	0
 4030              	.LLST20:
 4031 025f 06000000 		.4byte	.LVL61
 4032 0263 22000000 		.4byte	.LVL68
 4033 0267 0100     		.2byte	0x1
 4034 0269 54       		.byte	0x54
 4035 026a 00000000 		.4byte	0
 4036 026e 00000000 		.4byte	0
 4037              	.LLST21:
 4038 0272 0C000000 		.4byte	.LVL63
 4039 0276 22000000 		.4byte	.LVL69
 4040 027a 0100     		.2byte	0x1
 4041 027c 55       		.byte	0x55
 4042 027d 22000000 		.4byte	.LVL69
 4043 0281 28000000 		.4byte	.LFE58
 4044 0285 1E00     		.2byte	0x1e
 4045 0287 F3       		.byte	0xf3
 4046 0288 01       		.uleb128 0x1
 4047 0289 50       		.byte	0x50
 4048 028a 03       		.byte	0x3
 4049 028b 04000000 		.4byte	.LANCHOR2+4
 4050 028f 22       		.byte	0x22
 4051 0290 94       		.byte	0x94
 4052 0291 01       		.byte	0x1
 4053 0292 08       		.byte	0x8
 4054 0293 FF       		.byte	0xff
 4055 0294 1A       		.byte	0x1a
 4056 0295 F3       		.byte	0xf3
 4057 0296 01       		.uleb128 0x1
 4058 0297 50       		.byte	0x50
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 123


 4059 0298 03       		.byte	0x3
 4060 0299 00000000 		.4byte	.LANCHOR2
 4061 029d 22       		.byte	0x22
 4062 029e 94       		.byte	0x94
 4063 029f 01       		.byte	0x1
 4064 02a0 08       		.byte	0x8
 4065 02a1 FF       		.byte	0xff
 4066 02a2 1A       		.byte	0x1a
 4067 02a3 22       		.byte	0x22
 4068 02a4 9F       		.byte	0x9f
 4069 02a5 00000000 		.4byte	0
 4070 02a9 00000000 		.4byte	0
 4071              	.LLST22:
 4072 02ad 0C000000 		.4byte	.LVL63
 4073 02b1 0E000000 		.4byte	.LVL64
 4074 02b5 0200     		.2byte	0x2
 4075 02b7 30       		.byte	0x30
 4076 02b8 9F       		.byte	0x9f
 4077 02b9 0E000000 		.4byte	.LVL64
 4078 02bd 22000000 		.4byte	.LVL70
 4079 02c1 0100     		.2byte	0x1
 4080 02c3 56       		.byte	0x56
 4081 02c4 22000000 		.4byte	.LVL70
 4082 02c8 28000000 		.4byte	.LFE58
 4083 02cc 0100     		.2byte	0x1
 4084 02ce 50       		.byte	0x50
 4085 02cf 00000000 		.4byte	0
 4086 02d3 00000000 		.4byte	0
 4087              	.LLST23:
 4088 02d7 02000000 		.4byte	.LVL71
 4089 02db 08000000 		.4byte	.LVL72
 4090 02df 0200     		.2byte	0x2
 4091 02e1 30       		.byte	0x30
 4092 02e2 9F       		.byte	0x9f
 4093 02e3 08000000 		.4byte	.LVL72
 4094 02e7 1C000000 		.4byte	.LVL76
 4095 02eb 0100     		.2byte	0x1
 4096 02ed 54       		.byte	0x54
 4097 02ee 00000000 		.4byte	0
 4098 02f2 00000000 		.4byte	0
 4099              	.LLST24:
 4100 02f6 02000000 		.4byte	.LVL71
 4101 02fa 08000000 		.4byte	.LVL72
 4102 02fe 0200     		.2byte	0x2
 4103 0300 30       		.byte	0x30
 4104 0301 9F       		.byte	0x9f
 4105 0302 08000000 		.4byte	.LVL72
 4106 0306 1C000000 		.4byte	.LVL77
 4107 030a 0100     		.2byte	0x1
 4108 030c 55       		.byte	0x55
 4109 030d 1C000000 		.4byte	.LVL77
 4110 0311 1E000000 		.4byte	.LFE59
 4111 0315 0100     		.2byte	0x1
 4112 0317 50       		.byte	0x50
 4113 0318 00000000 		.4byte	0
 4114 031c 00000000 		.4byte	0
 4115              	.LLST25:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 124


 4116 0320 00000000 		.4byte	.LVL78
 4117 0324 08000000 		.4byte	.LVL80
 4118 0328 0100     		.2byte	0x1
 4119 032a 50       		.byte	0x50
 4120 032b 08000000 		.4byte	.LVL80
 4121 032f 2C000000 		.4byte	.LFE60
 4122 0333 0400     		.2byte	0x4
 4123 0335 F3       		.byte	0xf3
 4124 0336 01       		.uleb128 0x1
 4125 0337 50       		.byte	0x50
 4126 0338 9F       		.byte	0x9f
 4127 0339 00000000 		.4byte	0
 4128 033d 00000000 		.4byte	0
 4129              	.LLST26:
 4130 0341 06000000 		.4byte	.LVL79
 4131 0345 1A000000 		.4byte	.LVL83
 4132 0349 0100     		.2byte	0x1
 4133 034b 54       		.byte	0x54
 4134 034c 1C000000 		.4byte	.LVL84
 4135 0350 20000000 		.4byte	.LVL85
 4136 0354 0100     		.2byte	0x1
 4137 0356 54       		.byte	0x54
 4138 0357 00000000 		.4byte	0
 4139 035b 00000000 		.4byte	0
 4140              	.LLST27:
 4141 035f 0E000000 		.4byte	.LVL81
 4142 0363 20000000 		.4byte	.LVL86
 4143 0367 0100     		.2byte	0x1
 4144 0369 55       		.byte	0x55
 4145 036a 20000000 		.4byte	.LVL86
 4146 036e 2C000000 		.4byte	.LFE60
 4147 0372 1E00     		.2byte	0x1e
 4148 0374 F3       		.byte	0xf3
 4149 0375 01       		.uleb128 0x1
 4150 0376 50       		.byte	0x50
 4151 0377 03       		.byte	0x3
 4152 0378 04000000 		.4byte	.LANCHOR2+4
 4153 037c 22       		.byte	0x22
 4154 037d 94       		.byte	0x94
 4155 037e 01       		.byte	0x1
 4156 037f 08       		.byte	0x8
 4157 0380 FF       		.byte	0xff
 4158 0381 1A       		.byte	0x1a
 4159 0382 F3       		.byte	0xf3
 4160 0383 01       		.uleb128 0x1
 4161 0384 50       		.byte	0x50
 4162 0385 03       		.byte	0x3
 4163 0386 00000000 		.4byte	.LANCHOR2
 4164 038a 22       		.byte	0x22
 4165 038b 94       		.byte	0x94
 4166 038c 01       		.byte	0x1
 4167 038d 08       		.byte	0x8
 4168 038e FF       		.byte	0xff
 4169 038f 1A       		.byte	0x1a
 4170 0390 22       		.byte	0x22
 4171 0391 9F       		.byte	0x9f
 4172 0392 00000000 		.4byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 125


 4173 0396 00000000 		.4byte	0
 4174              	.LLST28:
 4175 039a 00000000 		.4byte	.LVL87
 4176 039e 08000000 		.4byte	.LVL89
 4177 03a2 0100     		.2byte	0x1
 4178 03a4 50       		.byte	0x50
 4179 03a5 08000000 		.4byte	.LVL89
 4180 03a9 2C000000 		.4byte	.LFE61
 4181 03ad 0400     		.2byte	0x4
 4182 03af F3       		.byte	0xf3
 4183 03b0 01       		.uleb128 0x1
 4184 03b1 50       		.byte	0x50
 4185 03b2 9F       		.byte	0x9f
 4186 03b3 00000000 		.4byte	0
 4187 03b7 00000000 		.4byte	0
 4188              	.LLST29:
 4189 03bb 06000000 		.4byte	.LVL88
 4190 03bf 1A000000 		.4byte	.LVL92
 4191 03c3 0100     		.2byte	0x1
 4192 03c5 54       		.byte	0x54
 4193 03c6 1C000000 		.4byte	.LVL93
 4194 03ca 20000000 		.4byte	.LVL94
 4195 03ce 0100     		.2byte	0x1
 4196 03d0 54       		.byte	0x54
 4197 03d1 00000000 		.4byte	0
 4198 03d5 00000000 		.4byte	0
 4199              	.LLST30:
 4200 03d9 0E000000 		.4byte	.LVL90
 4201 03dd 20000000 		.4byte	.LVL95
 4202 03e1 0100     		.2byte	0x1
 4203 03e3 55       		.byte	0x55
 4204 03e4 20000000 		.4byte	.LVL95
 4205 03e8 2C000000 		.4byte	.LFE61
 4206 03ec 1E00     		.2byte	0x1e
 4207 03ee F3       		.byte	0xf3
 4208 03ef 01       		.uleb128 0x1
 4209 03f0 50       		.byte	0x50
 4210 03f1 03       		.byte	0x3
 4211 03f2 04000000 		.4byte	.LANCHOR2+4
 4212 03f6 22       		.byte	0x22
 4213 03f7 94       		.byte	0x94
 4214 03f8 01       		.byte	0x1
 4215 03f9 08       		.byte	0x8
 4216 03fa FF       		.byte	0xff
 4217 03fb 1A       		.byte	0x1a
 4218 03fc F3       		.byte	0xf3
 4219 03fd 01       		.uleb128 0x1
 4220 03fe 50       		.byte	0x50
 4221 03ff 03       		.byte	0x3
 4222 0400 00000000 		.4byte	.LANCHOR2
 4223 0404 22       		.byte	0x22
 4224 0405 94       		.byte	0x94
 4225 0406 01       		.byte	0x1
 4226 0407 08       		.byte	0x8
 4227 0408 FF       		.byte	0xff
 4228 0409 1A       		.byte	0x1a
 4229 040a 22       		.byte	0x22
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 126


 4230 040b 9F       		.byte	0x9f
 4231 040c 00000000 		.4byte	0
 4232 0410 00000000 		.4byte	0
 4233              	.LLST31:
 4234 0414 00000000 		.4byte	.LVL96
 4235 0418 08000000 		.4byte	.LVL97
 4236 041c 0100     		.2byte	0x1
 4237 041e 50       		.byte	0x50
 4238 041f 08000000 		.4byte	.LVL97
 4239 0423 0A000000 		.4byte	.LVL98
 4240 0427 0400     		.2byte	0x4
 4241 0429 F3       		.byte	0xf3
 4242 042a 01       		.uleb128 0x1
 4243 042b 50       		.byte	0x50
 4244 042c 9F       		.byte	0x9f
 4245 042d 0A000000 		.4byte	.LVL98
 4246 0431 1A000000 		.4byte	.LVL100
 4247 0435 0100     		.2byte	0x1
 4248 0437 50       		.byte	0x50
 4249 0438 00000000 		.4byte	0
 4250 043c 00000000 		.4byte	0
 4251              	.LLST32:
 4252 0440 00000000 		.4byte	.LVL96
 4253 0444 0A000000 		.4byte	.LVL98
 4254 0448 0100     		.2byte	0x1
 4255 044a 51       		.byte	0x51
 4256 044b 0A000000 		.4byte	.LVL98
 4257 044f 1C000000 		.4byte	.LFE62
 4258 0453 0100     		.2byte	0x1
 4259 0455 51       		.byte	0x51
 4260 0456 00000000 		.4byte	0
 4261 045a 00000000 		.4byte	0
 4262              	.LLST33:
 4263 045e 00000000 		.4byte	.LVL101
 4264 0462 06000000 		.4byte	.LVL104
 4265 0466 0100     		.2byte	0x1
 4266 0468 50       		.byte	0x50
 4267 0469 06000000 		.4byte	.LVL104
 4268 046d 0C000000 		.4byte	.LFE63
 4269 0471 0400     		.2byte	0x4
 4270 0473 F3       		.byte	0xf3
 4271 0474 01       		.uleb128 0x1
 4272 0475 50       		.byte	0x50
 4273 0476 9F       		.byte	0x9f
 4274 0477 00000000 		.4byte	0
 4275 047b 00000000 		.4byte	0
 4276              	.LLST34:
 4277 047f 00000000 		.4byte	.LVL101
 4278 0483 04000000 		.4byte	.LVL103
 4279 0487 0100     		.2byte	0x1
 4280 0489 51       		.byte	0x51
 4281 048a 04000000 		.4byte	.LVL103
 4282 048e 0C000000 		.4byte	.LFE63
 4283 0492 0400     		.2byte	0x4
 4284 0494 F3       		.byte	0xf3
 4285 0495 01       		.uleb128 0x1
 4286 0496 51       		.byte	0x51
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 127


 4287 0497 9F       		.byte	0x9f
 4288 0498 00000000 		.4byte	0
 4289 049c 00000000 		.4byte	0
 4290              	.LLST35:
 4291 04a0 02000000 		.4byte	.LVL102
 4292 04a4 06000000 		.4byte	.LVL104
 4293 04a8 0100     		.2byte	0x1
 4294 04aa 53       		.byte	0x53
 4295 04ab 06000000 		.4byte	.LVL104
 4296 04af 0A000000 		.4byte	.LVL106
 4297 04b3 0100     		.2byte	0x1
 4298 04b5 50       		.byte	0x50
 4299 04b6 0A000000 		.4byte	.LVL106
 4300 04ba 0C000000 		.4byte	.LFE63
 4301 04be 0800     		.2byte	0x8
 4302 04c0 71       		.byte	0x71
 4303 04c1 00       		.sleb128 0
 4304 04c2 73       		.byte	0x73
 4305 04c3 00       		.sleb128 0
 4306 04c4 22       		.byte	0x22
 4307 04c5 32       		.byte	0x32
 4308 04c6 25       		.byte	0x25
 4309 04c7 9F       		.byte	0x9f
 4310 04c8 00000000 		.4byte	0
 4311 04cc 00000000 		.4byte	0
 4312              	.LLST36:
 4313 04d0 00000000 		.4byte	.LVL107
 4314 04d4 2A000000 		.4byte	.LVL110
 4315 04d8 0100     		.2byte	0x1
 4316 04da 50       		.byte	0x50
 4317 04db 2A000000 		.4byte	.LVL110
 4318 04df DA000000 		.4byte	.LVL127
 4319 04e3 0100     		.2byte	0x1
 4320 04e5 54       		.byte	0x54
 4321 04e6 DA000000 		.4byte	.LVL127
 4322 04ea E0000000 		.4byte	.LVL128
 4323 04ee 0400     		.2byte	0x4
 4324 04f0 F3       		.byte	0xf3
 4325 04f1 01       		.uleb128 0x1
 4326 04f2 50       		.byte	0x50
 4327 04f3 9F       		.byte	0x9f
 4328 04f4 E0000000 		.4byte	.LVL128
 4329 04f8 E4000000 		.4byte	.LVL130
 4330 04fc 0100     		.2byte	0x1
 4331 04fe 54       		.byte	0x54
 4332 04ff E4000000 		.4byte	.LVL130
 4333 0503 E8000000 		.4byte	.LVL131
 4334 0507 0400     		.2byte	0x4
 4335 0509 F3       		.byte	0xf3
 4336 050a 01       		.uleb128 0x1
 4337 050b 50       		.byte	0x50
 4338 050c 9F       		.byte	0x9f
 4339 050d E8000000 		.4byte	.LVL131
 4340 0511 EC000000 		.4byte	.LVL132
 4341 0515 0100     		.2byte	0x1
 4342 0517 54       		.byte	0x54
 4343 0518 EC000000 		.4byte	.LVL132
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 128


 4344 051c 1C010000 		.4byte	.LFE39
 4345 0520 0400     		.2byte	0x4
 4346 0522 F3       		.byte	0xf3
 4347 0523 01       		.uleb128 0x1
 4348 0524 50       		.byte	0x50
 4349 0525 9F       		.byte	0x9f
 4350 0526 00000000 		.4byte	0
 4351 052a 00000000 		.4byte	0
 4352              	.LLST37:
 4353 052e AA000000 		.4byte	.LVL120
 4354 0532 B4000000 		.4byte	.LVL122
 4355 0536 0100     		.2byte	0x1
 4356 0538 53       		.byte	0x53
 4357 0539 B4000000 		.4byte	.LVL122
 4358 053d C4000000 		.4byte	.LVL124
 4359 0541 0100     		.2byte	0x1
 4360 0543 57       		.byte	0x57
 4361 0544 00000000 		.4byte	0
 4362 0548 00000000 		.4byte	0
 4363              	.LLST38:
 4364 054c 52000000 		.4byte	.LVL115
 4365 0550 58000000 		.4byte	.LVL116
 4366 0554 0200     		.2byte	0x2
 4367 0556 31       		.byte	0x31
 4368 0557 9F       		.byte	0x9f
 4369 0558 5C000000 		.4byte	.LVL117
 4370 055c 60000000 		.4byte	.LVL118
 4371 0560 0200     		.2byte	0x2
 4372 0562 30       		.byte	0x30
 4373 0563 9F       		.byte	0x9f
 4374 0564 60000000 		.4byte	.LVL118
 4375 0568 D2000000 		.4byte	.LVL125
 4376 056c 0100     		.2byte	0x1
 4377 056e 58       		.byte	0x58
 4378 056f D2000000 		.4byte	.LVL125
 4379 0573 D8000000 		.4byte	.LVL126
 4380 0577 0100     		.2byte	0x1
 4381 0579 53       		.byte	0x53
 4382 057a D8000000 		.4byte	.LVL126
 4383 057e E0000000 		.4byte	.LVL128
 4384 0582 0100     		.2byte	0x1
 4385 0584 58       		.byte	0x58
 4386 0585 E0000000 		.4byte	.LVL128
 4387 0589 E2000000 		.4byte	.LVL129
 4388 058d 0100     		.2byte	0x1
 4389 058f 53       		.byte	0x53
 4390 0590 E2000000 		.4byte	.LVL129
 4391 0594 F2000000 		.4byte	.LVL134
 4392 0598 0100     		.2byte	0x1
 4393 059a 58       		.byte	0x58
 4394 059b 00000000 		.4byte	0
 4395 059f 00000000 		.4byte	0
 4396              	.LLST39:
 4397 05a3 52000000 		.4byte	.LVL115
 4398 05a7 58000000 		.4byte	.LVL116
 4399 05ab 0100     		.2byte	0x1
 4400 05ad 55       		.byte	0x55
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 129


 4401 05ae 5C000000 		.4byte	.LVL117
 4402 05b2 F2000000 		.4byte	.LVL133
 4403 05b6 0100     		.2byte	0x1
 4404 05b8 55       		.byte	0x55
 4405 05b9 00000000 		.4byte	0
 4406 05bd 00000000 		.4byte	0
 4407              	.LLST40:
 4408 05c1 1A000000 		.4byte	.LVL109
 4409 05c5 30000000 		.4byte	.LVL112
 4410 05c9 0100     		.2byte	0x1
 4411 05cb 57       		.byte	0x57
 4412 05cc 30000000 		.4byte	.LVL112
 4413 05d0 34000000 		.4byte	.LVL113
 4414 05d4 0100     		.2byte	0x1
 4415 05d6 50       		.byte	0x50
 4416 05d7 34000000 		.4byte	.LVL113
 4417 05db B4000000 		.4byte	.LVL122
 4418 05df 0100     		.2byte	0x1
 4419 05e1 57       		.byte	0x57
 4420 05e2 00000000 		.4byte	0
 4421 05e6 00000000 		.4byte	0
 4422              	.LLST41:
 4423 05ea 00000000 		.4byte	.LVL135
 4424 05ee 07000000 		.4byte	.LVL136-1
 4425 05f2 0100     		.2byte	0x1
 4426 05f4 50       		.byte	0x50
 4427 05f5 07000000 		.4byte	.LVL136-1
 4428 05f9 0E000000 		.4byte	.LVL138
 4429 05fd 0100     		.2byte	0x1
 4430 05ff 54       		.byte	0x54
 4431 0600 0E000000 		.4byte	.LVL138
 4432 0604 10000000 		.4byte	.LFE40
 4433 0608 0400     		.2byte	0x4
 4434 060a F3       		.byte	0xf3
 4435 060b 01       		.uleb128 0x1
 4436 060c 50       		.byte	0x50
 4437 060d 9F       		.byte	0x9f
 4438 060e 00000000 		.4byte	0
 4439 0612 00000000 		.4byte	0
 4440              	.LLST42:
 4441 0616 02000000 		.4byte	.LVL139
 4442 061a 06000000 		.4byte	.LVL140
 4443 061e 0200     		.2byte	0x2
 4444 0620 30       		.byte	0x30
 4445 0621 9F       		.byte	0x9f
 4446 0622 06000000 		.4byte	.LVL140
 4447 0626 1E000000 		.4byte	.LVL145
 4448 062a 0100     		.2byte	0x1
 4449 062c 54       		.byte	0x54
 4450 062d 00000000 		.4byte	0
 4451 0631 00000000 		.4byte	0
 4452              	.LLST43:
 4453 0635 0E000000 		.4byte	.LVL141
 4454 0639 14000000 		.4byte	.LVL142
 4455 063d 0100     		.2byte	0x1
 4456 063f 50       		.byte	0x50
 4457 0640 00000000 		.4byte	0
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 130


 4458 0644 00000000 		.4byte	0
 4459              	.LLST44:
 4460 0648 00000000 		.4byte	.LVL146
 4461 064c 0E000000 		.4byte	.LVL150
 4462 0650 0100     		.2byte	0x1
 4463 0652 50       		.byte	0x50
 4464 0653 0E000000 		.4byte	.LVL150
 4465 0657 30000000 		.4byte	.LFE42
 4466 065b 0400     		.2byte	0x4
 4467 065d F3       		.byte	0xf3
 4468 065e 01       		.uleb128 0x1
 4469 065f 50       		.byte	0x50
 4470 0660 9F       		.byte	0x9f
 4471 0661 00000000 		.4byte	0
 4472 0665 00000000 		.4byte	0
 4473              	.LLST45:
 4474 0669 08000000 		.4byte	.LVL147
 4475 066d 0C000000 		.4byte	.LVL149
 4476 0671 0100     		.2byte	0x1
 4477 0673 55       		.byte	0x55
 4478 0674 0C000000 		.4byte	.LVL149
 4479 0678 0E000000 		.4byte	.LVL150
 4480 067c 0800     		.2byte	0x8
 4481 067e 72       		.byte	0x72
 4482 067f 04       		.sleb128 4
 4483 0680 94       		.byte	0x94
 4484 0681 01       		.byte	0x1
 4485 0682 08       		.byte	0x8
 4486 0683 FF       		.byte	0xff
 4487 0684 1A       		.byte	0x1a
 4488 0685 9F       		.byte	0x9f
 4489 0686 0E000000 		.4byte	.LVL150
 4490 068a 30000000 		.4byte	.LFE42
 4491 068e 0F00     		.2byte	0xf
 4492 0690 F3       		.byte	0xf3
 4493 0691 01       		.uleb128 0x1
 4494 0692 50       		.byte	0x50
 4495 0693 03       		.byte	0x3
 4496 0694 04000000 		.4byte	.LANCHOR2+4
 4497 0698 22       		.byte	0x22
 4498 0699 94       		.byte	0x94
 4499 069a 01       		.byte	0x1
 4500 069b 08       		.byte	0x8
 4501 069c FF       		.byte	0xff
 4502 069d 1A       		.byte	0x1a
 4503 069e 9F       		.byte	0x9f
 4504 069f 00000000 		.4byte	0
 4505 06a3 00000000 		.4byte	0
 4506              	.LLST46:
 4507 06a7 0A000000 		.4byte	.LVL148
 4508 06ab 0E000000 		.4byte	.LVL150
 4509 06af 0100     		.2byte	0x1
 4510 06b1 54       		.byte	0x54
 4511 06b2 0E000000 		.4byte	.LVL150
 4512 06b6 30000000 		.4byte	.LFE42
 4513 06ba 0F00     		.2byte	0xf
 4514 06bc F3       		.byte	0xf3
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 131


 4515 06bd 01       		.uleb128 0x1
 4516 06be 50       		.byte	0x50
 4517 06bf 03       		.byte	0x3
 4518 06c0 00000000 		.4byte	.LANCHOR2
 4519 06c4 22       		.byte	0x22
 4520 06c5 94       		.byte	0x94
 4521 06c6 01       		.byte	0x1
 4522 06c7 08       		.byte	0x8
 4523 06c8 FF       		.byte	0xff
 4524 06c9 1A       		.byte	0x1a
 4525 06ca 9F       		.byte	0x9f
 4526 06cb 00000000 		.4byte	0
 4527 06cf 00000000 		.4byte	0
 4528              	.LLST47:
 4529 06d3 0C000000 		.4byte	.LVL149
 4530 06d7 26000000 		.4byte	.LVL156
 4531 06db 0100     		.2byte	0x1
 4532 06dd 55       		.byte	0x55
 4533 06de 26000000 		.4byte	.LVL156
 4534 06e2 30000000 		.4byte	.LFE42
 4535 06e6 1E00     		.2byte	0x1e
 4536 06e8 F3       		.byte	0xf3
 4537 06e9 01       		.uleb128 0x1
 4538 06ea 50       		.byte	0x50
 4539 06eb 03       		.byte	0x3
 4540 06ec 04000000 		.4byte	.LANCHOR2+4
 4541 06f0 22       		.byte	0x22
 4542 06f1 94       		.byte	0x94
 4543 06f2 01       		.byte	0x1
 4544 06f3 08       		.byte	0x8
 4545 06f4 FF       		.byte	0xff
 4546 06f5 1A       		.byte	0x1a
 4547 06f6 F3       		.byte	0xf3
 4548 06f7 01       		.uleb128 0x1
 4549 06f8 50       		.byte	0x50
 4550 06f9 03       		.byte	0x3
 4551 06fa 00000000 		.4byte	.LANCHOR2
 4552 06fe 22       		.byte	0x22
 4553 06ff 94       		.byte	0x94
 4554 0700 01       		.byte	0x1
 4555 0701 08       		.byte	0x8
 4556 0702 FF       		.byte	0xff
 4557 0703 1A       		.byte	0x1a
 4558 0704 22       		.byte	0x22
 4559 0705 9F       		.byte	0x9f
 4560 0706 00000000 		.4byte	0
 4561 070a 00000000 		.4byte	0
 4562              	.LLST48:
 4563 070e 0C000000 		.4byte	.LVL149
 4564 0712 26000000 		.4byte	.LVL155
 4565 0716 0100     		.2byte	0x1
 4566 0718 54       		.byte	0x54
 4567 0719 00000000 		.4byte	0
 4568 071d 00000000 		.4byte	0
 4569              	.LLST49:
 4570 0721 16000000 		.4byte	.LVL151
 4571 0725 1C000000 		.4byte	.LVL152
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 132


 4572 0729 0100     		.2byte	0x1
 4573 072b 50       		.byte	0x50
 4574 072c 00000000 		.4byte	0
 4575 0730 00000000 		.4byte	0
 4576              	.LLST50:
 4577 0734 00000000 		.4byte	.LVL157
 4578 0738 04000000 		.4byte	.LVL158
 4579 073c 0100     		.2byte	0x1
 4580 073e 50       		.byte	0x50
 4581 073f 04000000 		.4byte	.LVL158
 4582 0743 0C000000 		.4byte	.LFE64
 4583 0747 0400     		.2byte	0x4
 4584 0749 F3       		.byte	0xf3
 4585 074a 01       		.uleb128 0x1
 4586 074b 50       		.byte	0x50
 4587 074c 9F       		.byte	0x9f
 4588 074d 00000000 		.4byte	0
 4589 0751 00000000 		.4byte	0
 4590              	.LLST51:
 4591 0755 00000000 		.4byte	.LVL159
 4592 0759 04000000 		.4byte	.LVL160
 4593 075d 0100     		.2byte	0x1
 4594 075f 50       		.byte	0x50
 4595 0760 04000000 		.4byte	.LVL160
 4596 0764 0C000000 		.4byte	.LFE65
 4597 0768 0400     		.2byte	0x4
 4598 076a F3       		.byte	0xf3
 4599 076b 01       		.uleb128 0x1
 4600 076c 50       		.byte	0x50
 4601 076d 9F       		.byte	0x9f
 4602 076e 00000000 		.4byte	0
 4603 0772 00000000 		.4byte	0
 4604              	.LLST52:
 4605 0776 00000000 		.4byte	.LVL161
 4606 077a 04000000 		.4byte	.LVL162
 4607 077e 0100     		.2byte	0x1
 4608 0780 50       		.byte	0x50
 4609 0781 04000000 		.4byte	.LVL162
 4610 0785 0C000000 		.4byte	.LFE66
 4611 0789 0400     		.2byte	0x4
 4612 078b F3       		.byte	0xf3
 4613 078c 01       		.uleb128 0x1
 4614 078d 50       		.byte	0x50
 4615 078e 9F       		.byte	0x9f
 4616 078f 00000000 		.4byte	0
 4617 0793 00000000 		.4byte	0
 4618              		.section	.debug_aranges,"",%progbits
 4619 0000 24010000 		.4byte	0x124
 4620 0004 0200     		.2byte	0x2
 4621 0006 00000000 		.4byte	.Ldebug_info0
 4622 000a 04       		.byte	0x4
 4623 000b 00       		.byte	0
 4624 000c 0000     		.2byte	0
 4625 000e 0000     		.2byte	0
 4626 0010 00000000 		.4byte	.LFB35
 4627 0014 3C000000 		.4byte	.LFE35-.LFB35
 4628 0018 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 133


 4629 001c 18000000 		.4byte	.LFE36-.LFB36
 4630 0020 00000000 		.4byte	.LFB37
 4631 0024 14000000 		.4byte	.LFE37-.LFB37
 4632 0028 00000000 		.4byte	.LFB38
 4633 002c 30000000 		.4byte	.LFE38-.LFB38
 4634 0030 00000000 		.4byte	.LFB43
 4635 0034 0C000000 		.4byte	.LFE43-.LFB43
 4636 0038 00000000 		.4byte	.LFB44
 4637 003c 0C000000 		.4byte	.LFE44-.LFB44
 4638 0040 00000000 		.4byte	.LFB45
 4639 0044 0C000000 		.4byte	.LFE45-.LFB45
 4640 0048 00000000 		.4byte	.LFB46
 4641 004c 0C000000 		.4byte	.LFE46-.LFB46
 4642 0050 00000000 		.4byte	.LFB47
 4643 0054 0C000000 		.4byte	.LFE47-.LFB47
 4644 0058 00000000 		.4byte	.LFB48
 4645 005c 0C000000 		.4byte	.LFE48-.LFB48
 4646 0060 00000000 		.4byte	.LFB49
 4647 0064 0C000000 		.4byte	.LFE49-.LFB49
 4648 0068 00000000 		.4byte	.LFB50
 4649 006c 0C000000 		.4byte	.LFE50-.LFB50
 4650 0070 00000000 		.4byte	.LFB51
 4651 0074 0C000000 		.4byte	.LFE51-.LFB51
 4652 0078 00000000 		.4byte	.LFB52
 4653 007c 0C000000 		.4byte	.LFE52-.LFB52
 4654 0080 00000000 		.4byte	.LFB53
 4655 0084 0C000000 		.4byte	.LFE53-.LFB53
 4656 0088 00000000 		.4byte	.LFB54
 4657 008c 0C000000 		.4byte	.LFE54-.LFB54
 4658 0090 00000000 		.4byte	.LFB55
 4659 0094 0C000000 		.4byte	.LFE55-.LFB55
 4660 0098 00000000 		.4byte	.LFB56
 4661 009c 0C000000 		.4byte	.LFE56-.LFB56
 4662 00a0 00000000 		.4byte	.LFB57
 4663 00a4 A8000000 		.4byte	.LFE57-.LFB57
 4664 00a8 00000000 		.4byte	.LFB58
 4665 00ac 28000000 		.4byte	.LFE58-.LFB58
 4666 00b0 00000000 		.4byte	.LFB59
 4667 00b4 1E000000 		.4byte	.LFE59-.LFB59
 4668 00b8 00000000 		.4byte	.LFB60
 4669 00bc 2C000000 		.4byte	.LFE60-.LFB60
 4670 00c0 00000000 		.4byte	.LFB61
 4671 00c4 2C000000 		.4byte	.LFE61-.LFB61
 4672 00c8 00000000 		.4byte	.LFB62
 4673 00cc 1C000000 		.4byte	.LFE62-.LFB62
 4674 00d0 00000000 		.4byte	.LFB63
 4675 00d4 0C000000 		.4byte	.LFE63-.LFB63
 4676 00d8 00000000 		.4byte	.LFB39
 4677 00dc 1C010000 		.4byte	.LFE39-.LFB39
 4678 00e0 00000000 		.4byte	.LFB40
 4679 00e4 10000000 		.4byte	.LFE40-.LFB40
 4680 00e8 00000000 		.4byte	.LFB41
 4681 00ec 24000000 		.4byte	.LFE41-.LFB41
 4682 00f0 00000000 		.4byte	.LFB42
 4683 00f4 30000000 		.4byte	.LFE42-.LFB42
 4684 00f8 00000000 		.4byte	.LFB64
 4685 00fc 0C000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 134


 4686 0100 00000000 		.4byte	.LFB65
 4687 0104 0C000000 		.4byte	.LFE65-.LFB65
 4688 0108 00000000 		.4byte	.LFB66
 4689 010c 0C000000 		.4byte	.LFE66-.LFB66
 4690 0110 00000000 		.4byte	.LFB67
 4691 0114 0C000000 		.4byte	.LFE67-.LFB67
 4692 0118 00000000 		.4byte	.LFB68
 4693 011c 0C000000 		.4byte	.LFE68-.LFB68
 4694 0120 00000000 		.4byte	0
 4695 0124 00000000 		.4byte	0
 4696              		.section	.debug_ranges,"",%progbits
 4697              	.Ldebug_ranges0:
 4698 0000 00000000 		.4byte	.LFB35
 4699 0004 3C000000 		.4byte	.LFE35
 4700 0008 00000000 		.4byte	.LFB36
 4701 000c 18000000 		.4byte	.LFE36
 4702 0010 00000000 		.4byte	.LFB37
 4703 0014 14000000 		.4byte	.LFE37
 4704 0018 00000000 		.4byte	.LFB38
 4705 001c 30000000 		.4byte	.LFE38
 4706 0020 00000000 		.4byte	.LFB43
 4707 0024 0C000000 		.4byte	.LFE43
 4708 0028 00000000 		.4byte	.LFB44
 4709 002c 0C000000 		.4byte	.LFE44
 4710 0030 00000000 		.4byte	.LFB45
 4711 0034 0C000000 		.4byte	.LFE45
 4712 0038 00000000 		.4byte	.LFB46
 4713 003c 0C000000 		.4byte	.LFE46
 4714 0040 00000000 		.4byte	.LFB47
 4715 0044 0C000000 		.4byte	.LFE47
 4716 0048 00000000 		.4byte	.LFB48
 4717 004c 0C000000 		.4byte	.LFE48
 4718 0050 00000000 		.4byte	.LFB49
 4719 0054 0C000000 		.4byte	.LFE49
 4720 0058 00000000 		.4byte	.LFB50
 4721 005c 0C000000 		.4byte	.LFE50
 4722 0060 00000000 		.4byte	.LFB51
 4723 0064 0C000000 		.4byte	.LFE51
 4724 0068 00000000 		.4byte	.LFB52
 4725 006c 0C000000 		.4byte	.LFE52
 4726 0070 00000000 		.4byte	.LFB53
 4727 0074 0C000000 		.4byte	.LFE53
 4728 0078 00000000 		.4byte	.LFB54
 4729 007c 0C000000 		.4byte	.LFE54
 4730 0080 00000000 		.4byte	.LFB55
 4731 0084 0C000000 		.4byte	.LFE55
 4732 0088 00000000 		.4byte	.LFB56
 4733 008c 0C000000 		.4byte	.LFE56
 4734 0090 00000000 		.4byte	.LFB57
 4735 0094 A8000000 		.4byte	.LFE57
 4736 0098 00000000 		.4byte	.LFB58
 4737 009c 28000000 		.4byte	.LFE58
 4738 00a0 00000000 		.4byte	.LFB59
 4739 00a4 1E000000 		.4byte	.LFE59
 4740 00a8 00000000 		.4byte	.LFB60
 4741 00ac 2C000000 		.4byte	.LFE60
 4742 00b0 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 135


 4743 00b4 2C000000 		.4byte	.LFE61
 4744 00b8 00000000 		.4byte	.LFB62
 4745 00bc 1C000000 		.4byte	.LFE62
 4746 00c0 00000000 		.4byte	.LFB63
 4747 00c4 0C000000 		.4byte	.LFE63
 4748 00c8 00000000 		.4byte	.LFB39
 4749 00cc 1C010000 		.4byte	.LFE39
 4750 00d0 00000000 		.4byte	.LFB40
 4751 00d4 10000000 		.4byte	.LFE40
 4752 00d8 00000000 		.4byte	.LFB41
 4753 00dc 24000000 		.4byte	.LFE41
 4754 00e0 00000000 		.4byte	.LFB42
 4755 00e4 30000000 		.4byte	.LFE42
 4756 00e8 00000000 		.4byte	.LFB64
 4757 00ec 0C000000 		.4byte	.LFE64
 4758 00f0 00000000 		.4byte	.LFB65
 4759 00f4 0C000000 		.4byte	.LFE65
 4760 00f8 00000000 		.4byte	.LFB66
 4761 00fc 0C000000 		.4byte	.LFE66
 4762 0100 00000000 		.4byte	.LFB67
 4763 0104 0C000000 		.4byte	.LFE67
 4764 0108 00000000 		.4byte	.LFB68
 4765 010c 0C000000 		.4byte	.LFE68
 4766 0110 00000000 		.4byte	0
 4767 0114 00000000 		.4byte	0
 4768              		.section	.debug_line,"",%progbits
 4769              	.Ldebug_line0:
 4770 0000 CD030000 		.section	.debug_str,"MS",%progbits,1
 4770      02006C00 
 4770      00000201 
 4770      FB0E0D00 
 4770      01010101 
 4771              	.LASF10:
 4772 0000 75696E74 		.ascii	"uint16\000"
 4772      313600
 4773              	.LASF79:
 4774 0007 66696C74 		.ascii	"filteredRawData\000"
 4774      65726564 
 4774      52617744 
 4774      61746100 
 4775              	.LASF86:
 4776 0017 6C617374 		.ascii	"lastSensor\000"
 4776      53656E73 
 4776      6F7200
 4777              	.LASF107:
 4778 0022 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4778      656E7365 
 4778      5F726177 
 4778      44617461 
 4778      496E6465 
 4779              	.LASF99:
 4780 0038 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4780      656E7365 
 4780      5F73656E 
 4780      736F724F 
 4780      6E4D6173 
 4781              	.LASF54:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 136


 4782 004e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4782      656E7365 
 4782      5F476574 
 4782      4E656761 
 4782      74697665 
 4783              	.LASF64:
 4784 0071 66696E67 		.ascii	"fingerThreshold\000"
 4784      65725468 
 4784      72657368 
 4784      6F6C6400 
 4785              	.LASF58:
 4786 0081 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4786      656E7365 
 4786      5F536574 
 4786      4E656761 
 4786      74697665 
 4787              	.LASF83:
 4788 00a4 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4788      656E7365 
 4788      5F557064 
 4788      61746557 
 4788      69646765 
 4789              	.LASF25:
 4790 00c2 70747247 		.ascii	"ptrGetRaw\000"
 4790      65745261 
 4790      7700
 4791              	.LASF89:
 4792 00cc 43617053 		.ascii	"CapSense_GetDebounce\000"
 4792      656E7365 
 4792      5F476574 
 4792      4465626F 
 4792      756E6365 
 4793              	.LASF73:
 4794 00e1 43617053 		.ascii	"CapSense_MedianFilter\000"
 4794      656E7365 
 4794      5F4D6564 
 4794      69616E46 
 4794      696C7465 
 4795              	.LASF7:
 4796 00f7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4796      206C6F6E 
 4796      6720756E 
 4796      7369676E 
 4796      65642069 
 4797              	.LASF98:
 4798 010e 43617053 		.ascii	"CapSense_sensorSignal\000"
 4798      656E7365 
 4798      5F73656E 
 4798      736F7253 
 4798      69676E61 
 4799              	.LASF52:
 4800 0124 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4800      656E7365 
 4800      5F476574 
 4800      4E6F6973 
 4800      65546872 
 4801              	.LASF43:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 137


 4802 013f 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4802      656E7365 
 4802      5F496E69 
 4802      7469616C 
 4802      697A6545 
 4803              	.LASF82:
 4804 0163 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4804      656E7365 
 4804      5F557064 
 4804      61746545 
 4804      6E61626C 
 4805              	.LASF6:
 4806 0183 6C6F6E67 		.ascii	"long long int\000"
 4806      206C6F6E 
 4806      6720696E 
 4806      7400
 4807              	.LASF0:
 4808 0191 7369676E 		.ascii	"signed char\000"
 4808      65642063 
 4808      68617200 
 4809              	.LASF72:
 4810 019d 43617053 		.ascii	"CapSense_DisableWidget\000"
 4810      656E7365 
 4810      5F446973 
 4810      61626C65 
 4810      57696467 
 4811              	.LASF67:
 4812 01b4 72617749 		.ascii	"rawIndex\000"
 4812      6E646578 
 4812      00
 4813              	.LASF24:
 4814 01bd 6E756D62 		.ascii	"numberOfSensors\000"
 4814      65724F66 
 4814      53656E73 
 4814      6F727300 
 4815              	.LASF21:
 4816 01cd 77696467 		.ascii	"widgetNubmersTbl\000"
 4816      65744E75 
 4816      626D6572 
 4816      7354626C 
 4816      00
 4817              	.LASF47:
 4818 01de 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4818      656E7365 
 4818      5F476574 
 4818      42617365 
 4818      6C696E65 
 4819              	.LASF69:
 4820 01f7 73746174 		.ascii	"state\000"
 4820      6500
 4821              	.LASF4:
 4822 01fd 6C6F6E67 		.ascii	"long int\000"
 4822      20696E74 
 4822      00
 4823              	.LASF70:
 4824 0206 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4824      656E7365 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 138


 4824      5F436865 
 4824      636B4973 
 4824      416E7957 
 4825              	.LASF9:
 4826 0226 75696E74 		.ascii	"uint8\000"
 4826      3800
 4827              	.LASF101:
 4828 022c 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4828      656E7365 
 4828      5F6C6F77 
 4828      42617365 
 4828      6C696E65 
 4829              	.LASF91:
 4830 0246 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4830      656E7365 
 4830      5F446973 
 4830      61626C65 
 4830      52617744 
 4831              	.LASF13:
 4832 0265 646F7562 		.ascii	"double\000"
 4832      6C6500
 4833              	.LASF95:
 4834 026c 43617053 		.ascii	"CapSense_widgetNumber\000"
 4834      656E7365 
 4834      5F776964 
 4834      6765744E 
 4834      756D6265 
 4835              	.LASF11:
 4836 0282 75696E74 		.ascii	"uint32\000"
 4836      333200
 4837              	.LASF65:
 4838 0289 68797374 		.ascii	"hysteresis\000"
 4838      65726573 
 4838      697300
 4839              	.LASF55:
 4840 0294 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4840      656E7365 
 4840      5F536574 
 4840      46696E67 
 4840      65725468 
 4841              	.LASF59:
 4842 02b0 43617053 		.ascii	"CapSense_SetDebounce\000"
 4842      656E7365 
 4842      5F536574 
 4842      4465626F 
 4842      756E6365 
 4843              	.LASF34:
 4844 02c5 73656E73 		.ascii	"sensetivitySeed\000"
 4844      65746976 
 4844      69747953 
 4844      65656400 
 4845              	.LASF33:
 4846 02d5 746F7461 		.ascii	"totalSensorsNum\000"
 4846      6C53656E 
 4846      736F7273 
 4846      4E756D00 
 4847              	.LASF50:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 139


 4848 02e5 76616C75 		.ascii	"value\000"
 4848      6500
 4849              	.LASF60:
 4850 02eb 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4850      656E7365 
 4850      5F536574 
 4850      4C6F7742 
 4850      6173656C 
 4851              	.LASF74:
 4852 0308 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4852      656E7365 
 4852      5F494952 
 4852      3446696C 
 4852      74657200 
 4853              	.LASF112:
 4854 031c 43617053 		.ascii	"CapSense_ScanSensor\000"
 4854      656E7365 
 4854      5F536361 
 4854      6E53656E 
 4854      736F7200 
 4855              	.LASF8:
 4856 0330 756E7369 		.ascii	"unsigned int\000"
 4856      676E6564 
 4856      20696E74 
 4856      00
 4857              	.LASF5:
 4858 033d 6C6F6E67 		.ascii	"long unsigned int\000"
 4858      20756E73 
 4858      69676E65 
 4858      6420696E 
 4858      7400
 4859              	.LASF97:
 4860 034f 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4860      656E7365 
 4860      5F73656E 
 4860      736F7242 
 4860      6173656C 
 4861              	.LASF22:
 4862 036a 7265736F 		.ascii	"resolutionsTbl\000"
 4862      6C757469 
 4862      6F6E7354 
 4862      626C00
 4863              	.LASF28:
 4864 0379 70747247 		.ascii	"ptrGetBitValue\000"
 4864      65744269 
 4864      7456616C 
 4864      756500
 4865              	.LASF106:
 4866 0388 43617053 		.ascii	"CapSense_debounce\000"
 4866      656E7365 
 4866      5F646562 
 4866      6F756E63 
 4866      6500
 4867              	.LASF46:
 4868 039a 64617461 		.ascii	"data\000"
 4868      00
 4869              	.LASF3:
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 140


 4870 039f 73686F72 		.ascii	"short unsigned int\000"
 4870      7420756E 
 4870      7369676E 
 4870      65642069 
 4870      6E7400
 4871              	.LASF18:
 4872 03b2 73656E73 		.ascii	"sensetivityTbl\000"
 4872      65746976 
 4872      69747954 
 4872      626C00
 4873              	.LASF117:
 4874 03c1 413A5C44 		.ascii	"A:\\Documents\\School\\ECEG-721_Embedded_Systems\\L"
 4874      6F63756D 
 4874      656E7473 
 4874      5C536368 
 4874      6F6F6C5C 
 4875 03f0 6162735C 		.ascii	"abs\\Lab7\\BLE Lab 1\\BLE Lab 1.cydsn\000"
 4875      4C616237 
 4875      5C424C45 
 4875      204C6162 
 4875      20315C42 
 4876              	.LASF94:
 4877 0413 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4877      656E7365 
 4877      5F73656E 
 4877      736F7245 
 4877      6E61626C 
 4878              	.LASF108:
 4879 042d 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4879      656E7365 
 4879      5F6E756D 
 4879      6265724F 
 4879      6653656E 
 4880              	.LASF81:
 4881 0446 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4881      656E7365 
 4881      5F557064 
 4881      61746553 
 4881      656E736F 
 4882              	.LASF76:
 4883 0464 63616C63 		.ascii	"calc\000"
 4883      00
 4884              	.LASF19:
 4885 0469 63686172 		.ascii	"chargeDivTbl\000"
 4885      67654469 
 4885      7654626C 
 4885      00
 4886              	.LASF118:
 4887 0476 43617053 		.ascii	"CapSense_IsBusy\000"
 4887      656E7365 
 4887      5F497342 
 4887      75737900 
 4888              	.LASF116:
 4889 0486 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4889      6E657261 
 4889      7465645F 
 4889      536F7572 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 141


 4889      63655C50 
 4890              	.LASF48:
 4891 04af 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4891      656E7365 
 4891      5F476574 
 4891      44696666 
 4891      436F756E 
 4892              	.LASF36:
 4893 04c9 706F696E 		.ascii	"pointers\000"
 4893      74657273 
 4893      00
 4894              	.LASF62:
 4895 04d2 6465626F 		.ascii	"debounce\000"
 4895      756E6365 
 4895      00
 4896              	.LASF35:
 4897 04db 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4897      6B467265 
 4897      715F4D48 
 4897      7A00
 4898              	.LASF15:
 4899 04e9 73697A65 		.ascii	"sizetype\000"
 4899      74797065 
 4899      00
 4900              	.LASF71:
 4901 04f2 43617053 		.ascii	"CapSense_EnableWidget\000"
 4901      656E7365 
 4901      5F456E61 
 4901      626C6557 
 4901      69646765 
 4902              	.LASF75:
 4903 0508 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4903      656E7365 
 4903      5F557064 
 4903      61746542 
 4903      6173656C 
 4904              	.LASF39:
 4905 052b 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4905      656E7365 
 4905      5F496E69 
 4905      7469616C 
 4905      697A6553 
 4906              	.LASF57:
 4907 054d 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4907      656E7365 
 4907      5F536574 
 4907      46696E67 
 4907      65724879 
 4908              	.LASF61:
 4909 056a 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4909      656E7365 
 4909      5F436865 
 4909      636B4973 
 4909      53656E73 
 4910              	.LASF16:
 4911 0587 69646163 		.ascii	"idac1LevelsTbl\000"
 4911      314C6576 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 142


 4911      656C7354 
 4911      626C00
 4912              	.LASF17:
 4913 0596 69646163 		.ascii	"idac2LevelsTbl\000"
 4913      324C6576 
 4913      656C7354 
 4913      626C00
 4914              	.LASF103:
 4915 05a5 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4915      656E7365 
 4915      5F6E6F69 
 4915      73655468 
 4915      72657368 
 4916              	.LASF115:
 4917 05bd 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4917      4320342E 
 4917      392E3320 
 4917      32303135 
 4917      30333033 
 4918 05f0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4918      20726576 
 4918      6973696F 
 4918      6E203232 
 4918      31323230 
 4919 0623 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4919      66756E63 
 4919      74696F6E 
 4919      2D736563 
 4919      74696F6E 
 4920              	.LASF102:
 4921 064b 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4921      656E7365 
 4921      5F66696E 
 4921      67657254 
 4921      68726573 
 4922              	.LASF113:
 4923 0664 43617053 		.ascii	"CapSense_SetBitValue\000"
 4923      656E7365 
 4923      5F536574 
 4923      42697456 
 4923      616C7565 
 4924              	.LASF109:
 4925 0679 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4925      656E7365 
 4925      5F726177 
 4925      46696C74 
 4925      65724461 
 4926              	.LASF110:
 4927 0691 43617053 		.ascii	"CapSense_config\000"
 4927      656E7365 
 4927      5F636F6E 
 4927      66696700 
 4928              	.LASF12:
 4929 06a1 666C6F61 		.ascii	"float\000"
 4929      7400
 4930              	.LASF88:
 4931 06a7 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 143


 4931      656E7365 
 4931      5F476574 
 4931      4C6F7742 
 4931      6173656C 
 4932              	.LASF66:
 4933 06c4 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4933      656E7365 
 4933      5F436865 
 4933      636B4973 
 4933      57696467 
 4934              	.LASF1:
 4935 06e1 756E7369 		.ascii	"unsigned char\000"
 4935      676E6564 
 4935      20636861 
 4935      7200
 4936              	.LASF41:
 4937 06ef 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4937      656E7365 
 4937      5F496E69 
 4937      7469616C 
 4937      697A6541 
 4938              	.LASF27:
 4939 070f 70747252 		.ascii	"ptrReadSensorRaw\000"
 4939      65616453 
 4939      656E736F 
 4939      72526177 
 4939      00
 4940              	.LASF45:
 4941 0720 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4941      656E7365 
 4941      5F536574 
 4941      42617365 
 4941      6C696E65 
 4942              	.LASF80:
 4943 0739 6E6F6973 		.ascii	"noiseThreshold\000"
 4943      65546872 
 4943      6573686F 
 4943      6C6400
 4944              	.LASF2:
 4945 0748 73686F72 		.ascii	"short int\000"
 4945      7420696E 
 4945      7400
 4946              	.LASF42:
 4947 0752 77696467 		.ascii	"widget\000"
 4947      657400
 4948              	.LASF20:
 4949 0759 6D6F6444 		.ascii	"modDivTbl\000"
 4949      69765462 
 4949      6C00
 4950              	.LASF44:
 4951 0763 69735365 		.ascii	"isSensorEnabled\000"
 4951      6E736F72 
 4951      456E6162 
 4951      6C656400 
 4952              	.LASF38:
 4953 0773 43617053 		.ascii	"CapSense_BaseInit\000"
 4953      656E7365 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 144


 4953      5F426173 
 4953      65496E69 
 4953      7400
 4954              	.LASF37:
 4955 0785 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_20\000"
 4955      656E7365 
 4955      5F434F4E 
 4955      4649475F 
 4955      54595045 
 4956              	.LASF84:
 4957 07a3 73656E73 		.ascii	"sensorsPerWidget\000"
 4957      6F727350 
 4957      65725769 
 4957      64676574 
 4957      00
 4958              	.LASF100:
 4959 07b4 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4959      656E7365 
 4959      5F6C6F77 
 4959      42617365 
 4959      6C696E65 
 4960              	.LASF56:
 4961 07d1 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4961      656E7365 
 4961      5F536574 
 4961      4E6F6973 
 4961      65546872 
 4962              	.LASF96:
 4963 07ec 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4963      656E7365 
 4963      5F73656E 
 4963      736F7242 
 4963      6173656C 
 4964              	.LASF105:
 4965 0804 43617053 		.ascii	"CapSense_hysteresis\000"
 4965      656E7365 
 4965      5F687973 
 4965      74657265 
 4965      73697300 
 4966              	.LASF14:
 4967 0818 63686172 		.ascii	"char\000"
 4967      00
 4968              	.LASF111:
 4969 081d 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4969      656E7365 
 4969      5F656E61 
 4969      626C6552 
 4969      61774669 
 4970              	.LASF53:
 4971 0837 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4971      656E7365 
 4971      5F476574 
 4971      46696E67 
 4971      65724879 
 4972              	.LASF85:
 4973 0854 66697273 		.ascii	"firstSensor\000"
 4973      7453656E 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 145


 4973      736F7200 
 4974              	.LASF63:
 4975 0860 6465626F 		.ascii	"debounceIndex\000"
 4975      756E6365 
 4975      496E6465 
 4975      7800
 4976              	.LASF51:
 4977 086e 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4977      656E7365 
 4977      5F476574 
 4977      46696E67 
 4977      65725468 
 4978              	.LASF26:
 4979 088a 70747250 		.ascii	"ptrPreScan\000"
 4979      72655363 
 4979      616E00
 4980              	.LASF30:
 4981 0895 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_20\000"
 4981      656E7365 
 4981      5F434F4E 
 4981      4649475F 
 4981      54595045 
 4982              	.LASF40:
 4983 08bc 73656E73 		.ascii	"sensor\000"
 4983      6F7200
 4984              	.LASF121:
 4985 08c3 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 4985      656E7365 
 4985      5F557064 
 4985      61746554 
 4985      68726573 
 4986              	.LASF77:
 4987 08dd 7369676E 		.ascii	"sign\000"
 4987      00
 4988              	.LASF68:
 4989 08e2 6E756D4F 		.ascii	"numOfSensors\000"
 4989      6653656E 
 4989      736F7273 
 4989      00
 4990              	.LASF31:
 4991 08ef 746F7461 		.ascii	"totalScanslotsNum\000"
 4991      6C536361 
 4991      6E736C6F 
 4991      74734E75 
 4991      6D00
 4992              	.LASF93:
 4993 0901 43617053 		.ascii	"CapSense_sensorRaw\000"
 4993      656E7365 
 4993      5F73656E 
 4993      736F7252 
 4993      617700
 4994              	.LASF49:
 4995 0914 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4995      656E7365 
 4995      5F536574 
 4995      44696666 
 4995      436F756E 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 146


 4996              	.LASF29:
 4997 092e 70747253 		.ascii	"ptrSetBitValue\000"
 4997      65744269 
 4997      7456616C 
 4997      756500
 4998              	.LASF120:
 4999 093d 43617053 		.ascii	"CapSense_GetBitValue\000"
 4999      656E7365 
 4999      5F476574 
 4999      42697456 
 4999      616C7565 
 5000              	.LASF87:
 5001 0952 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5001      656E7365 
 5001      5F476574 
 5001      57696467 
 5001      65744E75 
 5002              	.LASF119:
 5003 096b 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 5003      656E7365 
 5003      5F536361 
 5003      6E456E61 
 5003      626C6564 
 5004              	.LASF90:
 5005 0987 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5005      656E7365 
 5005      5F456E61 
 5005      626C6552 
 5005      61774461 
 5006              	.LASF92:
 5007 09a5 43617053 		.ascii	"CapSense_debounceCounter\000"
 5007      656E7365 
 5007      5F646562 
 5007      6F756E63 
 5007      65436F75 
 5008              	.LASF23:
 5009 09be 72617744 		.ascii	"rawDataIndex\000"
 5009      61746149 
 5009      6E646578 
 5009      00
 5010              	.LASF78:
 5011 09cb 74656D70 		.ascii	"tempRaw\000"
 5011      52617700 
 5012              	.LASF114:
 5013 09d3 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_20\000"
 5013      7572654E 
 5013      6F697365 
 5013      456E7665 
 5013      6C6F7065 
 5014              	.LASF32:
 5015 09f1 746F7461 		.ascii	"totalWidgetsNum\000"
 5015      6C576964 
 5015      67657473 
 5015      4E756D00 
 5016              	.LASF104:
 5017 0a01 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5017      656E7365 
ARM GAS  C:\Users\Luci\AppData\Local\Temp\ccR2NDBh.s 			page 147


 5017      5F6E6567 
 5017      61746976 
 5017      654E6F69 
 5018              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
