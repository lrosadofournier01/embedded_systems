ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 00000000 		.space	4
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB2:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.section	.text.ADC_Init,"ax",%progbits
  79              		.align	2
  80              		.global	ADC_Init
  81              		.code	16
  82              		.thumb_func
  83              		.type	ADC_Init, %function
  84              	ADC_Init:
  85              	.LFB3:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 4


  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  86              		.loc 1 95 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 84B0     		sub	sp, sp, #16
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 5


 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  98              		.loc 1 172 0
  99 0006 0321     		movs	r1, #3
 100 0008 0F20     		movs	r0, #15
 101 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 102              		.loc 1 173 0
 103 000e 564B     		ldr	r3, .L17
 104 0010 1900     		movs	r1, r3
 105 0012 0F20     		movs	r0, #15
 106 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 107              		.loc 1 177 0
 108 0018 544B     		ldr	r3, .L17+4
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 6


 109 001a 0122     		movs	r2, #1
 110 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 111              		.loc 1 180 0
 112 001e 544B     		ldr	r3, .L17+8
 113 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 178 0
 115 0022 002B     		cmp	r3, #0
 116 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 is_stmt 0 discriminator 1
 118 0026 5349     		ldr	r1, .L17+12
 119 0028 00E0     		b	.L7
 120              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 121              		.loc 1 178 0 discriminator 2
 122 002a 5349     		ldr	r1, .L17+16
 123              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 124              		.loc 1 178 0 discriminator 4
 125 002c 534B     		ldr	r3, .L17+20
 126 002e 534A     		ldr	r2, .L17+20
 127 0030 1268     		ldr	r2, [r2]
 128 0032 0A43     		orrs	r2, r1
 129 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 130              		.loc 1 182 0 is_stmt 1 discriminator 4
 131 0036 524B     		ldr	r3, .L17+24
 132 0038 524A     		ldr	r2, .L17+28
 133 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 134              		.loc 1 183 0 discriminator 4
 135 003c 524B     		ldr	r3, .L17+32
 136 003e 534A     		ldr	r2, .L17+36
 137 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 138              		.loc 1 184 0 discriminator 4
 139 0042 534B     		ldr	r3, .L17+40
 140 0044 0022     		movs	r2, #0
 141 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 142              		.loc 1 185 0 discriminator 4
 143 0048 524B     		ldr	r3, .L17+44
 144 004a 534A     		ldr	r2, .L17+48
 145 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 146              		.loc 1 186 0 discriminator 4
 147 004e 534B     		ldr	r3, .L17+52
 148 0050 514A     		ldr	r2, .L17+48
 149 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 7


 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 150              		.loc 1 190 0 discriminator 4
 151 0054 524B     		ldr	r3, .L17+56
 152 0056 524A     		ldr	r2, .L17+56
 153 0058 1268     		ldr	r2, [r2]
 154 005a 8021     		movs	r1, #128
 155 005c 4902     		lsls	r1, r1, #9
 156 005e 0A43     		orrs	r2, r1
 157 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 158              		.loc 1 197 0 discriminator 4
 159 0062 504B     		ldr	r3, .L17+60
 160 0064 0022     		movs	r2, #0
 161 0066 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 162              		.loc 1 198 0 discriminator 4
 163 0068 4F4B     		ldr	r3, .L17+64
 164 006a 0022     		movs	r2, #0
 165 006c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 166              		.loc 1 199 0 discriminator 4
 167 006e 4F4B     		ldr	r3, .L17+68
 168 0070 0122     		movs	r2, #1
 169 0072 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 170              		.loc 1 206 0 discriminator 4
 171 0074 4E4B     		ldr	r3, .L17+72
 172 0076 1B68     		ldr	r3, [r3]
 173 0078 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 174              		.loc 1 207 0 discriminator 4
 175 007a 7B68     		ldr	r3, [r7, #4]
 176 007c 4D4A     		ldr	r2, .L17+76
 177 007e 1340     		ands	r3, r2
 178 0080 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 8


 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 179              		.loc 1 220 0 discriminator 4
 180 0082 7B68     		ldr	r3, [r7, #4]
 181 0084 8022     		movs	r2, #128
 182 0086 9205     		lsls	r2, r2, #22
 183 0088 1343     		orrs	r3, r2
 184 008a 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 185              		.loc 1 221 0 discriminator 4
 186 008c 7B68     		ldr	r3, [r7, #4]
 187 008e 0122     		movs	r2, #1
 188 0090 9343     		bics	r3, r2
 189 0092 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 190              		.loc 1 226 0 discriminator 4
 191 0094 464B     		ldr	r3, .L17+72
 192 0096 7A68     		ldr	r2, [r7, #4]
 193 0098 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 194              		.loc 1 232 0 discriminator 4
 195 009a 0023     		movs	r3, #0
 196 009c FB60     		str	r3, [r7, #12]
 197 009e 5BE0     		b	.L8
 198              	.L16:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 199              		.loc 1 234 0
 200 00a0 0022     		movs	r2, #0
 201 00a2 DC23     		movs	r3, #220
 202 00a4 9B01     		lsls	r3, r3, #6
 203 00a6 1340     		ands	r3, r2
 204 00a8 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 9


 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 205              		.loc 1 253 0
 206 00aa FB68     		ldr	r3, [r7, #12]
 207 00ac 9B00     		lsls	r3, r3, #2
 208 00ae 424A     		ldr	r2, .L17+80
 209 00b0 9446     		mov	ip, r2
 210 00b2 6344     		add	r3, r3, ip
 211 00b4 7A68     		ldr	r2, [r7, #4]
 212 00b6 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 213              		.loc 1 255 0
 214 00b8 0022     		movs	r2, #0
 215 00ba 0123     		movs	r3, #1
 216 00bc 1340     		ands	r3, r2
 217 00be 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 218              		.loc 1 257 0
 219 00c0 384B     		ldr	r3, .L17+60
 220 00c2 384A     		ldr	r2, .L17+60
 221 00c4 1168     		ldr	r1, [r2]
 222 00c6 0120     		movs	r0, #1
 223 00c8 FA68     		ldr	r2, [r7, #12]
 224 00ca 9040     		lsls	r0, r0, r2
 225 00cc 0200     		movs	r2, r0
 226 00ce 1204     		lsls	r2, r2, #16
 227 00d0 120C     		lsrs	r2, r2, #16
 228 00d2 0A43     		orrs	r2, r1
 229 00d4 1A60     		str	r2, [r3]
 230              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 231              		.loc 1 260 0
 232 00d6 0022     		movs	r2, #0
 233 00d8 0223     		movs	r3, #2
 234 00da 1340     		ands	r3, r2
 235 00dc 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 236              		.loc 1 262 0
 237 00de 324B     		ldr	r3, .L17+64
 238 00e0 314A     		ldr	r2, .L17+64
 239 00e2 1168     		ldr	r1, [r2]
 240 00e4 0120     		movs	r0, #1
 241 00e6 FA68     		ldr	r2, [r7, #12]
 242 00e8 9040     		lsls	r0, r0, r2
 243 00ea 0200     		movs	r2, r0
 244 00ec 1204     		lsls	r2, r2, #16
 245 00ee 120C     		lsrs	r2, r2, #16
 246 00f0 0A43     		orrs	r2, r1
 247 00f2 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 10


 248              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 249              		.loc 1 282 0
 250 00f4 0022     		movs	r2, #0
 251 00f6 8023     		movs	r3, #128
 252 00f8 9B00     		lsls	r3, r3, #2
 253 00fa 1340     		ands	r3, r2
 254 00fc 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 255              		.loc 1 284 0
 256 00fe 8023     		movs	r3, #128
 257 0100 5B00     		lsls	r3, r3, #1
 258 0102 BB60     		str	r3, [r7, #8]
 259 0104 02E0     		b	.L12
 260              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 261              		.loc 1 288 0
 262 0106 8023     		movs	r3, #128
 263 0108 5B01     		lsls	r3, r3, #5
 264 010a BB60     		str	r3, [r7, #8]
 265              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 266              		.loc 1 291 0
 267 010c 0022     		movs	r2, #0
 268 010e 8023     		movs	r3, #128
 269 0110 5B00     		lsls	r3, r3, #1
 270 0112 1340     		ands	r3, r2
 271 0114 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 11


 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 272              		.loc 1 298 0
 273 0116 294B     		ldr	r3, .L17+84
 274 0118 FA68     		ldr	r2, [r7, #12]
 275 011a 5200     		lsls	r2, r2, #1
 276 011c 0021     		movs	r1, #0
 277 011e D152     		strh	r1, [r2, r3]
 278 0120 04E0     		b	.L14
 279              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 280              		.loc 1 307 0
 281 0122 264B     		ldr	r3, .L17+84
 282 0124 FA68     		ldr	r2, [r7, #12]
 283 0126 5200     		lsls	r2, r2, #1
 284 0128 0021     		movs	r1, #0
 285 012a D152     		strh	r1, [r2, r3]
 286              	.L14:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 287              		.loc 1 311 0 discriminator 2
 288 012c BB68     		ldr	r3, [r7, #8]
 289 012e 244A     		ldr	r2, .L17+88
 290 0130 5343     		muls	r3, r2
 291 0132 8022     		movs	r2, #128
 292 0134 D200     		lsls	r2, r2, #3
 293 0136 9446     		mov	ip, r2
 294 0138 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 295              		.loc 1 312 0 discriminator 2
 296 013a 002B     		cmp	r3, #0
 297 013c 02DA     		bge	.L15
 298 013e 214A     		ldr	r2, .L17+92
 299 0140 9446     		mov	ip, r2
 300 0142 6344     		add	r3, r3, ip
 301              	.L15:
 302 0144 DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 303              		.loc 1 311 0 discriminator 2
 304 0146 1BB2     		sxth	r3, r3
 305 0148 1900     		movs	r1, r3
 306 014a 1F4B     		ldr	r3, .L17+96
 307 014c FA68     		ldr	r2, [r7, #12]
 308 014e 9200     		lsls	r2, r2, #2
 309 0150 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 12


 310              		.loc 1 232 0 discriminator 2
 311 0152 FB68     		ldr	r3, [r7, #12]
 312 0154 0133     		adds	r3, r3, #1
 313 0156 FB60     		str	r3, [r7, #12]
 314              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
 315              		.loc 1 232 0 is_stmt 0 discriminator 1
 316 0158 FB68     		ldr	r3, [r7, #12]
 317 015a 002B     		cmp	r3, #0
 318 015c A0D0     		beq	.L16
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 319              		.loc 1 314 0 is_stmt 1
 320 015e C046     		nop
 321 0160 BD46     		mov	sp, r7
 322 0162 04B0     		add	sp, sp, #16
 323              		@ sp needed
 324 0164 80BD     		pop	{r7, pc}
 325              	.L18:
 326 0166 C046     		.align	2
 327              	.L17:
 328 0168 00000000 		.word	ADC_ISR
 329 016c 20003A40 		.word	1077542944
 330 0170 80033A40 		.word	1077543808
 331 0174 C0021051 		.word	1360003776
 332 0178 C0020051 		.word	1358955200
 333 017c 00003A40 		.word	1077542912
 334 0180 04003A40 		.word	1077542916
 335 0184 8C000A80 		.word	-2146828148
 336 0188 18003A40 		.word	1077542936
 337 018c 0000FF07 		.word	134152192
 338 0190 1C003A40 		.word	1077542940
 339 0194 10003A40 		.word	1077542928
 340 0198 04000400 		.word	262148
 341 019c 14003A40 		.word	1077542932
 342 01a0 00033A40 		.word	1077543680
 343 01a4 28023A40 		.word	1077543464
 344 01a8 38023A40 		.word	1077543480
 345 01ac 18023A40 		.word	1077543448
 346 01b0 30003A40 		.word	1077542960
 347 01b4 FFFFFFDF 		.word	-536870913
 348 01b8 80003A40 		.word	1077543040
 349 01bc 00000000 		.word	ADC_offset
 350 01c0 10270000 		.word	10000
 351 01c4 FF070000 		.word	2047
 352 01c8 00000000 		.word	ADC_countsPer10Volt
 353              		.cfi_endproc
 354              	.LFE3:
 355              		.size	ADC_Init, .-ADC_Init
 356              		.section	.text.ADC_Enable,"ax",%progbits
 357              		.align	2
 358              		.global	ADC_Enable
 359              		.code	16
 360              		.thumb_func
 361              		.type	ADC_Enable, %function
 362              	ADC_Enable:
 363              	.LFB4:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 13


 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 364              		.loc 1 331 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 372 0002 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 374              		.loc 1 332 0
 375 0004 0A4B     		ldr	r3, .L23
 376 0006 1B68     		ldr	r3, [r3]
 377 0008 002B     		cmp	r3, #0
 378 000a 0EDB     		blt	.L22
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 379              		.loc 1 336 0
 380 000c C046     		nop
 381              	.L21:
 382              		.loc 1 336 0 is_stmt 0 discriminator 1
 383 000e 094B     		ldr	r3, .L23+4
 384 0010 1B68     		ldr	r3, [r3]
 385 0012 002B     		cmp	r3, #0
 386 0014 FBDB     		blt	.L21
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 387              		.loc 1 342 0 is_stmt 1
 388 0016 064B     		ldr	r3, .L23
 389 0018 054A     		ldr	r2, .L23
 390 001a 1268     		ldr	r2, [r2]
 391 001c 8021     		movs	r1, #128
 392 001e 0906     		lsls	r1, r1, #24
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 14


 393 0020 0A43     		orrs	r2, r1
 394 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 395              		.loc 1 345 0
 396 0024 0A20     		movs	r0, #10
 397 0026 FFF7FEFF 		bl	CyDelayUs
 398              	.L22:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 399              		.loc 1 347 0
 400 002a C046     		nop
 401 002c BD46     		mov	sp, r7
 402              		@ sp needed
 403 002e 80BD     		pop	{r7, pc}
 404              	.L24:
 405              		.align	2
 406              	.L23:
 407 0030 00003A40 		.word	1077542912
 408 0034 08023A40 		.word	1077543432
 409              		.cfi_endproc
 410              	.LFE4:
 411              		.size	ADC_Enable, .-ADC_Enable
 412              		.section	.text.ADC_Stop,"ax",%progbits
 413              		.align	2
 414              		.global	ADC_Stop
 415              		.code	16
 416              		.thumb_func
 417              		.type	ADC_Stop, %function
 418              	ADC_Stop:
 419              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 420              		.loc 1 366 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 15


 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 00AF     		add	r7, sp, #0
 429              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 430              		.loc 1 367 0
 431 0004 044B     		ldr	r3, .L26
 432 0006 044A     		ldr	r2, .L26
 433 0008 1268     		ldr	r2, [r2]
 434 000a 5200     		lsls	r2, r2, #1
 435 000c 5208     		lsrs	r2, r2, #1
 436 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 437              		.loc 1 368 0
 438 0010 C046     		nop
 439 0012 BD46     		mov	sp, r7
 440              		@ sp needed
 441 0014 80BD     		pop	{r7, pc}
 442              	.L27:
 443 0016 C046     		.align	2
 444              	.L26:
 445 0018 00003A40 		.word	1077542912
 446              		.cfi_endproc
 447              	.LFE5:
 448              		.size	ADC_Stop, .-ADC_Stop
 449              		.section	.text.ADC_StartConvert,"ax",%progbits
 450              		.align	2
 451              		.global	ADC_StartConvert
 452              		.code	16
 453              		.thumb_func
 454              		.type	ADC_StartConvert, %function
 455              	ADC_StartConvert:
 456              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 16


 457              		.loc 1 392 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 467              		.loc 1 396 0
 468 0004 024B     		ldr	r3, .L29
 469 0006 0122     		movs	r2, #1
 470 0008 1A60     		str	r2, [r3]
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 471              		.loc 1 399 0
 472 000a C046     		nop
 473 000c BD46     		mov	sp, r7
 474              		@ sp needed
 475 000e 80BD     		pop	{r7, pc}
 476              	.L30:
 477              		.align	2
 478              	.L29:
 479 0010 24003A40 		.word	1077542948
 480              		.cfi_endproc
 481              	.LFE6:
 482              		.size	ADC_StartConvert, .-ADC_StartConvert
 483              		.section	.text.ADC_StopConvert,"ax",%progbits
 484              		.align	2
 485              		.global	ADC_StopConvert
 486              		.code	16
 487              		.thumb_func
 488              		.type	ADC_StopConvert, %function
 489              	ADC_StopConvert:
 490              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 17


 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 491              		.loc 1 417 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 501              		.loc 1 421 0
 502 0004 C046     		nop
 503 0006 BD46     		mov	sp, r7
 504              		@ sp needed
 505 0008 80BD     		pop	{r7, pc}
 506              		.cfi_endproc
 507              	.LFE7:
 508              		.size	ADC_StopConvert, .-ADC_StopConvert
 509              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 510              		.align	2
 511              		.global	ADC_IsEndConversion
 512              		.code	16
 513              		.thumb_func
 514              		.type	ADC_IsEndConversion, %function
 515              	ADC_IsEndConversion:
 516              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 18


 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 517              		.loc 1 451 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 16
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 84B0     		sub	sp, sp, #16
 526              		.cfi_def_cfa_offset 24
 527 0004 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 530              		.loc 1 452 0
 531 0008 0023     		movs	r3, #0
 532 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 533              		.loc 1 454 0
 534 000c 7B68     		ldr	r3, [r7, #4]
 535 000e 0322     		movs	r2, #3
 536 0010 1340     		ands	r3, r2
 537 0012 11D0     		beq	.L33
 538              	.L35:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 539              		.loc 1 458 0 discriminator 2
 540 0014 0B4B     		ldr	r3, .L37
 541 0016 1B68     		ldr	r3, [r3]
 542 0018 0122     		movs	r2, #1
 543 001a 1340     		ands	r3, r2
 544 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 545              		.loc 1 459 0 discriminator 2
 546 001e FB68     		ldr	r3, [r7, #12]
 547 0020 002B     		cmp	r3, #0
 548 0022 03D1     		bne	.L34
 549              		.loc 1 459 0 is_stmt 0 discriminator 1
 550 0024 7B68     		ldr	r3, [r7, #4]
 551 0026 0222     		movs	r2, #2
 552 0028 1340     		ands	r3, r2
 553 002a F3D1     		bne	.L35
 554              	.L34:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 555              		.loc 1 461 0 is_stmt 1
 556 002c FB68     		ldr	r3, [r7, #12]
 557 002e 002B     		cmp	r3, #0
 558 0030 02D0     		beq	.L33
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 19


 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 559              		.loc 1 464 0
 560 0032 044B     		ldr	r3, .L37
 561 0034 0122     		movs	r2, #1
 562 0036 1A60     		str	r2, [r3]
 563              	.L33:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 564              		.loc 1 485 0
 565 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 566              		.loc 1 486 0
 567 003a 1800     		movs	r0, r3
 568 003c BD46     		mov	sp, r7
 569 003e 04B0     		add	sp, sp, #16
 570              		@ sp needed
 571 0040 80BD     		pop	{r7, pc}
 572              	.L38:
 573 0042 C046     		.align	2
 574              	.L37:
 575 0044 10023A40 		.word	1077543440
 576              		.cfi_endproc
 577              	.LFE8:
 578              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 579              		.section	.text.ADC_GetResult16,"ax",%progbits
 580              		.align	2
 581              		.global	ADC_GetResult16
 582              		.code	16
 583              		.thumb_func
 584              		.type	ADC_GetResult16, %function
 585              	ADC_GetResult16:
 586              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 20


 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 587              		.loc 1 505 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 16
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591 0000 80B5     		push	{r7, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 84B0     		sub	sp, sp, #16
 596              		.cfi_def_cfa_offset 24
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 600              		.loc 1 509 0
 601 0008 7B68     		ldr	r3, [r7, #4]
 602 000a 002B     		cmp	r3, #0
 603 000c 02D0     		beq	.L40
 604              		.loc 1 509 0 is_stmt 0 discriminator 1
 605 000e 0020     		movs	r0, #0
 606 0010 FFF7FEFF 		bl	CyHalt
 607              	.L40:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 608              		.loc 1 511 0 is_stmt 1
 609 0014 7B68     		ldr	r3, [r7, #4]
 610 0016 002B     		cmp	r3, #0
 611 0018 09D1     		bne	.L41
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 612              		.loc 1 513 0
 613 001a 7B68     		ldr	r3, [r7, #4]
 614 001c 9B00     		lsls	r3, r3, #2
 615 001e 084A     		ldr	r2, .L44
 616 0020 9446     		mov	ip, r2
 617 0022 6344     		add	r3, r3, ip
 618 0024 1B68     		ldr	r3, [r3]
 619 0026 1B04     		lsls	r3, r3, #16
 620 0028 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 21


 621 002a FB60     		str	r3, [r7, #12]
 622 002c 01E0     		b	.L42
 623              	.L41:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 624              		.loc 1 521 0
 625 002e 0023     		movs	r3, #0
 626 0030 FB60     		str	r3, [r7, #12]
 627              	.L42:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 628              		.loc 1 525 0
 629 0032 FB68     		ldr	r3, [r7, #12]
 630 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 631              		.loc 1 526 0
 632 0036 1800     		movs	r0, r3
 633 0038 BD46     		mov	sp, r7
 634 003a 04B0     		add	sp, sp, #16
 635              		@ sp needed
 636 003c 80BD     		pop	{r7, pc}
 637              	.L45:
 638 003e C046     		.align	2
 639              	.L44:
 640 0040 80013A40 		.word	1077543296
 641              		.cfi_endproc
 642              	.LFE9:
 643              		.size	ADC_GetResult16, .-ADC_GetResult16
 644              		.section	.text.ADC_SetChanMask,"ax",%progbits
 645              		.align	2
 646              		.global	ADC_SetChanMask
 647              		.code	16
 648              		.thumb_func
 649              		.type	ADC_SetChanMask, %function
 650              	ADC_SetChanMask:
 651              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 22


 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 652              		.loc 1 550 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 8
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 80B5     		push	{r7, lr}
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 82B0     		sub	sp, sp, #8
 661              		.cfi_def_cfa_offset 16
 662 0004 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 664 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 665              		.loc 1 551 0
 666 0008 044B     		ldr	r3, .L47
 667 000a 7A68     		ldr	r2, [r7, #4]
 668 000c 0121     		movs	r1, #1
 669 000e 0A40     		ands	r2, r1
 670 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 671              		.loc 1 552 0
 672 0012 C046     		nop
 673 0014 BD46     		mov	sp, r7
 674 0016 02B0     		add	sp, sp, #8
 675              		@ sp needed
 676 0018 80BD     		pop	{r7, pc}
 677              	.L48:
 678 001a C046     		.align	2
 679              	.L47:
 680 001c 20003A40 		.word	1077542944
 681              		.cfi_endproc
 682              	.LFE10:
 683              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 684              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 685              		.align	2
 686              		.global	ADC_SetLowLimit
 687              		.code	16
 688              		.thumb_func
 689              		.type	ADC_SetLowLimit, %function
 690              	ADC_SetLowLimit:
 691              	.LFB11:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 23


 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 692              		.loc 1 594 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696 0000 80B5     		push	{r7, lr}
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 7, -8
 699              		.cfi_offset 14, -4
 700 0002 82B0     		sub	sp, sp, #8
 701              		.cfi_def_cfa_offset 16
 702 0004 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 704 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 705              		.loc 1 595 0
 706 0008 084B     		ldr	r3, .L50
 707 000a 084A     		ldr	r2, .L50
 708 000c 1268     		ldr	r2, [r2]
 709 000e 120C     		lsrs	r2, r2, #16
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 24


 710 0010 1204     		lsls	r2, r2, #16
 711 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 712              		.loc 1 596 0
 713 0014 054B     		ldr	r3, .L50
 714 0016 054A     		ldr	r2, .L50
 715 0018 1168     		ldr	r1, [r2]
 716 001a 7A68     		ldr	r2, [r7, #4]
 717 001c 1204     		lsls	r2, r2, #16
 718 001e 120C     		lsrs	r2, r2, #16
 719 0020 0A43     		orrs	r2, r1
 720 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 721              		.loc 1 597 0
 722 0024 C046     		nop
 723 0026 BD46     		mov	sp, r7
 724 0028 02B0     		add	sp, sp, #8
 725              		@ sp needed
 726 002a 80BD     		pop	{r7, pc}
 727              	.L51:
 728              		.align	2
 729              	.L50:
 730 002c 18003A40 		.word	1077542936
 731              		.cfi_endproc
 732              	.LFE11:
 733              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 734              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 735              		.align	2
 736              		.global	ADC_SetHighLimit
 737              		.code	16
 738              		.thumb_func
 739              		.type	ADC_SetHighLimit, %function
 740              	ADC_SetHighLimit:
 741              	.LFB12:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 742              		.loc 1 615 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 8
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 25


 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 82B0     		sub	sp, sp, #8
 751              		.cfi_def_cfa_offset 16
 752 0004 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 755              		.loc 1 616 0
 756 0008 084B     		ldr	r3, .L53
 757 000a 084A     		ldr	r2, .L53
 758 000c 1268     		ldr	r2, [r2]
 759 000e 1204     		lsls	r2, r2, #16
 760 0010 120C     		lsrs	r2, r2, #16
 761 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 762              		.loc 1 617 0
 763 0014 054B     		ldr	r3, .L53
 764 0016 054A     		ldr	r2, .L53
 765 0018 1168     		ldr	r1, [r2]
 766 001a 7A68     		ldr	r2, [r7, #4]
 767 001c 1204     		lsls	r2, r2, #16
 768 001e 0A43     		orrs	r2, r1
 769 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 770              		.loc 1 618 0
 771 0022 C046     		nop
 772 0024 BD46     		mov	sp, r7
 773 0026 02B0     		add	sp, sp, #8
 774              		@ sp needed
 775 0028 80BD     		pop	{r7, pc}
 776              	.L54:
 777 002a C046     		.align	2
 778              	.L53:
 779 002c 18003A40 		.word	1077542936
 780              		.cfi_endproc
 781              	.LFE12:
 782              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 783              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 784              		.align	2
 785              		.global	ADC_SetLimitMask
 786              		.code	16
 787              		.thumb_func
 788              		.type	ADC_SetLimitMask, %function
 789              	ADC_SetLimitMask:
 790              	.LFB13:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 26


 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 791              		.loc 1 639 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 82B0     		sub	sp, sp, #8
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 804              		.loc 1 640 0
 805 0008 044B     		ldr	r3, .L56
 806 000a 7A68     		ldr	r2, [r7, #4]
 807 000c 0121     		movs	r1, #1
 808 000e 0A40     		ands	r2, r1
 809 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 810              		.loc 1 641 0
 811 0012 C046     		nop
 812 0014 BD46     		mov	sp, r7
 813 0016 02B0     		add	sp, sp, #8
 814              		@ sp needed
 815 0018 80BD     		pop	{r7, pc}
 816              	.L57:
 817 001a C046     		.align	2
 818              	.L56:
 819 001c 38023A40 		.word	1077543480
 820              		.cfi_endproc
 821              	.LFE13:
 822              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 823              		.section	.text.ADC_SetSatMask,"ax",%progbits
 824              		.align	2
 825              		.global	ADC_SetSatMask
 826              		.code	16
 827              		.thumb_func
 828              		.type	ADC_SetSatMask, %function
 829              	ADC_SetSatMask:
 830              	.LFB14:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 27


 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 831              		.loc 1 662 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 8
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835 0000 80B5     		push	{r7, lr}
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 82B0     		sub	sp, sp, #8
 840              		.cfi_def_cfa_offset 16
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 844              		.loc 1 663 0
 845 0008 044B     		ldr	r3, .L59
 846 000a 7A68     		ldr	r2, [r7, #4]
 847 000c 0121     		movs	r1, #1
 848 000e 0A40     		ands	r2, r1
 849 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 850              		.loc 1 664 0
 851 0012 C046     		nop
 852 0014 BD46     		mov	sp, r7
 853 0016 02B0     		add	sp, sp, #8
 854              		@ sp needed
 855 0018 80BD     		pop	{r7, pc}
 856              	.L60:
 857 001a C046     		.align	2
 858              	.L59:
 859 001c 28023A40 		.word	1077543464
 860              		.cfi_endproc
 861              	.LFE14:
 862              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 863              		.section	.text.ADC_SetOffset,"ax",%progbits
 864              		.align	2
 865              		.global	ADC_SetOffset
 866              		.code	16
 867              		.thumb_func
 868              		.type	ADC_SetOffset, %function
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 28


 869              	ADC_SetOffset:
 870              	.LFB15:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 871              		.loc 1 690 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 8
 874              		@ frame_needed = 1, uses_anonymous_args = 0
 875 0000 80B5     		push	{r7, lr}
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 7, -8
 878              		.cfi_offset 14, -4
 879 0002 82B0     		sub	sp, sp, #8
 880              		.cfi_def_cfa_offset 16
 881 0004 00AF     		add	r7, sp, #0
 882              		.cfi_def_cfa_register 7
 883 0006 7860     		str	r0, [r7, #4]
 884 0008 0A00     		movs	r2, r1
 885 000a BB1C     		adds	r3, r7, #2
 886 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 887              		.loc 1 692 0
 888 000e 7B68     		ldr	r3, [r7, #4]
 889 0010 002B     		cmp	r3, #0
 890 0012 02D0     		beq	.L62
 891              		.loc 1 692 0 is_stmt 0 discriminator 1
 892 0014 0020     		movs	r0, #0
 893 0016 FFF7FEFF 		bl	CyHalt
 894              	.L62:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 895              		.loc 1 694 0 is_stmt 1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 29


 896 001a 054B     		ldr	r3, .L63
 897 001c 7A68     		ldr	r2, [r7, #4]
 898 001e 5200     		lsls	r2, r2, #1
 899 0020 B91C     		adds	r1, r7, #2
 900 0022 0988     		ldrh	r1, [r1]
 901 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 902              		.loc 1 695 0
 903 0026 C046     		nop
 904 0028 BD46     		mov	sp, r7
 905 002a 02B0     		add	sp, sp, #8
 906              		@ sp needed
 907 002c 80BD     		pop	{r7, pc}
 908              	.L64:
 909 002e C046     		.align	2
 910              	.L63:
 911 0030 00000000 		.word	ADC_offset
 912              		.cfi_endproc
 913              	.LFE15:
 914              		.size	ADC_SetOffset, .-ADC_SetOffset
 915              		.section	.text.ADC_SetGain,"ax",%progbits
 916              		.align	2
 917              		.global	ADC_SetGain
 918              		.code	16
 919              		.thumb_func
 920              		.type	ADC_SetGain, %function
 921              	ADC_SetGain:
 922              	.LFB16:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 30


 923              		.loc 1 724 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 8
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 0000 80B5     		push	{r7, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 7, -8
 930              		.cfi_offset 14, -4
 931 0002 82B0     		sub	sp, sp, #8
 932              		.cfi_def_cfa_offset 16
 933 0004 00AF     		add	r7, sp, #0
 934              		.cfi_def_cfa_register 7
 935 0006 7860     		str	r0, [r7, #4]
 936 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 937              		.loc 1 726 0
 938 000a 7B68     		ldr	r3, [r7, #4]
 939 000c 002B     		cmp	r3, #0
 940 000e 02D0     		beq	.L66
 941              		.loc 1 726 0 is_stmt 0 discriminator 1
 942 0010 0020     		movs	r0, #0
 943 0012 FFF7FEFF 		bl	CyHalt
 944              	.L66:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 945              		.loc 1 728 0 is_stmt 1
 946 0016 044B     		ldr	r3, .L67
 947 0018 7A68     		ldr	r2, [r7, #4]
 948 001a 9200     		lsls	r2, r2, #2
 949 001c 3968     		ldr	r1, [r7]
 950 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 951              		.loc 1 729 0
 952 0020 C046     		nop
 953 0022 BD46     		mov	sp, r7
 954 0024 02B0     		add	sp, sp, #8
 955              		@ sp needed
 956 0026 80BD     		pop	{r7, pc}
 957              	.L68:
 958              		.align	2
 959              	.L67:
 960 0028 00000000 		.word	ADC_countsPer10Volt
 961              		.cfi_endproc
 962              	.LFE16:
 963              		.size	ADC_SetGain, .-ADC_SetGain
 964              		.global	__aeabi_idiv
 965              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 966              		.align	2
 967              		.global	ADC_CountsTo_mVolts
 968              		.code	16
 969              		.thumb_func
 970              		.type	ADC_CountsTo_mVolts, %function
 971              	ADC_CountsTo_mVolts:
 972              	.LFB17:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 31


 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 973              		.loc 1 757 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 16
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977 0000 80B5     		push	{r7, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 7, -8
 980              		.cfi_offset 14, -4
 981 0002 84B0     		sub	sp, sp, #16
 982              		.cfi_def_cfa_offset 24
 983 0004 00AF     		add	r7, sp, #0
 984              		.cfi_def_cfa_register 7
 985 0006 7860     		str	r0, [r7, #4]
 986 0008 0A00     		movs	r2, r1
 987 000a BB1C     		adds	r3, r7, #2
 988 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 989              		.loc 1 761 0
 990 000e 7B68     		ldr	r3, [r7, #4]
 991 0010 002B     		cmp	r3, #0
 992 0012 02D0     		beq	.L70
 993              		.loc 1 761 0 is_stmt 0 discriminator 1
 994 0014 0020     		movs	r0, #0
 995 0016 FFF7FEFF 		bl	CyHalt
 996              	.L70:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 32


 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 997              		.loc 1 772 0 is_stmt 1
 998 001a 1E4B     		ldr	r3, .L76
 999 001c 7A68     		ldr	r2, [r7, #4]
 1000 001e 5200     		lsls	r2, r2, #1
 1001 0020 D35A     		ldrh	r3, [r2, r3]
 1002 0022 19B2     		sxth	r1, r3
 1003 0024 BB1C     		adds	r3, r7, #2
 1004 0026 1A88     		ldrh	r2, [r3]
 1005 0028 8BB2     		uxth	r3, r1
 1006 002a D31A     		subs	r3, r2, r3
 1007 002c 9AB2     		uxth	r2, r3
 1008 002e BB1C     		adds	r3, r7, #2
 1009 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1010              		.loc 1 774 0
 1011 0032 BB1C     		adds	r3, r7, #2
 1012 0034 0022     		movs	r2, #0
 1013 0036 9B5E     		ldrsh	r3, [r3, r2]
 1014 0038 174A     		ldr	r2, .L76+4
 1015 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1016              		.loc 1 775 0
 1017 003c BB1C     		adds	r3, r7, #2
 1018 003e 0021     		movs	r1, #0
 1019 0040 5B5E     		ldrsh	r3, [r3, r1]
 1020 0042 002B     		cmp	r3, #0
 1021 0044 08DD     		ble	.L71
 1022              		.loc 1 775 0 is_stmt 0 discriminator 1
 1023 0046 154B     		ldr	r3, .L76+8
 1024 0048 7968     		ldr	r1, [r7, #4]
 1025 004a 8900     		lsls	r1, r1, #2
 1026 004c CB58     		ldr	r3, [r1, r3]
 1027 004e 002B     		cmp	r3, #0
 1028 0050 00DA     		bge	.L72
 1029 0052 0133     		adds	r3, r3, #1
 1030              	.L72:
 1031 0054 5B10     		asrs	r3, r3, #1
 1032 0056 08E0     		b	.L73
 1033              	.L71:
 1034              		.loc 1 775 0 discriminator 2
 1035 0058 104B     		ldr	r3, .L76+8
 1036 005a 7968     		ldr	r1, [r7, #4]
 1037 005c 8900     		lsls	r1, r1, #2
 1038 005e CB58     		ldr	r3, [r1, r3]
 1039 0060 002B     		cmp	r3, #0
 1040 0062 00DA     		bge	.L74
 1041 0064 0133     		adds	r3, r3, #1
 1042              	.L74:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 33


 1043 0066 5B10     		asrs	r3, r3, #1
 1044 0068 5B42     		rsbs	r3, r3, #0
 1045              	.L73:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1046              		.loc 1 774 0 is_stmt 1
 1047 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1048              		.loc 1 776 0
 1049 006c 0B4B     		ldr	r3, .L76+8
 1050 006e 7A68     		ldr	r2, [r7, #4]
 1051 0070 9200     		lsls	r2, r2, #2
 1052 0072 D358     		ldr	r3, [r2, r3]
 1053 0074 1900     		movs	r1, r3
 1054 0076 FFF7FEFF 		bl	__aeabi_idiv
 1055 007a 0300     		movs	r3, r0
 1056 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1057              		.loc 1 774 0
 1058 007e 0E23     		movs	r3, #14
 1059 0080 FB18     		adds	r3, r7, r3
 1060 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1061              		.loc 1 778 0
 1062 0084 0E23     		movs	r3, #14
 1063 0086 FB18     		adds	r3, r7, r3
 1064 0088 0022     		movs	r2, #0
 1065 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1066              		.loc 1 779 0
 1067 008c 1800     		movs	r0, r3
 1068 008e BD46     		mov	sp, r7
 1069 0090 04B0     		add	sp, sp, #16
 1070              		@ sp needed
 1071 0092 80BD     		pop	{r7, pc}
 1072              	.L77:
 1073              		.align	2
 1074              	.L76:
 1075 0094 00000000 		.word	ADC_offset
 1076 0098 10270000 		.word	10000
 1077 009c 00000000 		.word	ADC_countsPer10Volt
 1078              		.cfi_endproc
 1079              	.LFE17:
 1080              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1081              		.global	__aeabi_lmul
 1082              		.global	__aeabi_ldivmod
 1083              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1084              		.align	2
 1085              		.global	ADC_CountsTo_uVolts
 1086              		.code	16
 1087              		.thumb_func
 1088              		.type	ADC_CountsTo_uVolts, %function
 1089              	ADC_CountsTo_uVolts:
 1090              	.LFB18:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 34


 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1091              		.loc 1 811 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 24
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 B0B5     		push	{r4, r5, r7, lr}
 1096              		.cfi_def_cfa_offset 16
 1097              		.cfi_offset 4, -16
 1098              		.cfi_offset 5, -12
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 0002 86B0     		sub	sp, sp, #24
 1102              		.cfi_def_cfa_offset 40
 1103 0004 00AF     		add	r7, sp, #0
 1104              		.cfi_def_cfa_register 7
 1105 0006 F860     		str	r0, [r7, #12]
 1106 0008 0A00     		movs	r2, r1
 1107 000a 0A23     		movs	r3, #10
 1108 000c FB18     		adds	r3, r7, r3
 1109 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1110              		.loc 1 815 0
 1111 0010 FB68     		ldr	r3, [r7, #12]
 1112 0012 002B     		cmp	r3, #0
 1113 0014 02D0     		beq	.L79
 1114              		.loc 1 815 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 35


 1115 0016 0020     		movs	r0, #0
 1116 0018 FFF7FEFF 		bl	CyHalt
 1117              	.L79:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1118              		.loc 1 826 0 is_stmt 1
 1119 001c 194B     		ldr	r3, .L81
 1120 001e FA68     		ldr	r2, [r7, #12]
 1121 0020 5200     		lsls	r2, r2, #1
 1122 0022 D35A     		ldrh	r3, [r2, r3]
 1123 0024 19B2     		sxth	r1, r3
 1124 0026 0A23     		movs	r3, #10
 1125 0028 FB18     		adds	r3, r7, r3
 1126 002a 1A88     		ldrh	r2, [r3]
 1127 002c 8BB2     		uxth	r3, r1
 1128 002e D31A     		subs	r3, r2, r3
 1129 0030 9AB2     		uxth	r2, r3
 1130 0032 0A23     		movs	r3, #10
 1131 0034 FB18     		adds	r3, r7, r3
 1132 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1133              		.loc 1 828 0
 1134 0038 0A23     		movs	r3, #10
 1135 003a FB18     		adds	r3, r7, r3
 1136 003c 1B88     		ldrh	r3, [r3]
 1137 003e 1BB2     		sxth	r3, r3
 1138 0040 3B60     		str	r3, [r7]
 1139 0042 DB17     		asrs	r3, r3, #31
 1140 0044 7B60     		str	r3, [r7, #4]
 1141 0046 104A     		ldr	r2, .L81+4
 1142 0048 0023     		movs	r3, #0
 1143 004a 3868     		ldr	r0, [r7]
 1144 004c 7968     		ldr	r1, [r7, #4]
 1145 004e FFF7FEFF 		bl	__aeabi_lmul
 1146 0052 0200     		movs	r2, r0
 1147 0054 0B00     		movs	r3, r1
 1148 0056 1000     		movs	r0, r2
 1149 0058 1900     		movs	r1, r3
 1150 005a 0C4B     		ldr	r3, .L81+8
 1151 005c FA68     		ldr	r2, [r7, #12]
 1152 005e 9200     		lsls	r2, r2, #2
 1153 0060 D358     		ldr	r3, [r2, r3]
 1154 0062 1C00     		movs	r4, r3
 1155 0064 DB17     		asrs	r3, r3, #31
 1156 0066 1D00     		movs	r5, r3
 1157 0068 2200     		movs	r2, r4
 1158 006a 2B00     		movs	r3, r5
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 36


 1159 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1160 0070 0300     		movs	r3, r0
 1161 0072 0C00     		movs	r4, r1
 1162 0074 3B61     		str	r3, [r7, #16]
 1163 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1164              		.loc 1 830 0
 1165 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1166              		.loc 1 831 0
 1167 007a 1800     		movs	r0, r3
 1168 007c BD46     		mov	sp, r7
 1169 007e 06B0     		add	sp, sp, #24
 1170              		@ sp needed
 1171 0080 B0BD     		pop	{r4, r5, r7, pc}
 1172              	.L82:
 1173 0082 C046     		.align	2
 1174              	.L81:
 1175 0084 00000000 		.word	ADC_offset
 1176 0088 80969800 		.word	10000000
 1177 008c 00000000 		.word	ADC_countsPer10Volt
 1178              		.cfi_endproc
 1179              	.LFE18:
 1180              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1181              		.global	__aeabi_i2f
 1182              		.global	__aeabi_fmul
 1183              		.global	__aeabi_fdiv
 1184              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1185              		.align	2
 1186              		.global	ADC_CountsTo_Volts
 1187              		.code	16
 1188              		.thumb_func
 1189              		.type	ADC_CountsTo_Volts, %function
 1190              	ADC_CountsTo_Volts:
 1191              	.LFB19:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 37


 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1192              		.loc 1 856 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 16
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196 0000 90B5     		push	{r4, r7, lr}
 1197              		.cfi_def_cfa_offset 12
 1198              		.cfi_offset 4, -12
 1199              		.cfi_offset 7, -8
 1200              		.cfi_offset 14, -4
 1201 0002 85B0     		sub	sp, sp, #20
 1202              		.cfi_def_cfa_offset 32
 1203 0004 00AF     		add	r7, sp, #0
 1204              		.cfi_def_cfa_register 7
 1205 0006 7860     		str	r0, [r7, #4]
 1206 0008 0A00     		movs	r2, r1
 1207 000a BB1C     		adds	r3, r7, #2
 1208 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1209              		.loc 1 860 0
 1210 000e 7B68     		ldr	r3, [r7, #4]
 1211 0010 002B     		cmp	r3, #0
 1212 0012 02D0     		beq	.L84
 1213              		.loc 1 860 0 is_stmt 0 discriminator 1
 1214 0014 0020     		movs	r0, #0
 1215 0016 FFF7FEFF 		bl	CyHalt
 1216              	.L84:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1217              		.loc 1 871 0 is_stmt 1
 1218 001a 164B     		ldr	r3, .L86
 1219 001c 7A68     		ldr	r2, [r7, #4]
 1220 001e 5200     		lsls	r2, r2, #1
 1221 0020 D35A     		ldrh	r3, [r2, r3]
 1222 0022 19B2     		sxth	r1, r3
 1223 0024 BB1C     		adds	r3, r7, #2
 1224 0026 1A88     		ldrh	r2, [r3]
 1225 0028 8BB2     		uxth	r3, r1
 1226 002a D31A     		subs	r3, r2, r3
 1227 002c 9AB2     		uxth	r2, r3
 1228 002e BB1C     		adds	r3, r7, #2
 1229 0030 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 38


 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1230              		.loc 1 873 0
 1231 0032 BB1C     		adds	r3, r7, #2
 1232 0034 0022     		movs	r2, #0
 1233 0036 9B5E     		ldrsh	r3, [r3, r2]
 1234 0038 1800     		movs	r0, r3
 1235 003a FFF7FEFF 		bl	__aeabi_i2f
 1236 003e 031C     		adds	r3, r0, #0
 1237 0040 0D49     		ldr	r1, .L86+4
 1238 0042 181C     		adds	r0, r3, #0
 1239 0044 FFF7FEFF 		bl	__aeabi_fmul
 1240 0048 031C     		adds	r3, r0, #0
 1241 004a 1C1C     		adds	r4, r3, #0
 1242 004c 0B4B     		ldr	r3, .L86+8
 1243 004e 7A68     		ldr	r2, [r7, #4]
 1244 0050 9200     		lsls	r2, r2, #2
 1245 0052 D358     		ldr	r3, [r2, r3]
 1246 0054 1800     		movs	r0, r3
 1247 0056 FFF7FEFF 		bl	__aeabi_i2f
 1248 005a 031C     		adds	r3, r0, #0
 1249 005c 191C     		adds	r1, r3, #0
 1250 005e 201C     		adds	r0, r4, #0
 1251 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1252 0064 031C     		adds	r3, r0, #0
 1253 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1254              		.loc 1 875 0
 1255 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1256              		.loc 1 876 0
 1257 006a 181C     		adds	r0, r3, #0
 1258 006c BD46     		mov	sp, r7
 1259 006e 05B0     		add	sp, sp, #20
 1260              		@ sp needed
 1261 0070 90BD     		pop	{r4, r7, pc}
 1262              	.L87:
 1263 0072 C046     		.align	2
 1264              	.L86:
 1265 0074 00000000 		.word	ADC_offset
 1266 0078 00002041 		.word	1092616192
 1267 007c 00000000 		.word	ADC_countsPer10Volt
 1268              		.cfi_endproc
 1269              	.LFE19:
 1270              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1271              		.text
 1272              	.Letext0:
 1273              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1274              		.section	.debug_info,"",%progbits
 1275              	.Ldebug_info0:
 1276 0000 8D040000 		.4byte	0x48d
 1277 0004 0400     		.2byte	0x4
 1278 0006 00000000 		.4byte	.Ldebug_abbrev0
 1279 000a 04       		.byte	0x4
 1280 000b 01       		.uleb128 0x1
 1281 000c 62010000 		.4byte	.LASF60
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 39


 1282 0010 0C       		.byte	0xc
 1283 0011 5E020000 		.4byte	.LASF61
 1284 0015 0A030000 		.4byte	.LASF62
 1285 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1286 001d 00000000 		.4byte	0
 1287 0021 00000000 		.4byte	.Ldebug_line0
 1288 0025 02       		.uleb128 0x2
 1289 0026 01       		.byte	0x1
 1290 0027 06       		.byte	0x6
 1291 0028 68000000 		.4byte	.LASF0
 1292 002c 02       		.uleb128 0x2
 1293 002d 01       		.byte	0x1
 1294 002e 08       		.byte	0x8
 1295 002f BB020000 		.4byte	.LASF1
 1296 0033 02       		.uleb128 0x2
 1297 0034 02       		.byte	0x2
 1298 0035 05       		.byte	0x5
 1299 0036 D4020000 		.4byte	.LASF2
 1300 003a 02       		.uleb128 0x2
 1301 003b 02       		.byte	0x2
 1302 003c 07       		.byte	0x7
 1303 003d 3F010000 		.4byte	.LASF3
 1304 0041 02       		.uleb128 0x2
 1305 0042 04       		.byte	0x4
 1306 0043 05       		.byte	0x5
 1307 0044 8B000000 		.4byte	.LASF4
 1308 0048 02       		.uleb128 0x2
 1309 0049 04       		.byte	0x4
 1310 004a 07       		.byte	0x7
 1311 004b 0E010000 		.4byte	.LASF5
 1312 004f 02       		.uleb128 0x2
 1313 0050 08       		.byte	0x8
 1314 0051 05       		.byte	0x5
 1315 0052 5A000000 		.4byte	.LASF6
 1316 0056 02       		.uleb128 0x2
 1317 0057 08       		.byte	0x8
 1318 0058 07       		.byte	0x7
 1319 0059 32000000 		.4byte	.LASF7
 1320 005d 03       		.uleb128 0x3
 1321 005e 04       		.byte	0x4
 1322 005f 05       		.byte	0x5
 1323 0060 696E7400 		.ascii	"int\000"
 1324 0064 02       		.uleb128 0x2
 1325 0065 04       		.byte	0x4
 1326 0066 07       		.byte	0x7
 1327 0067 FA000000 		.4byte	.LASF8
 1328 006b 04       		.uleb128 0x4
 1329 006c BC000000 		.4byte	.LASF9
 1330 0070 02       		.byte	0x2
 1331 0071 FB01     		.2byte	0x1fb
 1332 0073 2C000000 		.4byte	0x2c
 1333 0077 04       		.uleb128 0x4
 1334 0078 00000000 		.4byte	.LASF10
 1335 007c 02       		.byte	0x2
 1336 007d FC01     		.2byte	0x1fc
 1337 007f 3A000000 		.4byte	0x3a
 1338 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 40


 1339 0084 C9000000 		.4byte	.LASF11
 1340 0088 02       		.byte	0x2
 1341 0089 FD01     		.2byte	0x1fd
 1342 008b 48000000 		.4byte	0x48
 1343 008f 04       		.uleb128 0x4
 1344 0090 78030000 		.4byte	.LASF12
 1345 0094 02       		.byte	0x2
 1346 0095 FF01     		.2byte	0x1ff
 1347 0097 33000000 		.4byte	0x33
 1348 009b 04       		.uleb128 0x4
 1349 009c 7B000000 		.4byte	.LASF13
 1350 00a0 02       		.byte	0x2
 1351 00a1 0002     		.2byte	0x200
 1352 00a3 41000000 		.4byte	0x41
 1353 00a7 04       		.uleb128 0x4
 1354 00a8 FD010000 		.4byte	.LASF14
 1355 00ac 02       		.byte	0x2
 1356 00ad 0102     		.2byte	0x201
 1357 00af B3000000 		.4byte	0xb3
 1358 00b3 02       		.uleb128 0x2
 1359 00b4 04       		.byte	0x4
 1360 00b5 04       		.byte	0x4
 1361 00b6 87020000 		.4byte	.LASF15
 1362 00ba 02       		.uleb128 0x2
 1363 00bb 08       		.byte	0x8
 1364 00bc 04       		.byte	0x4
 1365 00bd C2000000 		.4byte	.LASF16
 1366 00c1 04       		.uleb128 0x4
 1367 00c2 48020000 		.4byte	.LASF17
 1368 00c6 02       		.byte	0x2
 1369 00c7 0602     		.2byte	0x206
 1370 00c9 4F000000 		.4byte	0x4f
 1371 00cd 02       		.uleb128 0x2
 1372 00ce 01       		.byte	0x1
 1373 00cf 08       		.byte	0x8
 1374 00d0 F2020000 		.4byte	.LASF18
 1375 00d4 04       		.uleb128 0x4
 1376 00d5 F7010000 		.4byte	.LASF19
 1377 00d9 02       		.byte	0x2
 1378 00da A702     		.2byte	0x2a7
 1379 00dc E0000000 		.4byte	0xe0
 1380 00e0 05       		.uleb128 0x5
 1381 00e1 83000000 		.4byte	0x83
 1382 00e5 02       		.uleb128 0x2
 1383 00e6 08       		.byte	0x8
 1384 00e7 04       		.byte	0x4
 1385 00e8 17020000 		.4byte	.LASF20
 1386 00ec 02       		.uleb128 0x2
 1387 00ed 04       		.byte	0x4
 1388 00ee 07       		.byte	0x7
 1389 00ef 05020000 		.4byte	.LASF21
 1390 00f3 06       		.uleb128 0x6
 1391 00f4 81000000 		.4byte	.LASF25
 1392 00f8 01       		.byte	0x1
 1393 00f9 3F       		.byte	0x3f
 1394 00fa 00000000 		.4byte	.LFB2
 1395 00fe 24000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 41


 1396 0102 01       		.uleb128 0x1
 1397 0103 9C       		.byte	0x9c
 1398 0104 07       		.uleb128 0x7
 1399 0105 29000000 		.4byte	.LASF36
 1400 0109 01       		.byte	0x1
 1401 010a 5E       		.byte	0x5e
 1402 010b 00000000 		.4byte	.LFB3
 1403 010f CC010000 		.4byte	.LFE3-.LFB3
 1404 0113 01       		.uleb128 0x1
 1405 0114 9C       		.byte	0x9c
 1406 0115 44010000 		.4byte	0x144
 1407 0119 08       		.uleb128 0x8
 1408 011a E7020000 		.4byte	.LASF22
 1409 011e 01       		.byte	0x1
 1410 011f 60       		.byte	0x60
 1411 0120 83000000 		.4byte	0x83
 1412 0124 02       		.uleb128 0x2
 1413 0125 91       		.byte	0x91
 1414 0126 74       		.sleb128 -12
 1415 0127 08       		.uleb128 0x8
 1416 0128 35010000 		.4byte	.LASF23
 1417 012c 01       		.byte	0x1
 1418 012d 61       		.byte	0x61
 1419 012e 83000000 		.4byte	0x83
 1420 0132 02       		.uleb128 0x2
 1421 0133 91       		.byte	0x91
 1422 0134 6C       		.sleb128 -20
 1423 0135 08       		.uleb128 0x8
 1424 0136 0F000000 		.4byte	.LASF24
 1425 013a 01       		.byte	0x1
 1426 013b 62       		.byte	0x62
 1427 013c 9B000000 		.4byte	0x9b
 1428 0140 02       		.uleb128 0x2
 1429 0141 91       		.byte	0x91
 1430 0142 70       		.sleb128 -16
 1431 0143 00       		.byte	0
 1432 0144 09       		.uleb128 0x9
 1433 0145 6D030000 		.4byte	.LASF26
 1434 0149 01       		.byte	0x1
 1435 014a 4A01     		.2byte	0x14a
 1436 014c 00000000 		.4byte	.LFB4
 1437 0150 38000000 		.4byte	.LFE4-.LFB4
 1438 0154 01       		.uleb128 0x1
 1439 0155 9C       		.byte	0x9c
 1440 0156 0A       		.uleb128 0xa
 1441 0157 DE020000 		.4byte	.LASF27
 1442 015b 01       		.byte	0x1
 1443 015c 6D01     		.2byte	0x16d
 1444 015e 00000000 		.4byte	.LFB5
 1445 0162 1C000000 		.4byte	.LFE5-.LFB5
 1446 0166 01       		.uleb128 0x1
 1447 0167 9C       		.byte	0x9c
 1448 0168 0A       		.uleb128 0xa
 1449 0169 49000000 		.4byte	.LASF28
 1450 016d 01       		.byte	0x1
 1451 016e 8701     		.2byte	0x187
 1452 0170 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 42


 1453 0174 14000000 		.4byte	.LFE6-.LFB6
 1454 0178 01       		.uleb128 0x1
 1455 0179 9C       		.byte	0x9c
 1456 017a 0A       		.uleb128 0xa
 1457 017b 52010000 		.4byte	.LASF29
 1458 017f 01       		.byte	0x1
 1459 0180 A001     		.2byte	0x1a0
 1460 0182 00000000 		.4byte	.LFB7
 1461 0186 0A000000 		.4byte	.LFE7-.LFB7
 1462 018a 01       		.uleb128 0x1
 1463 018b 9C       		.byte	0x9c
 1464 018c 0B       		.uleb128 0xb
 1465 018d 34020000 		.4byte	.LASF31
 1466 0191 01       		.byte	0x1
 1467 0192 C201     		.2byte	0x1c2
 1468 0194 83000000 		.4byte	0x83
 1469 0198 00000000 		.4byte	.LFB8
 1470 019c 48000000 		.4byte	.LFE8-.LFB8
 1471 01a0 01       		.uleb128 0x1
 1472 01a1 9C       		.byte	0x9c
 1473 01a2 C5010000 		.4byte	0x1c5
 1474 01a6 0C       		.uleb128 0xc
 1475 01a7 E1000000 		.4byte	.LASF33
 1476 01ab 01       		.byte	0x1
 1477 01ac C201     		.2byte	0x1c2
 1478 01ae 83000000 		.4byte	0x83
 1479 01b2 02       		.uleb128 0x2
 1480 01b3 91       		.byte	0x91
 1481 01b4 6C       		.sleb128 -20
 1482 01b5 0D       		.uleb128 0xd
 1483 01b6 74000000 		.4byte	.LASF30
 1484 01ba 01       		.byte	0x1
 1485 01bb C401     		.2byte	0x1c4
 1486 01bd 83000000 		.4byte	0x83
 1487 01c1 02       		.uleb128 0x2
 1488 01c2 91       		.byte	0x91
 1489 01c3 74       		.sleb128 -12
 1490 01c4 00       		.byte	0
 1491 01c5 0E       		.uleb128 0xe
 1492 01c6 93030000 		.4byte	.LASF32
 1493 01ca 01       		.byte	0x1
 1494 01cb F801     		.2byte	0x1f8
 1495 01cd 8F000000 		.4byte	0x8f
 1496 01d1 00000000 		.4byte	.LFB9
 1497 01d5 44000000 		.4byte	.LFE9-.LFB9
 1498 01d9 01       		.uleb128 0x1
 1499 01da 9C       		.byte	0x9c
 1500 01db FE010000 		.4byte	0x1fe
 1501 01df 0C       		.uleb128 0xc
 1502 01e0 ED020000 		.4byte	.LASF34
 1503 01e4 01       		.byte	0x1
 1504 01e5 F801     		.2byte	0x1f8
 1505 01e7 83000000 		.4byte	0x83
 1506 01eb 02       		.uleb128 0x2
 1507 01ec 91       		.byte	0x91
 1508 01ed 6C       		.sleb128 -20
 1509 01ee 0D       		.uleb128 0xd
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 43


 1510 01ef 8C030000 		.4byte	.LASF35
 1511 01f3 01       		.byte	0x1
 1512 01f4 FA01     		.2byte	0x1fa
 1513 01f6 83000000 		.4byte	0x83
 1514 01fa 02       		.uleb128 0x2
 1515 01fb 91       		.byte	0x91
 1516 01fc 74       		.sleb128 -12
 1517 01fd 00       		.byte	0
 1518 01fe 0F       		.uleb128 0xf
 1519 01ff 4E020000 		.4byte	.LASF37
 1520 0203 01       		.byte	0x1
 1521 0204 2502     		.2byte	0x225
 1522 0206 00000000 		.4byte	.LFB10
 1523 020a 20000000 		.4byte	.LFE10-.LFB10
 1524 020e 01       		.uleb128 0x1
 1525 020f 9C       		.byte	0x9c
 1526 0210 24020000 		.4byte	0x224
 1527 0214 0C       		.uleb128 0xc
 1528 0215 D0000000 		.4byte	.LASF38
 1529 0219 01       		.byte	0x1
 1530 021a 2502     		.2byte	0x225
 1531 021c 83000000 		.4byte	0x83
 1532 0220 02       		.uleb128 0x2
 1533 0221 91       		.byte	0x91
 1534 0222 74       		.sleb128 -12
 1535 0223 00       		.byte	0
 1536 0224 0F       		.uleb128 0xf
 1537 0225 AB020000 		.4byte	.LASF39
 1538 0229 01       		.byte	0x1
 1539 022a 5102     		.2byte	0x251
 1540 022c 00000000 		.4byte	.LFB11
 1541 0230 30000000 		.4byte	.LFE11-.LFB11
 1542 0234 01       		.uleb128 0x1
 1543 0235 9C       		.byte	0x9c
 1544 0236 4A020000 		.4byte	0x24a
 1545 023a 0C       		.uleb128 0xc
 1546 023b 0E020000 		.4byte	.LASF40
 1547 023f 01       		.byte	0x1
 1548 0240 5102     		.2byte	0x251
 1549 0242 83000000 		.4byte	0x83
 1550 0246 02       		.uleb128 0x2
 1551 0247 91       		.byte	0x91
 1552 0248 74       		.sleb128 -12
 1553 0249 00       		.byte	0
 1554 024a 0F       		.uleb128 0xf
 1555 024b 23020000 		.4byte	.LASF41
 1556 024f 01       		.byte	0x1
 1557 0250 6602     		.2byte	0x266
 1558 0252 00000000 		.4byte	.LFB12
 1559 0256 30000000 		.4byte	.LFE12-.LFB12
 1560 025a 01       		.uleb128 0x1
 1561 025b 9C       		.byte	0x9c
 1562 025c 70020000 		.4byte	0x270
 1563 0260 0C       		.uleb128 0xc
 1564 0261 8D020000 		.4byte	.LASF42
 1565 0265 01       		.byte	0x1
 1566 0266 6602     		.2byte	0x266
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 44


 1567 0268 83000000 		.4byte	0x83
 1568 026c 02       		.uleb128 0x2
 1569 026d 91       		.byte	0x91
 1570 026e 74       		.sleb128 -12
 1571 026f 00       		.byte	0
 1572 0270 0F       		.uleb128 0xf
 1573 0271 E9000000 		.4byte	.LASF43
 1574 0275 01       		.byte	0x1
 1575 0276 7E02     		.2byte	0x27e
 1576 0278 00000000 		.4byte	.LFB13
 1577 027c 20000000 		.4byte	.LFE13-.LFB13
 1578 0280 01       		.uleb128 0x1
 1579 0281 9C       		.byte	0x9c
 1580 0282 96020000 		.4byte	0x296
 1581 0286 0C       		.uleb128 0xc
 1582 0287 D0000000 		.4byte	.LASF38
 1583 028b 01       		.byte	0x1
 1584 028c 7E02     		.2byte	0x27e
 1585 028e 83000000 		.4byte	0x83
 1586 0292 02       		.uleb128 0x2
 1587 0293 91       		.byte	0x91
 1588 0294 74       		.sleb128 -12
 1589 0295 00       		.byte	0
 1590 0296 0F       		.uleb128 0xf
 1591 0297 20010000 		.4byte	.LASF44
 1592 029b 01       		.byte	0x1
 1593 029c 9502     		.2byte	0x295
 1594 029e 00000000 		.4byte	.LFB14
 1595 02a2 20000000 		.4byte	.LFE14-.LFB14
 1596 02a6 01       		.uleb128 0x1
 1597 02a7 9C       		.byte	0x9c
 1598 02a8 BC020000 		.4byte	0x2bc
 1599 02ac 0C       		.uleb128 0xc
 1600 02ad D0000000 		.4byte	.LASF38
 1601 02b1 01       		.byte	0x1
 1602 02b2 9502     		.2byte	0x295
 1603 02b4 83000000 		.4byte	0x83
 1604 02b8 02       		.uleb128 0x2
 1605 02b9 91       		.byte	0x91
 1606 02ba 74       		.sleb128 -12
 1607 02bb 00       		.byte	0
 1608 02bc 10       		.uleb128 0x10
 1609 02bd 7E030000 		.4byte	.LASF45
 1610 02c1 01       		.byte	0x1
 1611 02c2 B102     		.2byte	0x2b1
 1612 02c4 00000000 		.4byte	.LFB15
 1613 02c8 34000000 		.4byte	.LFE15-.LFB15
 1614 02cc 01       		.uleb128 0x1
 1615 02cd 9C       		.byte	0x9c
 1616 02ce F1020000 		.4byte	0x2f1
 1617 02d2 0C       		.uleb128 0xc
 1618 02d3 ED020000 		.4byte	.LASF34
 1619 02d7 01       		.byte	0x1
 1620 02d8 B102     		.2byte	0x2b1
 1621 02da 83000000 		.4byte	0x83
 1622 02de 02       		.uleb128 0x2
 1623 02df 91       		.byte	0x91
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 45


 1624 02e0 74       		.sleb128 -12
 1625 02e1 0C       		.uleb128 0xc
 1626 02e2 5C030000 		.4byte	.LASF46
 1627 02e6 01       		.byte	0x1
 1628 02e7 B102     		.2byte	0x2b1
 1629 02e9 8F000000 		.4byte	0x8f
 1630 02ed 02       		.uleb128 0x2
 1631 02ee 91       		.byte	0x91
 1632 02ef 72       		.sleb128 -14
 1633 02f0 00       		.byte	0
 1634 02f1 10       		.uleb128 0x10
 1635 02f2 7B020000 		.4byte	.LASF47
 1636 02f6 01       		.byte	0x1
 1637 02f7 D302     		.2byte	0x2d3
 1638 02f9 00000000 		.4byte	.LFB16
 1639 02fd 2C000000 		.4byte	.LFE16-.LFB16
 1640 0301 01       		.uleb128 0x1
 1641 0302 9C       		.byte	0x9c
 1642 0303 26030000 		.4byte	0x326
 1643 0307 0C       		.uleb128 0xc
 1644 0308 ED020000 		.4byte	.LASF34
 1645 030c 01       		.byte	0x1
 1646 030d D302     		.2byte	0x2d3
 1647 030f 83000000 		.4byte	0x83
 1648 0313 02       		.uleb128 0x2
 1649 0314 91       		.byte	0x91
 1650 0315 74       		.sleb128 -12
 1651 0316 0C       		.uleb128 0xc
 1652 0317 07000000 		.4byte	.LASF48
 1653 031b 01       		.byte	0x1
 1654 031c D302     		.2byte	0x2d3
 1655 031e 9B000000 		.4byte	0x9b
 1656 0322 02       		.uleb128 0x2
 1657 0323 91       		.byte	0x91
 1658 0324 70       		.sleb128 -16
 1659 0325 00       		.byte	0
 1660 0326 0E       		.uleb128 0xe
 1661 0327 97020000 		.4byte	.LASF49
 1662 032b 01       		.byte	0x1
 1663 032c F402     		.2byte	0x2f4
 1664 032e 8F000000 		.4byte	0x8f
 1665 0332 00000000 		.4byte	.LFB17
 1666 0336 A0000000 		.4byte	.LFE17-.LFB17
 1667 033a 01       		.uleb128 0x1
 1668 033b 9C       		.byte	0x9c
 1669 033c 6E030000 		.4byte	0x36e
 1670 0340 0C       		.uleb128 0xc
 1671 0341 ED020000 		.4byte	.LASF34
 1672 0345 01       		.byte	0x1
 1673 0346 F402     		.2byte	0x2f4
 1674 0348 83000000 		.4byte	0x83
 1675 034c 02       		.uleb128 0x2
 1676 034d 91       		.byte	0x91
 1677 034e 6C       		.sleb128 -20
 1678 034f 0C       		.uleb128 0xc
 1679 0350 63030000 		.4byte	.LASF50
 1680 0354 01       		.byte	0x1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 46


 1681 0355 F402     		.2byte	0x2f4
 1682 0357 8F000000 		.4byte	0x8f
 1683 035b 02       		.uleb128 0x2
 1684 035c 91       		.byte	0x91
 1685 035d 6A       		.sleb128 -22
 1686 035e 0D       		.uleb128 0xd
 1687 035f F0010000 		.4byte	.LASF51
 1688 0363 01       		.byte	0x1
 1689 0364 F602     		.2byte	0x2f6
 1690 0366 8F000000 		.4byte	0x8f
 1691 036a 02       		.uleb128 0x2
 1692 036b 91       		.byte	0x91
 1693 036c 76       		.sleb128 -10
 1694 036d 00       		.byte	0
 1695 036e 0E       		.uleb128 0xe
 1696 036f 94000000 		.4byte	.LASF52
 1697 0373 01       		.byte	0x1
 1698 0374 2A03     		.2byte	0x32a
 1699 0376 9B000000 		.4byte	0x9b
 1700 037a 00000000 		.4byte	.LFB18
 1701 037e 90000000 		.4byte	.LFE18-.LFB18
 1702 0382 01       		.uleb128 0x1
 1703 0383 9C       		.byte	0x9c
 1704 0384 B6030000 		.4byte	0x3b6
 1705 0388 0C       		.uleb128 0xc
 1706 0389 ED020000 		.4byte	.LASF34
 1707 038d 01       		.byte	0x1
 1708 038e 2A03     		.2byte	0x32a
 1709 0390 83000000 		.4byte	0x83
 1710 0394 02       		.uleb128 0x2
 1711 0395 91       		.byte	0x91
 1712 0396 64       		.sleb128 -28
 1713 0397 0C       		.uleb128 0xc
 1714 0398 63030000 		.4byte	.LASF50
 1715 039c 01       		.byte	0x1
 1716 039d 2A03     		.2byte	0x32a
 1717 039f 8F000000 		.4byte	0x8f
 1718 03a3 02       		.uleb128 0x2
 1719 03a4 91       		.byte	0x91
 1720 03a5 62       		.sleb128 -30
 1721 03a6 0D       		.uleb128 0xd
 1722 03a7 07010000 		.4byte	.LASF53
 1723 03ab 01       		.byte	0x1
 1724 03ac 2C03     		.2byte	0x32c
 1725 03ae C1000000 		.4byte	0xc1
 1726 03b2 02       		.uleb128 0x2
 1727 03b3 91       		.byte	0x91
 1728 03b4 68       		.sleb128 -24
 1729 03b5 00       		.byte	0
 1730 03b6 0E       		.uleb128 0xe
 1731 03b7 16000000 		.4byte	.LASF54
 1732 03bb 01       		.byte	0x1
 1733 03bc 5703     		.2byte	0x357
 1734 03be A7000000 		.4byte	0xa7
 1735 03c2 00000000 		.4byte	.LFB19
 1736 03c6 80000000 		.4byte	.LFE19-.LFB19
 1737 03ca 01       		.uleb128 0x1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 47


 1738 03cb 9C       		.byte	0x9c
 1739 03cc FE030000 		.4byte	0x3fe
 1740 03d0 0C       		.uleb128 0xc
 1741 03d1 ED020000 		.4byte	.LASF34
 1742 03d5 01       		.byte	0x1
 1743 03d6 5703     		.2byte	0x357
 1744 03d8 83000000 		.4byte	0x83
 1745 03dc 02       		.uleb128 0x2
 1746 03dd 91       		.byte	0x91
 1747 03de 64       		.sleb128 -28
 1748 03df 0C       		.uleb128 0xc
 1749 03e0 63030000 		.4byte	.LASF50
 1750 03e4 01       		.byte	0x1
 1751 03e5 5703     		.2byte	0x357
 1752 03e7 8F000000 		.4byte	0x8f
 1753 03eb 02       		.uleb128 0x2
 1754 03ec 91       		.byte	0x91
 1755 03ed 62       		.sleb128 -30
 1756 03ee 0D       		.uleb128 0xd
 1757 03ef 2F010000 		.4byte	.LASF55
 1758 03f3 01       		.byte	0x1
 1759 03f4 5903     		.2byte	0x359
 1760 03f6 A7000000 		.4byte	0xa7
 1761 03fa 02       		.uleb128 0x2
 1762 03fb 91       		.byte	0x91
 1763 03fc 6C       		.sleb128 -20
 1764 03fd 00       		.byte	0
 1765 03fe 11       		.uleb128 0x11
 1766 03ff 0E040000 		.4byte	0x40e
 1767 0403 0E040000 		.4byte	0x40e
 1768 0407 12       		.uleb128 0x12
 1769 0408 EC000000 		.4byte	0xec
 1770 040c 00       		.byte	0
 1771 040d 00       		.byte	0
 1772 040e 13       		.uleb128 0x13
 1773 040f 83000000 		.4byte	0x83
 1774 0413 08       		.uleb128 0x8
 1775 0414 F7020000 		.4byte	.LASF56
 1776 0418 01       		.byte	0x1
 1777 0419 21       		.byte	0x21
 1778 041a 24040000 		.4byte	0x424
 1779 041e 05       		.uleb128 0x5
 1780 041f 03       		.byte	0x3
 1781 0420 00000000 		.4byte	ADC_channelsConfig
 1782 0424 13       		.uleb128 0x13
 1783 0425 FE030000 		.4byte	0x3fe
 1784 0429 14       		.uleb128 0x14
 1785 042a D5000000 		.4byte	.LASF57
 1786 042e 01       		.byte	0x1
 1787 042f 18       		.byte	0x18
 1788 0430 6B000000 		.4byte	0x6b
 1789 0434 05       		.uleb128 0x5
 1790 0435 03       		.byte	0x3
 1791 0436 00000000 		.4byte	ADC_initVar
 1792 043a 11       		.uleb128 0x11
 1793 043b 4A040000 		.4byte	0x44a
 1794 043f 4A040000 		.4byte	0x44a
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 48


 1795 0443 12       		.uleb128 0x12
 1796 0444 EC000000 		.4byte	0xec
 1797 0448 00       		.byte	0
 1798 0449 00       		.byte	0
 1799 044a 05       		.uleb128 0x5
 1800 044b 8F000000 		.4byte	0x8f
 1801 044f 14       		.uleb128 0x14
 1802 0450 C9020000 		.4byte	.LASF58
 1803 0454 01       		.byte	0x1
 1804 0455 19       		.byte	0x19
 1805 0456 60040000 		.4byte	0x460
 1806 045a 05       		.uleb128 0x5
 1807 045b 03       		.byte	0x3
 1808 045c 00000000 		.4byte	ADC_offset
 1809 0460 05       		.uleb128 0x5
 1810 0461 3A040000 		.4byte	0x43a
 1811 0465 11       		.uleb128 0x11
 1812 0466 75040000 		.4byte	0x475
 1813 046a 75040000 		.4byte	0x475
 1814 046e 12       		.uleb128 0x12
 1815 046f EC000000 		.4byte	0xec
 1816 0473 00       		.byte	0
 1817 0474 00       		.byte	0
 1818 0475 05       		.uleb128 0x5
 1819 0476 9B000000 		.4byte	0x9b
 1820 047a 14       		.uleb128 0x14
 1821 047b A8000000 		.4byte	.LASF59
 1822 047f 01       		.byte	0x1
 1823 0480 1A       		.byte	0x1a
 1824 0481 8B040000 		.4byte	0x48b
 1825 0485 05       		.uleb128 0x5
 1826 0486 03       		.byte	0x3
 1827 0487 00000000 		.4byte	ADC_countsPer10Volt
 1828 048b 05       		.uleb128 0x5
 1829 048c 65040000 		.4byte	0x465
 1830 0490 00       		.byte	0
 1831              		.section	.debug_abbrev,"",%progbits
 1832              	.Ldebug_abbrev0:
 1833 0000 01       		.uleb128 0x1
 1834 0001 11       		.uleb128 0x11
 1835 0002 01       		.byte	0x1
 1836 0003 25       		.uleb128 0x25
 1837 0004 0E       		.uleb128 0xe
 1838 0005 13       		.uleb128 0x13
 1839 0006 0B       		.uleb128 0xb
 1840 0007 03       		.uleb128 0x3
 1841 0008 0E       		.uleb128 0xe
 1842 0009 1B       		.uleb128 0x1b
 1843 000a 0E       		.uleb128 0xe
 1844 000b 55       		.uleb128 0x55
 1845 000c 17       		.uleb128 0x17
 1846 000d 11       		.uleb128 0x11
 1847 000e 01       		.uleb128 0x1
 1848 000f 10       		.uleb128 0x10
 1849 0010 17       		.uleb128 0x17
 1850 0011 00       		.byte	0
 1851 0012 00       		.byte	0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 49


 1852 0013 02       		.uleb128 0x2
 1853 0014 24       		.uleb128 0x24
 1854 0015 00       		.byte	0
 1855 0016 0B       		.uleb128 0xb
 1856 0017 0B       		.uleb128 0xb
 1857 0018 3E       		.uleb128 0x3e
 1858 0019 0B       		.uleb128 0xb
 1859 001a 03       		.uleb128 0x3
 1860 001b 0E       		.uleb128 0xe
 1861 001c 00       		.byte	0
 1862 001d 00       		.byte	0
 1863 001e 03       		.uleb128 0x3
 1864 001f 24       		.uleb128 0x24
 1865 0020 00       		.byte	0
 1866 0021 0B       		.uleb128 0xb
 1867 0022 0B       		.uleb128 0xb
 1868 0023 3E       		.uleb128 0x3e
 1869 0024 0B       		.uleb128 0xb
 1870 0025 03       		.uleb128 0x3
 1871 0026 08       		.uleb128 0x8
 1872 0027 00       		.byte	0
 1873 0028 00       		.byte	0
 1874 0029 04       		.uleb128 0x4
 1875 002a 16       		.uleb128 0x16
 1876 002b 00       		.byte	0
 1877 002c 03       		.uleb128 0x3
 1878 002d 0E       		.uleb128 0xe
 1879 002e 3A       		.uleb128 0x3a
 1880 002f 0B       		.uleb128 0xb
 1881 0030 3B       		.uleb128 0x3b
 1882 0031 05       		.uleb128 0x5
 1883 0032 49       		.uleb128 0x49
 1884 0033 13       		.uleb128 0x13
 1885 0034 00       		.byte	0
 1886 0035 00       		.byte	0
 1887 0036 05       		.uleb128 0x5
 1888 0037 35       		.uleb128 0x35
 1889 0038 00       		.byte	0
 1890 0039 49       		.uleb128 0x49
 1891 003a 13       		.uleb128 0x13
 1892 003b 00       		.byte	0
 1893 003c 00       		.byte	0
 1894 003d 06       		.uleb128 0x6
 1895 003e 2E       		.uleb128 0x2e
 1896 003f 00       		.byte	0
 1897 0040 3F       		.uleb128 0x3f
 1898 0041 19       		.uleb128 0x19
 1899 0042 03       		.uleb128 0x3
 1900 0043 0E       		.uleb128 0xe
 1901 0044 3A       		.uleb128 0x3a
 1902 0045 0B       		.uleb128 0xb
 1903 0046 3B       		.uleb128 0x3b
 1904 0047 0B       		.uleb128 0xb
 1905 0048 27       		.uleb128 0x27
 1906 0049 19       		.uleb128 0x19
 1907 004a 11       		.uleb128 0x11
 1908 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 50


 1909 004c 12       		.uleb128 0x12
 1910 004d 06       		.uleb128 0x6
 1911 004e 40       		.uleb128 0x40
 1912 004f 18       		.uleb128 0x18
 1913 0050 9642     		.uleb128 0x2116
 1914 0052 19       		.uleb128 0x19
 1915 0053 00       		.byte	0
 1916 0054 00       		.byte	0
 1917 0055 07       		.uleb128 0x7
 1918 0056 2E       		.uleb128 0x2e
 1919 0057 01       		.byte	0x1
 1920 0058 3F       		.uleb128 0x3f
 1921 0059 19       		.uleb128 0x19
 1922 005a 03       		.uleb128 0x3
 1923 005b 0E       		.uleb128 0xe
 1924 005c 3A       		.uleb128 0x3a
 1925 005d 0B       		.uleb128 0xb
 1926 005e 3B       		.uleb128 0x3b
 1927 005f 0B       		.uleb128 0xb
 1928 0060 27       		.uleb128 0x27
 1929 0061 19       		.uleb128 0x19
 1930 0062 11       		.uleb128 0x11
 1931 0063 01       		.uleb128 0x1
 1932 0064 12       		.uleb128 0x12
 1933 0065 06       		.uleb128 0x6
 1934 0066 40       		.uleb128 0x40
 1935 0067 18       		.uleb128 0x18
 1936 0068 9642     		.uleb128 0x2116
 1937 006a 19       		.uleb128 0x19
 1938 006b 01       		.uleb128 0x1
 1939 006c 13       		.uleb128 0x13
 1940 006d 00       		.byte	0
 1941 006e 00       		.byte	0
 1942 006f 08       		.uleb128 0x8
 1943 0070 34       		.uleb128 0x34
 1944 0071 00       		.byte	0
 1945 0072 03       		.uleb128 0x3
 1946 0073 0E       		.uleb128 0xe
 1947 0074 3A       		.uleb128 0x3a
 1948 0075 0B       		.uleb128 0xb
 1949 0076 3B       		.uleb128 0x3b
 1950 0077 0B       		.uleb128 0xb
 1951 0078 49       		.uleb128 0x49
 1952 0079 13       		.uleb128 0x13
 1953 007a 02       		.uleb128 0x2
 1954 007b 18       		.uleb128 0x18
 1955 007c 00       		.byte	0
 1956 007d 00       		.byte	0
 1957 007e 09       		.uleb128 0x9
 1958 007f 2E       		.uleb128 0x2e
 1959 0080 00       		.byte	0
 1960 0081 3F       		.uleb128 0x3f
 1961 0082 19       		.uleb128 0x19
 1962 0083 03       		.uleb128 0x3
 1963 0084 0E       		.uleb128 0xe
 1964 0085 3A       		.uleb128 0x3a
 1965 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 51


 1966 0087 3B       		.uleb128 0x3b
 1967 0088 05       		.uleb128 0x5
 1968 0089 27       		.uleb128 0x27
 1969 008a 19       		.uleb128 0x19
 1970 008b 11       		.uleb128 0x11
 1971 008c 01       		.uleb128 0x1
 1972 008d 12       		.uleb128 0x12
 1973 008e 06       		.uleb128 0x6
 1974 008f 40       		.uleb128 0x40
 1975 0090 18       		.uleb128 0x18
 1976 0091 9642     		.uleb128 0x2116
 1977 0093 19       		.uleb128 0x19
 1978 0094 00       		.byte	0
 1979 0095 00       		.byte	0
 1980 0096 0A       		.uleb128 0xa
 1981 0097 2E       		.uleb128 0x2e
 1982 0098 00       		.byte	0
 1983 0099 3F       		.uleb128 0x3f
 1984 009a 19       		.uleb128 0x19
 1985 009b 03       		.uleb128 0x3
 1986 009c 0E       		.uleb128 0xe
 1987 009d 3A       		.uleb128 0x3a
 1988 009e 0B       		.uleb128 0xb
 1989 009f 3B       		.uleb128 0x3b
 1990 00a0 05       		.uleb128 0x5
 1991 00a1 27       		.uleb128 0x27
 1992 00a2 19       		.uleb128 0x19
 1993 00a3 11       		.uleb128 0x11
 1994 00a4 01       		.uleb128 0x1
 1995 00a5 12       		.uleb128 0x12
 1996 00a6 06       		.uleb128 0x6
 1997 00a7 40       		.uleb128 0x40
 1998 00a8 18       		.uleb128 0x18
 1999 00a9 9742     		.uleb128 0x2117
 2000 00ab 19       		.uleb128 0x19
 2001 00ac 00       		.byte	0
 2002 00ad 00       		.byte	0
 2003 00ae 0B       		.uleb128 0xb
 2004 00af 2E       		.uleb128 0x2e
 2005 00b0 01       		.byte	0x1
 2006 00b1 3F       		.uleb128 0x3f
 2007 00b2 19       		.uleb128 0x19
 2008 00b3 03       		.uleb128 0x3
 2009 00b4 0E       		.uleb128 0xe
 2010 00b5 3A       		.uleb128 0x3a
 2011 00b6 0B       		.uleb128 0xb
 2012 00b7 3B       		.uleb128 0x3b
 2013 00b8 05       		.uleb128 0x5
 2014 00b9 27       		.uleb128 0x27
 2015 00ba 19       		.uleb128 0x19
 2016 00bb 49       		.uleb128 0x49
 2017 00bc 13       		.uleb128 0x13
 2018 00bd 11       		.uleb128 0x11
 2019 00be 01       		.uleb128 0x1
 2020 00bf 12       		.uleb128 0x12
 2021 00c0 06       		.uleb128 0x6
 2022 00c1 40       		.uleb128 0x40
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 52


 2023 00c2 18       		.uleb128 0x18
 2024 00c3 9742     		.uleb128 0x2117
 2025 00c5 19       		.uleb128 0x19
 2026 00c6 01       		.uleb128 0x1
 2027 00c7 13       		.uleb128 0x13
 2028 00c8 00       		.byte	0
 2029 00c9 00       		.byte	0
 2030 00ca 0C       		.uleb128 0xc
 2031 00cb 05       		.uleb128 0x5
 2032 00cc 00       		.byte	0
 2033 00cd 03       		.uleb128 0x3
 2034 00ce 0E       		.uleb128 0xe
 2035 00cf 3A       		.uleb128 0x3a
 2036 00d0 0B       		.uleb128 0xb
 2037 00d1 3B       		.uleb128 0x3b
 2038 00d2 05       		.uleb128 0x5
 2039 00d3 49       		.uleb128 0x49
 2040 00d4 13       		.uleb128 0x13
 2041 00d5 02       		.uleb128 0x2
 2042 00d6 18       		.uleb128 0x18
 2043 00d7 00       		.byte	0
 2044 00d8 00       		.byte	0
 2045 00d9 0D       		.uleb128 0xd
 2046 00da 34       		.uleb128 0x34
 2047 00db 00       		.byte	0
 2048 00dc 03       		.uleb128 0x3
 2049 00dd 0E       		.uleb128 0xe
 2050 00de 3A       		.uleb128 0x3a
 2051 00df 0B       		.uleb128 0xb
 2052 00e0 3B       		.uleb128 0x3b
 2053 00e1 05       		.uleb128 0x5
 2054 00e2 49       		.uleb128 0x49
 2055 00e3 13       		.uleb128 0x13
 2056 00e4 02       		.uleb128 0x2
 2057 00e5 18       		.uleb128 0x18
 2058 00e6 00       		.byte	0
 2059 00e7 00       		.byte	0
 2060 00e8 0E       		.uleb128 0xe
 2061 00e9 2E       		.uleb128 0x2e
 2062 00ea 01       		.byte	0x1
 2063 00eb 3F       		.uleb128 0x3f
 2064 00ec 19       		.uleb128 0x19
 2065 00ed 03       		.uleb128 0x3
 2066 00ee 0E       		.uleb128 0xe
 2067 00ef 3A       		.uleb128 0x3a
 2068 00f0 0B       		.uleb128 0xb
 2069 00f1 3B       		.uleb128 0x3b
 2070 00f2 05       		.uleb128 0x5
 2071 00f3 27       		.uleb128 0x27
 2072 00f4 19       		.uleb128 0x19
 2073 00f5 49       		.uleb128 0x49
 2074 00f6 13       		.uleb128 0x13
 2075 00f7 11       		.uleb128 0x11
 2076 00f8 01       		.uleb128 0x1
 2077 00f9 12       		.uleb128 0x12
 2078 00fa 06       		.uleb128 0x6
 2079 00fb 40       		.uleb128 0x40
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 53


 2080 00fc 18       		.uleb128 0x18
 2081 00fd 9642     		.uleb128 0x2116
 2082 00ff 19       		.uleb128 0x19
 2083 0100 01       		.uleb128 0x1
 2084 0101 13       		.uleb128 0x13
 2085 0102 00       		.byte	0
 2086 0103 00       		.byte	0
 2087 0104 0F       		.uleb128 0xf
 2088 0105 2E       		.uleb128 0x2e
 2089 0106 01       		.byte	0x1
 2090 0107 3F       		.uleb128 0x3f
 2091 0108 19       		.uleb128 0x19
 2092 0109 03       		.uleb128 0x3
 2093 010a 0E       		.uleb128 0xe
 2094 010b 3A       		.uleb128 0x3a
 2095 010c 0B       		.uleb128 0xb
 2096 010d 3B       		.uleb128 0x3b
 2097 010e 05       		.uleb128 0x5
 2098 010f 27       		.uleb128 0x27
 2099 0110 19       		.uleb128 0x19
 2100 0111 11       		.uleb128 0x11
 2101 0112 01       		.uleb128 0x1
 2102 0113 12       		.uleb128 0x12
 2103 0114 06       		.uleb128 0x6
 2104 0115 40       		.uleb128 0x40
 2105 0116 18       		.uleb128 0x18
 2106 0117 9742     		.uleb128 0x2117
 2107 0119 19       		.uleb128 0x19
 2108 011a 01       		.uleb128 0x1
 2109 011b 13       		.uleb128 0x13
 2110 011c 00       		.byte	0
 2111 011d 00       		.byte	0
 2112 011e 10       		.uleb128 0x10
 2113 011f 2E       		.uleb128 0x2e
 2114 0120 01       		.byte	0x1
 2115 0121 3F       		.uleb128 0x3f
 2116 0122 19       		.uleb128 0x19
 2117 0123 03       		.uleb128 0x3
 2118 0124 0E       		.uleb128 0xe
 2119 0125 3A       		.uleb128 0x3a
 2120 0126 0B       		.uleb128 0xb
 2121 0127 3B       		.uleb128 0x3b
 2122 0128 05       		.uleb128 0x5
 2123 0129 27       		.uleb128 0x27
 2124 012a 19       		.uleb128 0x19
 2125 012b 11       		.uleb128 0x11
 2126 012c 01       		.uleb128 0x1
 2127 012d 12       		.uleb128 0x12
 2128 012e 06       		.uleb128 0x6
 2129 012f 40       		.uleb128 0x40
 2130 0130 18       		.uleb128 0x18
 2131 0131 9642     		.uleb128 0x2116
 2132 0133 19       		.uleb128 0x19
 2133 0134 01       		.uleb128 0x1
 2134 0135 13       		.uleb128 0x13
 2135 0136 00       		.byte	0
 2136 0137 00       		.byte	0
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 54


 2137 0138 11       		.uleb128 0x11
 2138 0139 01       		.uleb128 0x1
 2139 013a 01       		.byte	0x1
 2140 013b 49       		.uleb128 0x49
 2141 013c 13       		.uleb128 0x13
 2142 013d 01       		.uleb128 0x1
 2143 013e 13       		.uleb128 0x13
 2144 013f 00       		.byte	0
 2145 0140 00       		.byte	0
 2146 0141 12       		.uleb128 0x12
 2147 0142 21       		.uleb128 0x21
 2148 0143 00       		.byte	0
 2149 0144 49       		.uleb128 0x49
 2150 0145 13       		.uleb128 0x13
 2151 0146 2F       		.uleb128 0x2f
 2152 0147 0B       		.uleb128 0xb
 2153 0148 00       		.byte	0
 2154 0149 00       		.byte	0
 2155 014a 13       		.uleb128 0x13
 2156 014b 26       		.uleb128 0x26
 2157 014c 00       		.byte	0
 2158 014d 49       		.uleb128 0x49
 2159 014e 13       		.uleb128 0x13
 2160 014f 00       		.byte	0
 2161 0150 00       		.byte	0
 2162 0151 14       		.uleb128 0x14
 2163 0152 34       		.uleb128 0x34
 2164 0153 00       		.byte	0
 2165 0154 03       		.uleb128 0x3
 2166 0155 0E       		.uleb128 0xe
 2167 0156 3A       		.uleb128 0x3a
 2168 0157 0B       		.uleb128 0xb
 2169 0158 3B       		.uleb128 0x3b
 2170 0159 0B       		.uleb128 0xb
 2171 015a 49       		.uleb128 0x49
 2172 015b 13       		.uleb128 0x13
 2173 015c 3F       		.uleb128 0x3f
 2174 015d 19       		.uleb128 0x19
 2175 015e 02       		.uleb128 0x2
 2176 015f 18       		.uleb128 0x18
 2177 0160 00       		.byte	0
 2178 0161 00       		.byte	0
 2179 0162 00       		.byte	0
 2180              		.section	.debug_aranges,"",%progbits
 2181 0000 A4000000 		.4byte	0xa4
 2182 0004 0200     		.2byte	0x2
 2183 0006 00000000 		.4byte	.Ldebug_info0
 2184 000a 04       		.byte	0x4
 2185 000b 00       		.byte	0
 2186 000c 0000     		.2byte	0
 2187 000e 0000     		.2byte	0
 2188 0010 00000000 		.4byte	.LFB2
 2189 0014 24000000 		.4byte	.LFE2-.LFB2
 2190 0018 00000000 		.4byte	.LFB3
 2191 001c CC010000 		.4byte	.LFE3-.LFB3
 2192 0020 00000000 		.4byte	.LFB4
 2193 0024 38000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 55


 2194 0028 00000000 		.4byte	.LFB5
 2195 002c 1C000000 		.4byte	.LFE5-.LFB5
 2196 0030 00000000 		.4byte	.LFB6
 2197 0034 14000000 		.4byte	.LFE6-.LFB6
 2198 0038 00000000 		.4byte	.LFB7
 2199 003c 0A000000 		.4byte	.LFE7-.LFB7
 2200 0040 00000000 		.4byte	.LFB8
 2201 0044 48000000 		.4byte	.LFE8-.LFB8
 2202 0048 00000000 		.4byte	.LFB9
 2203 004c 44000000 		.4byte	.LFE9-.LFB9
 2204 0050 00000000 		.4byte	.LFB10
 2205 0054 20000000 		.4byte	.LFE10-.LFB10
 2206 0058 00000000 		.4byte	.LFB11
 2207 005c 30000000 		.4byte	.LFE11-.LFB11
 2208 0060 00000000 		.4byte	.LFB12
 2209 0064 30000000 		.4byte	.LFE12-.LFB12
 2210 0068 00000000 		.4byte	.LFB13
 2211 006c 20000000 		.4byte	.LFE13-.LFB13
 2212 0070 00000000 		.4byte	.LFB14
 2213 0074 20000000 		.4byte	.LFE14-.LFB14
 2214 0078 00000000 		.4byte	.LFB15
 2215 007c 34000000 		.4byte	.LFE15-.LFB15
 2216 0080 00000000 		.4byte	.LFB16
 2217 0084 2C000000 		.4byte	.LFE16-.LFB16
 2218 0088 00000000 		.4byte	.LFB17
 2219 008c A0000000 		.4byte	.LFE17-.LFB17
 2220 0090 00000000 		.4byte	.LFB18
 2221 0094 90000000 		.4byte	.LFE18-.LFB18
 2222 0098 00000000 		.4byte	.LFB19
 2223 009c 80000000 		.4byte	.LFE19-.LFB19
 2224 00a0 00000000 		.4byte	0
 2225 00a4 00000000 		.4byte	0
 2226              		.section	.debug_ranges,"",%progbits
 2227              	.Ldebug_ranges0:
 2228 0000 00000000 		.4byte	.LFB2
 2229 0004 24000000 		.4byte	.LFE2
 2230 0008 00000000 		.4byte	.LFB3
 2231 000c CC010000 		.4byte	.LFE3
 2232 0010 00000000 		.4byte	.LFB4
 2233 0014 38000000 		.4byte	.LFE4
 2234 0018 00000000 		.4byte	.LFB5
 2235 001c 1C000000 		.4byte	.LFE5
 2236 0020 00000000 		.4byte	.LFB6
 2237 0024 14000000 		.4byte	.LFE6
 2238 0028 00000000 		.4byte	.LFB7
 2239 002c 0A000000 		.4byte	.LFE7
 2240 0030 00000000 		.4byte	.LFB8
 2241 0034 48000000 		.4byte	.LFE8
 2242 0038 00000000 		.4byte	.LFB9
 2243 003c 44000000 		.4byte	.LFE9
 2244 0040 00000000 		.4byte	.LFB10
 2245 0044 20000000 		.4byte	.LFE10
 2246 0048 00000000 		.4byte	.LFB11
 2247 004c 30000000 		.4byte	.LFE11
 2248 0050 00000000 		.4byte	.LFB12
 2249 0054 30000000 		.4byte	.LFE12
 2250 0058 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 56


 2251 005c 20000000 		.4byte	.LFE13
 2252 0060 00000000 		.4byte	.LFB14
 2253 0064 20000000 		.4byte	.LFE14
 2254 0068 00000000 		.4byte	.LFB15
 2255 006c 34000000 		.4byte	.LFE15
 2256 0070 00000000 		.4byte	.LFB16
 2257 0074 2C000000 		.4byte	.LFE16
 2258 0078 00000000 		.4byte	.LFB17
 2259 007c A0000000 		.4byte	.LFE17
 2260 0080 00000000 		.4byte	.LFB18
 2261 0084 90000000 		.4byte	.LFE18
 2262 0088 00000000 		.4byte	.LFB19
 2263 008c 80000000 		.4byte	.LFE19
 2264 0090 00000000 		.4byte	0
 2265 0094 00000000 		.4byte	0
 2266              		.section	.debug_line,"",%progbits
 2267              	.Ldebug_line0:
 2268 0000 97020000 		.section	.debug_str,"MS",%progbits,1
 2268      02004000 
 2268      00000201 
 2268      FB0E0D00 
 2268      01010101 
 2269              	.LASF10:
 2270 0000 75696E74 		.ascii	"uint16\000"
 2270      313600
 2271              	.LASF48:
 2272 0007 61646347 		.ascii	"adcGain\000"
 2272      61696E00 
 2273              	.LASF24:
 2274 000f 636F756E 		.ascii	"counts\000"
 2274      747300
 2275              	.LASF54:
 2276 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2276      436F756E 
 2276      7473546F 
 2276      5F566F6C 
 2276      747300
 2277              	.LASF36:
 2278 0029 4144435F 		.ascii	"ADC_Init\000"
 2278      496E6974 
 2278      00
 2279              	.LASF7:
 2280 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2280      206C6F6E 
 2280      6720756E 
 2280      7369676E 
 2280      65642069 
 2281              	.LASF28:
 2282 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2282      53746172 
 2282      74436F6E 
 2282      76657274 
 2282      00
 2283              	.LASF6:
 2284 005a 6C6F6E67 		.ascii	"long long int\000"
 2284      206C6F6E 
 2284      6720696E 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 57


 2284      7400
 2285              	.LASF0:
 2286 0068 7369676E 		.ascii	"signed char\000"
 2286      65642063 
 2286      68617200 
 2287              	.LASF30:
 2288 0074 73746174 		.ascii	"status\000"
 2288      757300
 2289              	.LASF13:
 2290 007b 696E7433 		.ascii	"int32\000"
 2290      3200
 2291              	.LASF25:
 2292 0081 4144435F 		.ascii	"ADC_Start\000"
 2292      53746172 
 2292      7400
 2293              	.LASF4:
 2294 008b 6C6F6E67 		.ascii	"long int\000"
 2294      20696E74 
 2294      00
 2295              	.LASF52:
 2296 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2296      436F756E 
 2296      7473546F 
 2296      5F75566F 
 2296      6C747300 
 2297              	.LASF59:
 2298 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2298      636F756E 
 2298      74735065 
 2298      72313056 
 2298      6F6C7400 
 2299              	.LASF9:
 2300 00bc 75696E74 		.ascii	"uint8\000"
 2300      3800
 2301              	.LASF16:
 2302 00c2 646F7562 		.ascii	"double\000"
 2302      6C6500
 2303              	.LASF11:
 2304 00c9 75696E74 		.ascii	"uint32\000"
 2304      333200
 2305              	.LASF38:
 2306 00d0 6D61736B 		.ascii	"mask\000"
 2306      00
 2307              	.LASF57:
 2308 00d5 4144435F 		.ascii	"ADC_initVar\000"
 2308      696E6974 
 2308      56617200 
 2309              	.LASF33:
 2310 00e1 7265744D 		.ascii	"retMode\000"
 2310      6F646500 
 2311              	.LASF43:
 2312 00e9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2312      5365744C 
 2312      696D6974 
 2312      4D61736B 
 2312      00
 2313              	.LASF8:
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 58


 2314 00fa 756E7369 		.ascii	"unsigned int\000"
 2314      676E6564 
 2314      20696E74 
 2314      00
 2315              	.LASF53:
 2316 0107 75566F6C 		.ascii	"uVolts\000"
 2316      747300
 2317              	.LASF5:
 2318 010e 6C6F6E67 		.ascii	"long unsigned int\000"
 2318      20756E73 
 2318      69676E65 
 2318      6420696E 
 2318      7400
 2319              	.LASF44:
 2320 0120 4144435F 		.ascii	"ADC_SetSatMask\000"
 2320      53657453 
 2320      61744D61 
 2320      736B00
 2321              	.LASF55:
 2322 012f 766F6C74 		.ascii	"volts\000"
 2322      7300
 2323              	.LASF23:
 2324 0135 746D7052 		.ascii	"tmpRegVal\000"
 2324      65675661 
 2324      6C00
 2325              	.LASF3:
 2326 013f 73686F72 		.ascii	"short unsigned int\000"
 2326      7420756E 
 2326      7369676E 
 2326      65642069 
 2326      6E7400
 2327              	.LASF29:
 2328 0152 4144435F 		.ascii	"ADC_StopConvert\000"
 2328      53746F70 
 2328      436F6E76 
 2328      65727400 
 2329              	.LASF60:
 2330 0162 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2330      43313120 
 2330      352E342E 
 2330      31203230 
 2330      31363036 
 2331 0195 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2331      20726576 
 2331      6973696F 
 2331      6E203233 
 2331      37373135 
 2332 01c8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2332      66756E63 
 2332      74696F6E 
 2332      2D736563 
 2332      74696F6E 
 2333              	.LASF51:
 2334 01f0 6D566F6C 		.ascii	"mVolts\000"
 2334      747300
 2335              	.LASF19:
 2336 01f7 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 59


 2336      3200
 2337              	.LASF14:
 2338 01fd 666C6F61 		.ascii	"float32\000"
 2338      74333200 
 2339              	.LASF21:
 2340 0205 73697A65 		.ascii	"sizetype\000"
 2340      74797065 
 2340      00
 2341              	.LASF40:
 2342 020e 6C6F774C 		.ascii	"lowLimit\000"
 2342      696D6974 
 2342      00
 2343              	.LASF20:
 2344 0217 6C6F6E67 		.ascii	"long double\000"
 2344      20646F75 
 2344      626C6500 
 2345              	.LASF41:
 2346 0223 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2346      53657448 
 2346      6967684C 
 2346      696D6974 
 2346      00
 2347              	.LASF31:
 2348 0234 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2348      4973456E 
 2348      64436F6E 
 2348      76657273 
 2348      696F6E00 
 2349              	.LASF17:
 2350 0248 696E7436 		.ascii	"int64\000"
 2350      3400
 2351              	.LASF37:
 2352 024e 4144435F 		.ascii	"ADC_SetChanMask\000"
 2352      53657443 
 2352      68616E4D 
 2352      61736B00 
 2353              	.LASF61:
 2354 025e 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2354      72617465 
 2354      645F536F 
 2354      75726365 
 2354      5C50536F 
 2355              	.LASF47:
 2356 027b 4144435F 		.ascii	"ADC_SetGain\000"
 2356      53657447 
 2356      61696E00 
 2357              	.LASF15:
 2358 0287 666C6F61 		.ascii	"float\000"
 2358      7400
 2359              	.LASF42:
 2360 028d 68696768 		.ascii	"highLimit\000"
 2360      4C696D69 
 2360      7400
 2361              	.LASF49:
 2362 0297 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2362      436F756E 
 2362      7473546F 
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 60


 2362      5F6D566F 
 2362      6C747300 
 2363              	.LASF39:
 2364 02ab 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2364      5365744C 
 2364      6F774C69 
 2364      6D697400 
 2365              	.LASF1:
 2366 02bb 756E7369 		.ascii	"unsigned char\000"
 2366      676E6564 
 2366      20636861 
 2366      7200
 2367              	.LASF58:
 2368 02c9 4144435F 		.ascii	"ADC_offset\000"
 2368      6F666673 
 2368      657400
 2369              	.LASF2:
 2370 02d4 73686F72 		.ascii	"short int\000"
 2370      7420696E 
 2370      7400
 2371              	.LASF27:
 2372 02de 4144435F 		.ascii	"ADC_Stop\000"
 2372      53746F70 
 2372      00
 2373              	.LASF22:
 2374 02e7 63684E75 		.ascii	"chNum\000"
 2374      6D00
 2375              	.LASF34:
 2376 02ed 6368616E 		.ascii	"chan\000"
 2376      00
 2377              	.LASF18:
 2378 02f2 63686172 		.ascii	"char\000"
 2378      00
 2379              	.LASF56:
 2380 02f7 4144435F 		.ascii	"ADC_channelsConfig\000"
 2380      6368616E 
 2380      6E656C73 
 2380      436F6E66 
 2380      696700
 2381              	.LASF62:
 2382 030a 413A5C44 		.ascii	"A:\\Documents\\School\\ECEG-721_Embedded_Systems\\L"
 2382      6F63756D 
 2382      656E7473 
 2382      5C536368 
 2382      6F6F6C5C 
 2383 0339 6162735C 		.ascii	"abs\\Lab8\\BLE Lab 3\\BLE Lab 3.cydsn\000"
 2383      4C616238 
 2383      5C424C45 
 2383      204C6162 
 2383      20335C42 
 2384              	.LASF46:
 2385 035c 6F666673 		.ascii	"offset\000"
 2385      657400
 2386              	.LASF50:
 2387 0363 61646343 		.ascii	"adcCounts\000"
 2387      6F756E74 
 2387      7300
ARM GAS  C:\Users\Lucia\AppData\Local\Temp\ccrELwZw.s 			page 61


 2388              	.LASF26:
 2389 036d 4144435F 		.ascii	"ADC_Enable\000"
 2389      456E6162 
 2389      6C6500
 2390              	.LASF12:
 2391 0378 696E7431 		.ascii	"int16\000"
 2391      3600
 2392              	.LASF45:
 2393 037e 4144435F 		.ascii	"ADC_SetOffset\000"
 2393      5365744F 
 2393      66667365 
 2393      7400
 2394              	.LASF35:
 2395 038c 72657375 		.ascii	"result\000"
 2395      6C7400
 2396              	.LASF32:
 2397 0393 4144435F 		.ascii	"ADC_GetResult16\000"
 2397      47657452 
 2397      6573756C 
 2397      74313600 
 2398              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
